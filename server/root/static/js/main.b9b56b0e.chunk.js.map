{"version":3,"sources":["theme/palette.js","theme/index.js","common/RouteWithLayout/RouteWithLayout.js","common/DBController/DBController.js","images/logo/logo.png","layouts/Default/components/Menu/Menu.js","layouts/Default/components/SimpleMenu/SimpleMenu.js","layouts/Default/data/index.js","layouts/Default/Default.js","layouts/Minimal/Minimal.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/Main.js","pages/Home/Home.js","components/DesignTable/DesignTable.js","components/SimpleModal/SimpleModal.js","components/SimpleSelect/SimpleSelect.js","components/Tag/Tag.js","components/SimpleTable/SimpleTable.js","components/SimpleDialog/SimpleDialog.js","components/SimpleStepper/SimpleStepper.js","pages/AddPackage/AddPackage.js","pages/Packages/Packages.js","pages/AddProblem/AddProblem.js","pages/Problems/Problems.js","pages/Solving/Solving.js","pages/NotFoundCover/NotFoundCover.js","pages/SelectTags/SelectTags.js","pages/SelectProblems/SelectProblems.js","pages/Scoring/Scoring.js","pages/Assignments/Assignments.js","pages/MainRoom/MainRoom.js","pages/SelectPackage/SelectPackage.js","pages/SelectCourse/SelectCourse.js","lib/api/client.js","lib/api/allapi.js","components/course/CourseRoomForm.js","pages/MainRoomPage.js","components/auth/AuthTemplate.js","modules/loading.js","lib/createRequestSaga.js","lib/api/auth.js","modules/auth.js","lib/styles/palette.js","components/common/Button.js","components/auth/AuthForm.js","modules/user.js","containers/auth/LoginForm.js","pages/LoginPage.js","components/common/Responsive.js","components/common/Header.js","containers/common/HeaderContainer.js","pages/PostListPage.js","pages/QpListPage.js","pages/ReviseCoursePage.js","pages/AttendancePage.js","containers/auth/RegisterForm.js","pages/RegisterPage.js","pages/DeleteCoursePage.js","pages/RegisterCoursePage.js","pages/OpenCoursePage.js","pages/QpPage.js","components/comment/Comments.js","components/comment/ReadQuestion.js","pages/QpreadPage.js","pages/QpwritePage.js","components/chat/RoomLayout.js","components/chat/UserInfo.js","components/chat/Chat.js","pages/MainPage.js","pages/selectQuestionPage.js","pages/AnswerPage.js","pages/TablePage.js","pages/ReviseQuestion.js","Routes.js","App.js","modules/index.js","index.js"],"names":["white","black","alternate","secondary","main","success","contrastText","dark","colors","green","light","info","blue","warning","orange","error","red","text","primary","blueGrey","link","background","default","paper","icon","divider","grey","theme","responsiveFontSizes","createMuiTheme","palette","typography","fontFamily","zIndex","appBar","drawer","overrides","MuiButton","containedSecondary","color","RouteWithLayout","props","Layout","layout","Component","component","rest","render","matchProps","ip","getSession","a","axios","get","withCredentials","getData","url","callback","final","console","log","undefined","res","err","response","putData","params","put","then","catch","finally","deleteData","delete","postData","post","solveFile","problemCode","file","language","File","formData","FormData","append","Menu","list","pages","level","List","data","title","href","key","to","className","src","Logo","alt","length","map","obj","SimpleMenu","iconPath","mdiBookmarkMultipleOutline","mdiCodeBraces","mdiFolderGoogleDrive","path","size","Default","state","session","visibleMenu","toggleMenu","setState","isLogin","logout","window","location","tmp","this","children","history","push","auth","ref","right","onClick","mdiMenu","mdiBellRingOutline","mdiCog","mdiLogout","React","Minimal","makeStyles","root","boxShadow","borderBottom","flexGrow","navigationContainer","display","justifyContent","alignItems","toolbar","maxWidth","width","margin","padding","spacing","navLink","fontWeight","listItem","cursor","listItemActive","listItemText","flex","marginRight","whiteSpace","listItemButton","listItemIcon","minWidth","popover","border","marginTop","iconButton","expandOpen","transform","logoContainer","height","breakpoints","up","logoImage","menu","menuItem","menuGroupItem","paddingTop","menuGroupTitle","textTransform","Home","classes","label","variant","withStyles","thema","borderRadius","withTheme","paddingLeft","paddingRight","highlight","type","backgroundColor","lighten","marginBottom","table","visuallyHidden","clip","overflow","position","top","getModalStyle","left","useStyles","shadows","SimpleModal","open","close","body","useState","modalStyle","Modal","onClose","aria-labelledby","aria-describedby","style","BootstrapInput","input","fontSize","transition","transitions","create","join","borderColor","InputBase","SimpleSelect","items","start","changeEvent","FormControl","Select","labelId","id","onChange","value","item","MenuItem","Tag","code","Python","Ruby","Go","Java","JS","Kotlin","Swift","C","CPP","CS","mdiEmoticonConfused","getTagIcon","SimpleTable","heads","bodys","search","customEvent","infoEvent","deleteEvent","infoModal","printBody","printTags","tags","tag","printActions","mdiLightbulbOnOutline","mdiEyeOutline","mdiTrashCanOutline","searchFilter","head","data-id","SimpleDialog","Dialog","DialogTitle","DialogContent","DialogContentText","content","DialogActions","disagreeEvent","disagreeText","agreeEvent","autoFocus","agreeText","SimpleStepper","maxSteps","back","next","useTheme","activeStep","setActiveStep","MobileStepper","steps","nextButton","prevActiveStep","disabled","direction","KeyboardArrowLeft","KeyboardArrowRight","backButton","AddPackage","packageName","packageDesc","packageProblems","step","selectProblemsModal","setPackageProblems","packageCode","addPackageToDB","sendData","name","description","modifyPackageToDB","problems","problem","changeStep","now","isExistCode","openSelectProblemsModal","closeSelectProblemsModal","setProblems","onChangeName","e","target","onChangeDesc","printPackageForm","printNameForm","printDescForm","printSelectProblemForm","printCompleteBtn","placeholder","Packages","selectedCode","addPackageModal","infoPackageModal","deletePackageDialog","setBodys","openAddPackageModal","closeAddPackageModal","openInfoPackageModal","closeInfoPackageModal","openDeletePackageDialog","closeDeletePackageDialog","deleteAgree","deleteDisagree","startIcon","Add","AddProblem","problemType","problemName","problemDesc","problemRest","problemEntry","problemReturn","problemAnswer","problemParams","problemTestCases","problemTags","problemChoices","selectTagsModal","parseParams","parameters","JSON","parse","parameterNames","parameter_names","p","index","getTestCases","addProblemComplete","restriction","entry","return","param","stringify","answer","choices","newProblemCode","addNewTestCase","addNewTags","setTimeout","cases","modifyProblemComplete","getVariableTypes","isExistType","openSelectTagsModal","closeSelectTagsModal","setTags","pushParamsRow","copyParams","popParamsRow","pop","pushTestCaseRow","copyTestCase","output","visible","popTestCaseRow","pushChoiceRow","copyChoices","popChoiceRow","onChangeRest","onChangeEntry","onChangeAnswer","printTypeSelectForm","mdiLeadPencil","mdiRadioboxMarked","printProblemForm","printProgrammingForm","printShortForm","printMultipleForm","printRestForm","printEntryForm","printReturnForm","printParamForm","printTestCaseForm","printSelectTagForm","printAnswerForm","printChoiceForm","printReturnFormSub","event","mdiPlus","mdiMinus","printParamFormSub","tagName","printTestCaseFormSub","testCase","Checkbox","inputProps","checked","printChoiceFormSub","choice","parsed","Problems","selectedType","addProblemModal","infoProblemModal","deleteProblemDialog","isExistPackageCode","match","package_code","d","descriptionParse","isExistAssignmentCode","assignment_code","openAddProblemModal","closeAddProblemModal","openInfoProblemModal","closeInfoProblemModal","openDeleteProblemDialog","closeDeleteProblemDialog","deleteEventA","deleteEventB","deleteAgreeA","deleteAgreeB","contentPrefix","Solving","selectedLanguage","executeResult","testStart","split","srcFile","problem_code","result","sendResult","assignmentCode","goBack","getLanguageTypes","getDefaultCodeForm","onChangeCode","onChangeResult","printSolvingForm","printProgrammingSolvingForm","printShortSolvingForm","printMultipleSolvingForm","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","withRouter","SelectTags","selectList","selectTag","includes","selectComplete","SelectProblems","problemList","getProblemList","isSelected","isExist","selectProblem","Scoring","AddAssignment","package","modalFlag","createAssignment","courseCode","course","openModal","closeModal","printSelPacForm","setPackage","printCompleteForm","Assignments","modalFlagA","modalFlagB","dialogFlag","selectedAssignment","setBody","course_code","openModalA","closeModalA","openModalB","closeModalB","openDialog","dialogFlagA","closeDialog","dialogFlagB","AddCourse","desc","createCourse","QuestionManagement","assignments","selectedQuestion","questions","addQuestion","addAnswer","printAssignmentList","question","printQuestionList","printQuestionForm","assignment","MainRoom","courseList","modalFlagC","modalFlagD","selectedCourseCode","registCourse","openModalC","closeModalC","openModalD","closeModalD","printCourseCard","printIconButtons","userCode","user","authCode","mdiHeadQuestionOutline","mdiAccountCheckOutline","mdiGoogleClassroom","mdiClipboardText","setCourse","SelectPackage","packList","select","pack","SelectCourse","cour","client","getUserCourse","user_code","postCourse","courseName","reviseCourse","getRoomInfo","CreateRoom","submitValue","AllRoom","StudentAttend","AllAssign","getmyQuestion","createAnswer","question_code","CourseRoomFormBlock","styled","div","CourseRoomForm","CourseList","setCourseList","setID","setAuth","loading","setLoading","useEffect","fetchData","deleteButton","renderCardFoot","url8","url1","url2","url3","url4","renderbutton","marginLeft","CardGroup","Card","k","CardBody","CardTitle","CardSubtitle","CardText","MainRoomPageBlock","MainRoomPage","AuthTemplateBlock","WhiteBox","AuthTemplate","START_LOADING","FINISH_LOADING","startLoading","createAction","requestType","finishLoading","handleActions","action","payload","createRequestActionTypes","createRequestSaga","request","SUCCESS","FAILURE","call","meta","authSaga","CHANGE_FIELD","INITIALIZE_FORM","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","initializeForm","register","username","password","login","registerSaga","loginSaga","takeLatest","initialState","passwordConfirm","authError","produce","draft","gray","cyan","buttonStyle","css","fullWidth","StyledButton","button","StyledLink","Link","Button","AuthFormBlock","StyledInput","Footer","ButtonWithMarginTop","textMap","google","ErrorMessage","AuthForm","onSubmit","autoComplete","logoutSaga","userSaga","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","check","checkSaga","checkFailureSaga","localStorage","removeItem","authAPI","checkError","setError","dispatch","useDispatch","useSelector","setItem","preventDefault","LoginPage","ResponsiveBlock","Responsive","HeaderBlock","Wrapper","Spacer","UserInfo","Header","onLogout","HeaderContainer","PostListPageBlock","PostListPage","class","data-wow-delay","QpListPage","boards","handleChange","loadingData","Wrap","rows","ListItem","ReviseCoursePageBlock","ReviseCourseFormBlock","CourseContainerBlock","InformBox","ReviseCoursePage","setDescription","onChangeDescription","rel","for","cols","AttendTemplateBlock","TableBox","AttendFormBlock","AtttendancePage","rooms","setRooms","strooms","setSRooms","setTitle","setId","attendance","setAttend","response1","setIdText","setTitleText","setAttendText","save","reviseAttend","toUpperCase","class_time","attend_time","attend","htmlFor","NativeSelect","Input","status","RegisterPage","DeleteCourseBlock","DeleteCoursePage","courseItem","setList","usercode","setUserCode","getCourse","URL","alert","RegisterCoursePageBlock","StudentRegisterCourseBlock","RegisterCoursePage","setName","courseitem","setCourseitem","registerCourse","OpenCoursePageBlock","CourseFormBlock","OpenCoursePage","setDesc","preventdefault","affectedRows","QpPageBlock","QpFormBlock","QpPage","setProblemList","ListGroup","ListGroupItem","active","url_2","CommentsBlock","Comments","comments","handleSubmit","prevenDefault","comments_group","comm","i","comment","ReadQuestion","board","getID","UpdatePost","DeletePost","QpreadPageBlock","QpreadPage","QpwritePageBlock","QpwritePage","createQuestion","roomLayout","shape","fade","common","buttonGroup","makeRoom","enterRoom","GetRoomsInfo","isRoomLoaded","filter","room","roomName","indexOf","Paper","userInfo","nick","chattingRoom","chattingMessage","listStyleType","message","systemMsg","textAlign","myMsg","othersMsg","Msg","sendMessage","chattingMessages","num","setMessage","messagesEnd","createRef","handleSendMessage","scrollIntoView","behavior","chattingList","chatting","who","Box","time","float","clear","el","onKeyPress","charCode","MainPage","handleConnectSocket","socket","on","msg","handleGetMessageFromServer","emit","handleSendMessageToServer","Date","toLocaleTimeString","email","signal","messageObj","concat","enterRoomNum","room_code","pathname","io","transports","forceNew","SelectQuestionPageBlock","SelectQuestionPage","questionList","setQuestionList","assigncode","questioncode","AnswerPageBlock","AnswerPage","Assigncode","TablePageBlock","TablePage","auth_code","hour","setHour","min","setMin","renderBody","open_time","close_time","ReviseQuestion","reviseQuestion","Routes","exact","from","HomePage","MinimalLayout","PackagesPage","DefaultLayout","ProblemsPage","SolvingPage","ScoringPage","AssignmentsPage","NotFoundCoverPage","browserHistory","createBrowserHistory","listen","scrollTo","App","AOS","init","once","delay","duration","easing","ThemeProvider","basename","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9b56b0e.chunk.js","sourcesContent":["import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  alternate: 'rgb(247, 249, 250)',\n  secondary: {\n    main: '#F9B934',\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400],\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400],\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400],\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400],\n  },\n  text: {\n    primary: '#121037',\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600],\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white,\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200],\n};\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core';\n\nimport palette from './palette';\n\nconst theme = responsiveFontSizes(\n  createMuiTheme({\n    palette,\n    typography: {\n      fontFamily: 'Lato',\n    },\n    zIndex: {\n      appBar: 1200,\n      drawer: 1100,\n    },\n    overrides: {\n      MuiButton: {\n        containedSecondary: {\n          color: 'white',\n        },\n      },\n    },\n  }),\n);\n\nexport default theme;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst RouteWithLayout = props => {\n  const { layout: Layout, component: Component, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Layout>\n          <Component {...matchProps} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string,\n};\n\nexport default RouteWithLayout;\n","import axios from 'axios';\r\n\r\n//const ip = 'http://localhost:4000';\r\nconst ip = 'http://ddiggo.iptime.org';\r\nconst cookie = {\r\n  state: ''\r\n};\r\n\r\nconst paramsPrint = (obj) => {\r\n  return;\r\n  if(obj.url !== 'undefined') {\r\n    console.log('-- url:')\r\n    console.log(obj.url);\r\n  }\r\n  if(obj.params !== 'undefined') {\r\n    console.log('-- params:')\r\n    console.log(obj.params);\r\n  }\r\n  if(obj.callback !== 'undefined') {\r\n    console.log('-- callback:')\r\n    console.log(obj.callback);\r\n  }\r\n  if(obj.error !== 'undefined') {\r\n    console.log('-- error:')\r\n    console.log(obj.error);\r\n  }\r\n  if(obj.final !== 'undefined') {\r\n    console.log('-- final:')\r\n    console.log(obj.final);\r\n  }\r\n};\r\n\r\nexport const getSession = async(error) => {\r\n  try{\r\n    return await axios.get(ip + '/auth/session', { withCredentials: true })\r\n  }\r\n  catch (e){\r\n    error(e);\r\n  }\r\n};\r\n\r\nexport const getData = async (url, callback, error, final) => {\r\n  console.log('[ Get '+ url +' ]******************************');\r\n  paramsPrint({\r\n    url: url,\r\n    params: {},\r\n    callback: callback,\r\n    error: error,\r\n    final: final\r\n  });\r\n  // 초기화\r\n  if(callback === undefined || typeof callback !== 'function')\r\n    callback = (res) => {};\r\n  if(error === undefined || typeof error !== 'function')\r\n    error = (err) => {};\r\n  if(final === undefined || typeof final !== 'function')\r\n    final = () => {};\r\n\r\n  try{\r\n    const response = await axios.get(ip + url, { withCredentials: true })\r\n    callback(response);\r\n  }\r\n  catch (e){\r\n    error(e);\r\n  }\r\n  finally {\r\n    final();\r\n  }\r\n};\r\n\r\nexport const putData = (url, params, callback, error, final) => {\r\n  console.log('[ Put ]******************************');\r\n  paramsPrint({\r\n    url: url,\r\n    params: params,\r\n    callback: callback,\r\n    error: error,\r\n    final: final\r\n  });\r\n  // 초기화\r\n  if(params === undefined || typeof params !== 'object')\r\n    params = {};\r\n  if(callback === undefined || typeof callback !== 'function')\r\n    callback = (res) => {};\r\n  if(error === undefined || typeof error !== 'function')\r\n    error = (err) => {};\r\n  if(final === undefined || typeof final !== 'function')\r\n    final = () => {};\r\n\r\n  axios.put(ip + url, params, { withCredentials: true })\r\n      .then((res) => {\r\n        callback(res);\r\n      })\r\n      .catch((err) => {\r\n        error(err);\r\n      })\r\n      .finally(() => {\r\n        final();\r\n      });\r\n}\r\n\r\nexport const deleteData = (url, callback, error, final) => {\r\n  console.log('[ Delete ]******************************');\r\n  paramsPrint({\r\n    url: url,\r\n    params: {},\r\n    callback: callback,\r\n    error: error,\r\n    final: final\r\n  });\r\n  // 초기화\r\n  if(callback === undefined || typeof callback !== 'function')\r\n    callback = (res) => {};\r\n  if(error === undefined || typeof error !== 'function')\r\n    error = (err) => {};\r\n  if(final === undefined || typeof final !== 'function')\r\n    final = () => {};\r\n\r\n  axios.delete(ip + url, { withCredentials: true })\r\n      .then((res) => {\r\n        callback(res);\r\n      })\r\n      .catch((err) => {\r\n        error(err);\r\n      })\r\n      .finally(() => {\r\n        final();\r\n      });\r\n}\r\n\r\nexport const postData = (url, params, callback, error, final) => {\r\n  console.log('[ Post ]******************************');\r\n  paramsPrint({\r\n    url: url,\r\n    params: params,\r\n    callback: callback,\r\n    error: error,\r\n    final: final\r\n  });\r\n  // 초기화\r\n  if(params === undefined || typeof params !== 'object')\r\n    params = {};\r\n  if(callback === undefined || typeof callback !== 'function')\r\n    callback = (res) => {};\r\n  if(error === undefined || typeof error !== 'function')\r\n    error = (err) => {};\r\n  if(final === undefined || typeof final !== 'function')\r\n    final = () => {};\r\n\r\n  axios.post(ip + url, params, { withCredentials: true })\r\n    .then((res) => {\r\n      callback(res);\r\n    })\r\n    .catch((err) => {\r\n      error(err);\r\n    })\r\n    .finally(() => {\r\n      final();\r\n    });\r\n}\r\n\r\nexport const solveFile = (problemCode, file, language, callback, error, final) => {\r\n  if (!(file instanceof File)) {\r\n    error(\"parameter file must be a 'File' type\")\r\n  }\r\n  let formData = new FormData()\r\n  formData.append('source', file)\r\n\r\n  postData(\r\n    `/api/problem/${problemCode}/solve/${language}`,\r\n    formData,\r\n    callback,\r\n    error,\r\n    final,\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/logo.ab3a2bf6.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../../../../images/logo/logo.png';\r\n\r\n/* ----- Design Import ----- */\r\nimport './Menu.scss';\r\n\r\nconst Menu = props => {\r\n  const { pages, level } = props;\r\n\r\n  /* Component */\r\n  const List = props => {\r\n    const { data } = props;\r\n    if(data.title === undefined || data.href === undefined || data.key === undefined || data.level === undefined)\r\n      return null;\r\n    if(data.level > level)\r\n      return null;\r\n\r\n    return (\r\n      <Link to={data.href}>\r\n        <li key={data.key}>\r\n          <span>{ data.title }</span>\r\n        </li>\r\n      </Link>\r\n    )\r\n  }\r\n  List.propTypes =  {\r\n    data: PropTypes.object.isRequired\r\n  }\r\n\r\n  /* Method */\r\n  const printTitle = (title) => {\r\n    return (\r\n      <img className={'vertical-image'} src={ Logo }  alt={''}/>\r\n    );\r\n  }\r\n\r\n  const printList = (list) => {\r\n    if(list === undefined || list.length === 0)\r\n      return <ul />;\r\n\r\n    return (\r\n      <ul>\r\n        {pages.list.map((obj) => {\r\n          return (\r\n            <List data={obj}/>\r\n          )\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  /* Return */\r\n  return (\r\n    <div className={'wrap menu'}>\r\n      <div className={'top vertical-image-wrap'}>\r\n        { printTitle(pages.title) }\r\n      </div>\r\n      <div className={'text_menu'}>\r\n        { printList(pages.list) }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  pages: PropTypes.object.isRequired,\r\n  level: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from '@mdi/react';\r\nimport { Link } from 'react-router-dom';\r\nimport { mdiBookmarkMultipleOutline, mdiFolderGoogleDrive, mdiCodeBraces } from '@mdi/js';\r\n\r\n/* ----- Design Import ----- */\r\nimport './SimpleMenu.scss';\r\n\r\nconst SimpleMenu = props => {\r\n  const { pages, level } = props;\r\n\r\n  /* Component */\r\n  const List = props => {\r\n    const { data } = props;\r\n    if(data.icon === undefined || data.href === undefined || data.key === undefined || data.level === undefined)\r\n      return null;\r\n    if(data.level > level)\r\n      return null;\r\n\r\n    let iconPath;\r\n    switch (data.icon){\r\n      case 'mdiBookmarkMultipleOutline':\r\n        iconPath = mdiBookmarkMultipleOutline; break;\r\n      case 'mdiCodeBraces':\r\n        iconPath = mdiCodeBraces; break;\r\n      case 'mdiFolderGoogleDrive':\r\n        iconPath = mdiFolderGoogleDrive; break;\r\n      default:\r\n        return <li key={'undefined'} />;\r\n    }\r\n\r\n    return (\r\n      <Link to={data.href}>\r\n        <li key={data.key}>\r\n          <span><Icon path={iconPath} size={1} color={'white'} /></span>\r\n        </li>\r\n      </Link>\r\n    )\r\n  }\r\n  List.propTypes =  {\r\n    data: PropTypes.object.isRequired\r\n  }\r\n\r\n  /* Method */\r\n  const printTitle = (title) => {\r\n    if(title === undefined || title.icon === undefined)\r\n      return <span />;\r\n\r\n    return (\r\n      <span>{ title.icon }</span>\r\n    );\r\n  }\r\n\r\n  const printList = (list) => {\r\n    if(list === undefined || list.length === 0)\r\n      return <ul />;\r\n\r\n    return (\r\n      <ul>\r\n        {pages.list.map((obj) => {\r\n          return (\r\n            <List data={obj}/>\r\n          )\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  /* Return */\r\n  return (\r\n    <div className={'wrap simple_menu'}>\r\n      <div className={'top'}>\r\n        { printTitle(pages.title) }\r\n      </div>\r\n      <div className={'icon_menu'}>\r\n        { printList(pages.list) }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSimpleMenu.propTypes = {\r\n  pages: PropTypes.object.isRequired,\r\n  level: PropTypes.number.isRequired\r\n};\r\n\r\nexport default SimpleMenu;\r\n","export const pages = {\r\n  title: {\r\n    icon: ''\r\n  },\r\n  list: [\r\n    {\r\n      key: 'room',\r\n      title: '내 강의실',\r\n      icon: 'mdiBookmarkMultipleOutline',\r\n      href: '/mainroom',\r\n      level: '1'\r\n    },\r\n    {\r\n      key: 'packages',\r\n      title: '문제 패키지 관리',\r\n      icon: 'mdiFolderGoogleDrive',\r\n      href: '/packages',\r\n      level: '2'\r\n    },\r\n    {\r\n      key: 'problems',\r\n      title: '문제 관리',\r\n      icon: 'mdiCodeBraces',\r\n      href: '/problems',\r\n      level: '2'\r\n    }\r\n  ]\r\n};","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from '@mdi/react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { mdiMenu, mdiBellRingOutline , mdiCog, mdiLogout } from '@mdi/js';\r\n\r\n/* ----- Design Import ----- */\r\nimport './Default.scss';\r\nimport { SimpleMenu, Menu } from './components';\r\n\r\n/* ----- Data Import ----- */\r\nimport { pages } from './data'\r\nimport {getSession} from \"../../common\";\r\n\r\nclass Default extends React.Component {\r\n    state = {\r\n        session: {},\r\n        visibleMenu: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let tmp = await getSession(() => {\r\n        });\r\n        this.setState({session: tmp.data});\r\n    }\r\n\r\n    /* Method */\r\n    toggleMenu = () => {\r\n        this.setState({ visibleMenu: !this.state.visibleMenu });\r\n    }\r\n\r\n    isLogin = () => {\r\n        return true;\r\n    }\r\n\r\n    logout = () => {\r\n        // Delete Session\r\n        window.location.href = '/auth/logout';\r\n    }\r\n\r\n    render() {\r\n        const {children, history} = this.props;\r\n        const session = this.state.session.success;\r\n\r\n        if (!this.isLogin()) {\r\n            history.push('/');\r\n        }\r\n\r\n        return (\r\n            <div className={this.state.visibleMenu ? 'layout default' : 'layout default hide_menu'}>\r\n                <div className={'box simple_menu'}>\r\n                    <SimpleMenu pages={pages} level={session ? session.auth.level : 1}/>\r\n                </div>\r\n                <div className={'box menu'}>\r\n                    <Menu pages={pages} ref={right => this.right = right} level={session ? session.auth.level : 1}/>\r\n                </div>\r\n                <div className={'box info flex-align middle'}>\r\n                        <span className={'menu_btn'}>\r\n                            <button onClick={this.toggleMenu} className={'icon_btn'}><Icon path={mdiMenu} size={1.0} color={'black'}/></button>\r\n                        </span>\r\n                    <span className={'my_info'}>\r\n                            <em>CJG</em>\r\n                        </span>\r\n                    <span className={'my_icons'}>\r\n                            <button className={'icon_btn'}><Icon path={mdiBellRingOutline} size={1} color={'#91979D'}/></button>\r\n                            <button className={'icon_btn'}><Icon path={mdiCog} size={1} color={'#91979D'}/></button>\r\n                            <button onClick={this.logout} className={'icon_btn'}><Icon path={mdiLogout} size={1} color={'#F06B78'}/></button>\r\n                        </span>\r\n                </div>\r\n                <div className={'box stepper'}>\r\n\r\n                </div>\r\n                <div className={'box contents'}>\r\n                    <main className={'main'}>{children}</main>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDefault.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Default;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Minimal = props => {\r\n    const { children, className } = props;\r\n\r\n    return (\r\n        <div className={'wrap'}>\r\n            <main className={'wrap'}>{children}</main>\r\n        </div>\r\n    );\r\n};\r\n\r\nMinimal.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default Minimal;\r\n","import React, { forwardRef, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Popover,\r\n  Typography,\r\n  Button,\r\n  colors,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport Logo from '../../../../images/logo/logo.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    boxShadow: 'none',\r\n    background: theme.palette.white,\r\n    borderBottom: `1px solid ${colors.grey[200]}`,\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1,\r\n  },\r\n  navigationContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  toolbar: {\r\n    maxWidth: 1100,\r\n    width: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  navLink: {\r\n    fontWeight: 300,\r\n    '&:hover': {\r\n      color: theme.palette.primary.dark,\r\n    },\r\n  },\r\n  listItem: {\r\n    cursor: 'pointer',\r\n    '&:hover > .menu-item, &:hover svg': {\r\n      color: theme.palette.primary.dark,\r\n    },\r\n  },\r\n  listItemActive: {\r\n    '&> .menu-item': {\r\n      color: theme.palette.primary.dark,\r\n    },\r\n  },\r\n  listItemText: {\r\n    flex: '0 0 auto',\r\n    marginRight: theme.spacing(2),\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  listItemButton: {\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  listItemIcon: {\r\n    minWidth: 'auto',\r\n  },\r\n  popover: {\r\n    padding: theme.spacing(4),\r\n    border: theme.spacing(2),\r\n    boxShadow: '0 0.5rem 2rem 2px rgba(116, 123, 144, 0.09)',\r\n    minWidth: 350,\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  iconButton: {\r\n    padding: 0,\r\n    '&:hover': {\r\n      background: 'transparent',\r\n    },\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  logoContainer: {\r\n    width: 100,\r\n    height: 28,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 120,\r\n      height: 32,\r\n    },\r\n  },\r\n  logoImage: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  menu: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  menuItem: {\r\n    marginRight: theme.spacing(5),\r\n    '&:last-child': {\r\n      marginRight: 0,\r\n    },\r\n  },\r\n  menuGroupItem: {\r\n    paddingTop: 0,\r\n  },\r\n  menuGroupTitle: {\r\n    textTransform: 'uppercase',\r\n  },\r\n}));\r\n\r\nconst CustomRouterLink = forwardRef((props, ref) => (\r\n  <div ref={ref}>\r\n    <RouterLink {...props} />\r\n  </div>\r\n));\r\n\r\nconst Topbar = props => {\r\n  const { className, onSidebarOpen, pages, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openedPopoverId, setOpenedPopoverId] = useState(null);\r\n\r\n  const handleClick = (event, popoverId) => {\r\n    setAnchorEl(event.target);\r\n    setOpenedPopoverId(popoverId);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    setOpenedPopoverId(null);\r\n  };\r\n\r\n  const landings = pages.landings;\r\n  const supportedPages = pages.pages;\r\n  const account = pages.account;\r\n\r\n  const MenuGroup = props => {\r\n    const { item } = props;\r\n    return (\r\n      <List disablePadding>\r\n        <ListItem disableGutters>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"primary\"\r\n            className={classes.menuGroupTitle}\r\n          >\r\n            {item.groupTitle}\r\n          </Typography>\r\n        </ListItem>\r\n        {item.pages.map((page, i) => (\r\n          <ListItem disableGutters key={i} className={classes.menuGroupItem}>\r\n            <Typography\r\n              variant=\"body1\"\r\n              component={CustomRouterLink}\r\n              to={page.href}\r\n              className={clsx(classes.navLink, 'submenu-item')}\r\n              color=\"textSecondary\"\r\n              onClick={handleClose}\r\n            >\r\n              {page.title}\r\n            </Typography>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  const LandingPages = () => {\r\n    const { services, apps, web } = landings.children;\r\n    return (\r\n      <div className={classes.menu}>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={services} />\r\n          <MenuGroup item={apps} />\r\n        </div>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={web} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const SupportedPages = () => {\r\n    const {\r\n      career,\r\n      helpCenter,\r\n      company,\r\n      contact,\r\n      blog,\r\n      portfolio,\r\n    } = supportedPages.children;\r\n    return (\r\n      <div className={classes.menu}>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={career} />\r\n          <MenuGroup item={helpCenter} />\r\n        </div>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={company} />\r\n          <MenuGroup item={contact} />\r\n        </div>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={blog} />\r\n          <MenuGroup item={portfolio} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const AccountPages = () => {\r\n    const { settings, signup, signin, password, error } = account.children;\r\n    return (\r\n      <div className={classes.menu}>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={settings} />\r\n        </div>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={signup} />\r\n          <MenuGroup item={signin} />\r\n        </div>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={password} />\r\n          <MenuGroup item={error} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderPages = id => {\r\n    if (id === 'landing-pages') {\r\n      return <LandingPages />;\r\n    }\r\n    if (id === 'supported-pages') {\r\n      return <SupportedPages />;\r\n    }\r\n    if (id === 'account') {\r\n      return <AccountPages />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      {...rest}\r\n      position=\"relative\"\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Toolbar disableGutters className={classes.toolbar}>\r\n        <div className={classes.logoContainer}>\r\n          <a href=\"/\" title=\"Coditnator\">\r\n            <img src={Logo}  alt={'Coditnator'} className={'logo'}/>\r\n          </a>\r\n        </div>\r\n        <div className={classes.flexGrow} />\r\n        <List className={classes.navigationContainer}>\r\n          {[landings, supportedPages, account].map((page, i) => (\r\n            <div key={page.id}>\r\n              <ListItem\r\n                aria-describedby={page.id}\r\n                onClick={e => handleClick(e, page.id)}\r\n                className={clsx(\r\n                  classes.listItem,\r\n                  openedPopoverId === page.id ? classes.listItemActive : '',\r\n                )}\r\n              >\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  color=\"textSecondary\"\r\n                  className={clsx(classes.listItemText, 'menu-item')}\r\n                >\r\n                  {page.title}\r\n                </Typography>\r\n                <ListItemIcon className={classes.listItemIcon}>\r\n                  <ExpandMoreIcon\r\n                    className={\r\n                      openedPopoverId === page.id ? classes.expandOpen : ''\r\n                    }\r\n                    fontSize=\"small\"\r\n                  />\r\n                </ListItemIcon>\r\n              </ListItem>\r\n              <Popover\r\n                elevation={1}\r\n                id={page.id}\r\n                open={openedPopoverId === page.id}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'center',\r\n                }}\r\n                classes={{ paper: classes.popover }}\r\n              >\r\n                <div>{renderPages(page.id)}</div>\r\n              </Popover>\r\n            </div>\r\n          ))}\r\n          <ListItem className={classes.listItem}>\r\n            <Button\r\n              size=\"medium\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component=\"a\"\r\n              target=\"blank\"\r\n              href=\"#\"\r\n              className={classes.listItemButton}\r\n            >\r\n              Login\r\n            </Button>\r\n          </ListItem>\r\n        </List>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopbar.propTypes = {\r\n  className: PropTypes.string,\r\n  onSidebarOpen: PropTypes.func,\r\n  pages: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Topbar;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { Topbar } from './components';\r\n\r\nimport { pages } from './data';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nconst Main = props => {\r\n    const { children } = props;\r\n    const classes = useStyles();\r\n    const [openSidebar, setOpenSidebar] = useState(false);\r\n\r\n    const handleSidebarOpen = () => {\r\n        setOpenSidebar(true);\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={clsx({\r\n            [classes.root]: true,\r\n        })}\r\n      >\r\n          <Topbar onSidebarOpen={handleSidebarOpen} pages={pages} />\r\n          <main>{children}</main>\r\n      </div>\r\n    );\r\n};\r\n\r\nMain.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nimport './Home.scss';\r\nimport Logo from '../../images/logo/logo.png';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Add as AddIcon} from \"@material-ui/icons\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        padding: '5px 10px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n});\r\n\r\nclass Home extends React.Component {\r\n\r\n  render() {\r\n      const { classes } = this.props;\r\n      return (\r\n          <div className={'page home'}>\r\n              <div>\r\n                  <img className={'home_logo'} src={Logo} alt={''} />\r\n              </div>\r\n              <div>\r\n                  <Link to={'/auth/login'}>\r\n                      <Button\r\n                          onClick={() => {}}\r\n                          classes={{\r\n                              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                          }}\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                      >\r\n                          로그인\r\n                      </Button>\r\n                  </Link>\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(Home);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Toolbar,\r\n  Typography,\r\n  Paper,\r\n  Checkbox,\r\n  IconButton,\r\n  Tooltip,\r\n  FormControlLabel,\r\n  Switch\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  Delete,\r\n  FilterList\r\n} from '@material-ui/icons';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n  headCells: PropTypes.array.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, title } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {title}\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <Delete />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterList />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst DesignTable = (props) =>  {\r\n  const { title, headCells, rows, rowsPerPageOptions, denseFlag } = props;\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(denseFlag != null ? denseFlag : false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} title={title} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n              headCells={headCells}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerPageOptions}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nDesignTable.propTypes = {\r\n  title: PropTypes.string,\r\n  headCells: PropTypes.array.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  rowsPerPageOptions: PropTypes.array.isRequired,\r\n  denseFlag: PropTypes.bool\r\n};\r\n\r\nexport default DesignTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SimpleModal.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 'content-box',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n  },\r\n}));\r\n\r\nconst SimpleModal = props => {\r\n  /* Props */\r\n  const { title, open, close, body } = props;\r\n\r\n  /* Const */\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={close}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        {typeof title === 'string' ? <div className={'modal_title'}>\r\n          { title }\r\n        </div> : null}\r\n        <div className={'modal_body'}>\r\n          { body }\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nSimpleModal.propTypes = {\r\n  title: PropTypes.string,\r\n  open: PropTypes.bool.isRequired,\r\n  close: PropTypes.func.isRequired,\r\n  body: PropTypes.element.isRequired\r\n};\r\n\r\nexport default SimpleModal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SimpleSelect.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {\r\n  InputLabel,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputBase\r\n} from '@material-ui/core';\r\n\r\n/* Custom Import */\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 13,\r\n    padding: '10px 15px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  size: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\n/* *** Change Event ***\r\nconst handleChange = (event) => {\r\n  setAge(event.target.value);\r\n};\r\n*/\r\n\r\nconst SimpleSelect = props => {\r\n  /* Props */\r\n  const { title, items, start, changeEvent } = props;\r\n\r\n  /* Const */\r\n  const classes = useStyles();\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  const printMenuItem = () => {\r\n    return items.map((item) => {\r\n      if(item.value === undefined || typeof item.value !== 'string')\r\n        return null;\r\n      else if(item.label === undefined || typeof item.value !== 'string')\r\n        return null;\r\n      return <MenuItem value={ item.value }>{ item.label }</MenuItem>\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormControl className={classes.size}>\r\n      <Select\r\n        labelId=\"demo-customized-select-label\"\r\n        id=\"demo-customized-select\"\r\n        onChange={changeEvent}\r\n        value={start}\r\n        input={<BootstrapInput />}\r\n      >\r\n        { printMenuItem() }\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nSimpleSelect.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  items: PropTypes.array.isRequired,\r\n  start: PropTypes.any.isRequired,\r\n  changeEvent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SimpleSelect;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './Tag.scss';\r\n\r\n/* Icon Import */\r\n// Python, Ruby, Go, Java, JS, Kotlin, Swift, C, CPP, CS\r\nimport {\r\n  mdiLanguagePython as Python,\r\n  mdiLanguageRuby as Ruby,\r\n  mdiLanguageGo as Go,\r\n  mdiLanguageJava as Java,\r\n  mdiLanguageJavascript as JS,\r\n  mdiLanguageKotlin as Kotlin,\r\n  mdiLanguageSwift as Swift,\r\n  mdiLanguageC as C,\r\n  mdiLanguageCpp as CPP,\r\n  mdiLanguageCsharp as CS,\r\n  mdiEmoticonConfused\r\n} from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\n\r\nconst Tag = props => {\r\n  const { code, size } = props;\r\n\r\n  /* Method */\r\n  const getTagIcon = () => {\r\n    switch (code) {\r\n      case 'Python': return <Icon className=\"icon\" path={ Python } size={size}/>;\r\n      case 'Ruby': return <Icon className=\"icon\" path={ Ruby } size={size}/>;\r\n      case 'Go': return <Icon className=\"icon\" path={ Go } size={size}/>;\r\n      case 'Java': return <Icon className=\"icon\" path={ Java } size={size}/>;\r\n      case 'JS': return <Icon className=\"icon\" path={ JS } size={size}/>;\r\n      case 'Kotlin': return <Icon className=\"icon\" path={ Kotlin } size={size}/>;\r\n      case 'Swift': return <Icon className=\"icon\" path={ Swift } size={size}/>;\r\n      case 'C': return <Icon className=\"icon\" path={ C } size={size}/>;\r\n      case 'CPP': return <Icon className=\"icon\" path={ CPP } size={size}/>;\r\n      case 'CS': return <Icon className=\"icon\" path={ CS } size={size}/>;\r\n      default: return <Icon className=\"icon\" path={ mdiEmoticonConfused } size={0.7}/>\r\n    }\r\n  };\r\n\r\n  return (\r\n    <span className={'tag'}>\r\n      {getTagIcon()}\r\n    </span>\r\n  );\r\n};\r\n\r\nTag.propTypes = {\r\n  code: PropTypes.string.isRequired,\r\n  size: PropTypes.number.isRequired\r\n};\r\n\r\n\r\nexport default Tag;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Icon Import */\r\nimport {\r\n  mdiLightbulbOnOutline,\r\n  mdiEyeOutline,\r\n  mdiTrashCanOutline\r\n} from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\n\r\n/* Design Import */\r\nimport './SimpleTable.scss';\r\nimport Tag from \"../Tag\";\r\nimport {AddTags} from \"../../pages\";\r\nimport {SimpleModal} from \"../index\";\r\nimport {render} from \"@testing-library/react\";\r\n\r\nconst SimpleTable = props => {\r\n  /* Props */\r\n  const { heads, bodys, search, customEvent, infoEvent, deleteEvent, infoModal } = props;\r\n\r\n  /* Const */\r\n\r\n  /* Method */\r\n  const searchFilter = () => {\r\n    if(search === undefined || search === '') return null;\r\n  };\r\n\r\n  const printHeads = () => {\r\n    return (\r\n      <tr>\r\n        {heads.map((head) => {\r\n          return (<th data-id={ head.id }>{ head.label }</th>);\r\n        })}\r\n        <th>Actions</th>\r\n      </tr>\r\n    );\r\n  };\r\n  const printBodys = () => {\r\n    return bodys.map((body) => {\r\n      return (\r\n        <tr>\r\n          {heads.map((head) => {\r\n            return printBody(body, head.id);\r\n          })}\r\n          {printActions(body)}\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  const printBody = (body, id) => {\r\n    if(id === 'tags'){\r\n      return printTags(body[id]);\r\n    }\r\n    return (<td>{ body[id] }</td>);\r\n  };\r\n  const printTags = (tags) => {\r\n    return (\r\n      <td>\r\n        {tags !== undefined ? tags.map((tag) => {\r\n          return <Tag code={tag} size={0.7} />;\r\n        }) : null}\r\n      </td>\r\n    );\r\n  };\r\n  const printActions = (body) => {\r\n    return (\r\n      <td>\r\n        {typeof customEvent === 'function' ? <button onClick={() => { customEvent(body) }} className={'icon_btn'}><Icon className=\"icon\" path={ mdiLightbulbOnOutline } size={0.7}/></button> : null}\r\n        {typeof infoEvent === 'function' ? <button onClick={() => { infoEvent(body) }} className={'icon_btn'}><Icon className=\"icon\" path={ mdiEyeOutline } size={0.7}/></button> : null}\r\n        {typeof deleteEvent === 'function' ? <button onClick={() => { deleteEvent(body) }} className={'icon_btn'}><Icon className=\"icon\" path={ mdiTrashCanOutline } size={0.7}/></button> : null}\r\n      </td>\r\n    );\r\n  }\r\n\r\n  searchFilter();\r\n\r\n  return (\r\n    <div className={'simple_table'}>\r\n      <table>\r\n        <thead>\r\n        {printHeads()}\r\n        </thead>\r\n        <tbody>\r\n        {printBodys()}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        {infoModal !== 'undefined' ? infoModal : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSimpleTable.propTypes = {\r\n  heads: PropTypes.array.isRequired,\r\n  bodys: PropTypes.array.isRequired,\r\n  search: PropTypes.string,\r\n  customEvent: PropTypes.func,\r\n  infoEvent: PropTypes.func,\r\n  deleteEvent: PropTypes.func,\r\n  infoModal: PropTypes.element\r\n};\r\n\r\n\r\nexport default SimpleTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SimpleDialog.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from '@material-ui/core';\r\n\r\n/* Custom Import */\r\n\r\nconst SimpleDialog = props => {\r\n  /* Props */\r\n  const { open, onClose, data } = props;\r\n\r\n  /* Const */\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{data.title !== 'undefined' ? data.title : null}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {data.content !== 'undefined' ? data.content : null}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={data.disagreeEvent !== 'undefined' ? data.disagreeEvent : onClose()} color=\"primary\">\r\n          {data.disagreeText !== 'undefined' ? data.disagreeText : null}\r\n        </Button>\r\n        <Button onClick={data.agreeEvent !== 'undefined' ? data.agreeEvent : onClose()} color=\"primary\" autoFocus>\r\n          {data.agreeText !== 'undefined' ? data.agreeText : null}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nSimpleDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default SimpleDialog;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SimpleStepper.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  MobileStepper,\r\n  Button\r\n} from '@material-ui/core';\r\nimport {\r\n  KeyboardArrowLeft,\r\n  KeyboardArrowRight\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst SimpleStepper = props => {\r\n  /* Props */\r\n  const { maxSteps, back, next } = props;\r\n\r\n  /* Const */\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  const handleBack = () => {\r\n    if (typeof back === 'function') {\r\n      back(activeStep - 1);\r\n    }\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n  };\r\n  const handleNext = () => {\r\n    if(typeof next === 'function') {\r\n      next(activeStep + 1);\r\n    }\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant=\"dots\"\r\n      steps={maxSteps}\r\n      position=\"static\"\r\n      activeStep={activeStep}\r\n      className={classes.root}\r\n      nextButton={\r\n        <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps-1}>\r\n          Next\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nSimpleStepper.propTypes = {\r\n  maxSteps: PropTypes.number.isRequired,\r\n  back: PropTypes.func,\r\n  next: PropTypes.func\r\n};\r\n\r\nexport default SimpleStepper;\r\n","import React from 'react';\r\n\r\n/* Design Import */\r\nimport './AddPackage.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Icon Import */\r\nimport {\r\n  mdiCodeBraces,\r\n  mdiLeadPencil ,\r\n  mdiRadioboxMarked,\r\n  mdiPlus,\r\n  mdiMinus\r\n} from '@mdi/js';\r\nimport Icon from \"@mdi/react\";\r\n\r\n/* Material Import */\r\nimport {\r\n  Button,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n/* Custom Import */\r\nimport {SimpleModal} from \"../../components\";\r\nimport SimpleStepper from \"../../components/SimpleStepper\";\r\nimport {SelectProblems} from \"../index\";\r\nimport { getData, postData, putData } from '../../common'\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass AddPackage extends React.Component {\r\n  /* State */\r\n  state = {\r\n    packageName: '',\r\n    packageDesc: '',\r\n    packageProblems: [],\r\n    step: 0,\r\n    selectProblemsModal: false\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  /* Component Did Mount */\r\n  async componentDidMount() {\r\n    if(this.isExistCode()) {\r\n      const packageCode = this.props.code;\r\n      await getData(`/api/package/${packageCode}`, (res) => {\r\n        const data = res.data.success;\r\n        this.setState({\r\n          packageName: data.name,\r\n          packageDesc: data.description,\r\n        });\r\n        this.setPackageProblems();\r\n      }, (err) => {\r\n        console.log('Error ++++++++++');\r\n      });\r\n    }\r\n  }\r\n\r\n  setPackageProblems = async () => {\r\n    const packageCode = this.props.code;\r\n    let data = [];\r\n    await getData(`/api/package/${packageCode}/problem`, (res) => {\r\n      const data = res.data.success;\r\n      this.setState({\r\n        packageProblems: data,\r\n      });\r\n    }, (err) => {\r\n      console.log('Error ++++++++++');\r\n    });\r\n  };\r\n\r\n  addPackageToDB = () => {\r\n    // Package 추가 (이름, 설명)\r\n    let sendData = {\r\n      name: this.state.packageName,\r\n      description: this.state.packageDesc\r\n    }\r\n\r\n    console.log('+++++++++++++++++++++++');\r\n    console.log(sendData);\r\n    console.log('+++++++++++++++++++++++');\r\n\r\n    postData('/api/package', sendData, (res) => {\r\n\r\n    }, (err) => {\r\n\r\n    });\r\n\r\n    this.props.close(); // Modal Close\r\n  };\r\n  modifyPackageToDB = () => {\r\n    // Package 수정 (이름, 설명)\r\n    let sendData = {\r\n      name: this.state.packageName,\r\n      description: this.state.packageDesc\r\n    };\r\n\r\n    console.log('+++++++++++++++++++++++');\r\n    console.log(sendData);\r\n    console.log('+++++++++++++++++++++++');\r\n\r\n    const packageCode = this.props.code;\r\n    putData(`/api/package/${packageCode}`, sendData, (res) => {\r\n      console.log('Complete ++++++++++');\r\n    }, (err) => {\r\n\r\n    });\r\n\r\n    // Package 수정 (Package 에 속하는 문제 추가)\r\n    let problems = [];\r\n    this.state.packageProblems.map((problem) => {\r\n      problems.push(problem.code);\r\n    });\r\n\r\n    sendData = {\r\n      problems: problems\r\n    };\r\n    console.log('+++++++++++++++++++++++');\r\n    console.log(sendData);\r\n    console.log('+++++++++++++++++++++++');\r\n\r\n    postData(`/api/package/${packageCode}/problem`, sendData, (res) => {\r\n      /*\r\n      {\r\n        total : true,\r\n            each : [{\r\n        success : {},\r\n        fail :\r\n      }]\r\n      }\r\n      */\r\n    }, (err) => {\r\n\r\n    });\r\n\r\n\r\n    this.props.close(); // Modal Close\r\n  }\r\n\r\n  changeStep = (now) => {\r\n    this.setState({ step: now });\r\n  }\r\n\r\n  isExistCode = () => {\r\n    return typeof this.props.code === 'string';\r\n  }\r\n\r\n  openSelectProblemsModal = () => {\r\n    this.setState({ selectProblemsModal: true });\r\n  };\r\n  closeSelectProblemsModal = () => {\r\n    this.setState({ selectProblemsModal: false });\r\n  };\r\n\r\n  setProblems = (problems) => {\r\n    this.setState({ packageProblems: problems });\r\n  };\r\n\r\n  onChangeName = (e) => {\r\n    this.setState({ packageName: e.target.value });\r\n  };\r\n  onChangeDesc = (e) => {\r\n    this.setState({ packageDesc: e.target.value });\r\n  };\r\n\r\n  printPackageForm  = () => {\r\n    return (\r\n      <div className={'package_form'}>\r\n        <table>\r\n          {this.state.step === 0 ? this.printNameForm() : null}\r\n          {this.state.step === 1 ? this.printDescForm() : null}\r\n          {this.state.step === 2 && this.isExistCode() ? this.printSelectProblemForm() : null}\r\n          {this.state.step === (this.isExistCode() ? 3 : 2) ? this.printCompleteBtn() : null}\r\n        </table>\r\n        <div className={'stepper'}>\r\n          <SimpleStepper maxSteps={this.isExistCode() ? 4 : 3} next={this.changeStep} back={this.changeStep} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  printNameForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>패키지 명칭</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <input\r\n            type={'text'}\r\n            className={'design_form input_A necessary name'}\r\n            placeholder={'Name'}\r\n            value={this.state.packageName}\r\n            onChange={this.onChangeName}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printDescForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>패키지 설명</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <textarea\r\n            className={'design_form textarea_A necessary description'}\r\n            placeholder={'Description'}\r\n            value={this.state.packageDesc}\r\n            onChange={this.onChangeDesc}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printSelectProblemForm = () => {\r\n    /* Props */\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <td>\r\n          <Button\r\n            onClick={this.openSelectProblemsModal}\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            <em>문제 선택</em>\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          {this.state.packageProblems.map((problem) => {\r\n            return <span className={'problem'}>{ problem.name }</span>;\r\n          })}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <SimpleModal\r\n            open={this.state.selectProblemsModal}\r\n            close={this.closeSelectProblemsModal}\r\n            body={<SelectProblems close={this.closeSelectProblemsModal} setProblems={this.setProblems} code={this.props.code} />}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printCompleteBtn = () => {\r\n    /* Props */\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <td>\r\n          <Button\r\n            onClick={this.isExistCode() ? this.modifyPackageToDB : this.addPackageToDB}\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            <em>{this.isExistCode() ? '수정 완료' : '추가 완료' }</em>\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n\r\n  render () {\r\n\r\n    return (\r\n      <div className={'page_modal add_package_modal'}>\r\n        {this.printPackageForm()}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nAddPackage.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  code: PropTypes.string\r\n};\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(AddPackage);\r\n","import React from 'react'\r\n\r\n/* Design Import */\r\nimport './Packages.scss';\r\n\r\n/* Material Import */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\nimport {\r\n  SimpleTable,\r\n  SimpleModal\r\n} from '../../components';\r\nimport AddPackage from '../AddPackage';\r\nimport { getData, deleteData } from '../../common'\r\n\r\n/* Data Import */\r\nimport { rows } from './data/index';\r\nimport SimpleDialog from \"../../components/SimpleDialog\";\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass Packages extends React.Component {\r\n  state = {\r\n    selectedCode: '',\r\n    addPackageModal: false,\r\n    infoPackageModal: false,\r\n    deletePackageDialog: false,\r\n    heads: [\r\n      { id: 'name',        label: '명칭'},\r\n      { id: 'description', label: '설명'},\r\n      { id: 'count',       label: '문제 개수'},\r\n    ],\r\n    bodys: []\r\n  }\r\n  /* Component Did Mount */\r\n  componentDidMount() {\r\n    this.setBodys();\r\n  }\r\n\r\n  /* Method */\r\n  setBodys = async () => {\r\n    // Package 목록 정보 불러오기\r\n    await getData('/api/package', (res) => {\r\n      this.setState({ bodys: res.data.success });\r\n    }, (err) => {\r\n      this.setState({ bodys: [] });\r\n      console.log('Error ++++++++++');\r\n    });\r\n  };\r\n\r\n  openAddPackageModal = () => {\r\n    this.setState({ addPackageModal: true });\r\n  };\r\n  closeAddPackageModal = () => {\r\n    this.setState({ addPackageModal: false });\r\n    this.setBodys();\r\n  };\r\n\r\n  openInfoPackageModal = () => {\r\n    this.setState({ infoPackageModal: true });\r\n  };\r\n  closeInfoPackageModal = () => {\r\n    this.setState({ infoPackageModal: false });\r\n    this.setBodys();\r\n  };\r\n\r\n  openDeletePackageDialog = () => {\r\n    this.setState({ deletePackageDialog: true });\r\n  }\r\n  closeDeletePackageDialog = () => {\r\n    this.setState({ deletePackageDialog: false });\r\n  };\r\n\r\n  customEvent = (body) => {\r\n    const { history } = this.props;\r\n    history.push('/problems/' + body.code);\r\n  }\r\n\r\n  deleteEvent = (body) => {\r\n    this.setState({ selectedCode: body.code });\r\n    this.openDeletePackageDialog();\r\n  };\r\n\r\n  deleteAgree = () => {\r\n    // Package 삭제\r\n    const packageCode = this.state.selectedCode;\r\n    deleteData(`/api/package/${packageCode}`, (res) => {\r\n      // Package 목록 정보 다시 불러오기\r\n      this.setBodys();\r\n      this.closeDeletePackageDialog();\r\n    }, (err) => {\r\n\r\n    });\r\n  };\r\n\r\n  deleteDisagree = () => {\r\n    this.closeDeletePackageDialog();\r\n  };\r\n\r\n  infoEvent = (body) => {\r\n    this.setState({ selectedCode: body.code })\r\n    this.openInfoPackageModal();\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    /* Props */\r\n    const { classes, history } = this.props;\r\n\r\n    return (\r\n      <div className={'page packages'}>\r\n        <div className={'content'}>\r\n          <div className={'search_box'}>\r\n\r\n          </div>\r\n          <div className={'btn_box'}>\r\n            <Button\r\n              onClick={this.openAddPackageModal}\r\n              classes={{\r\n                root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              startIcon={<AddIcon>send</AddIcon>}\r\n            >\r\n              패키지 추가\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className={'content package_table'}>\r\n          <SimpleTable\r\n            heads={this.state.heads}\r\n            bodys={this.state.bodys}\r\n            customEvent={this.customEvent}\r\n            deleteEvent={this.deleteEvent}\r\n            infoEvent={this.infoEvent}\r\n            infoModal={\r\n              <SimpleModal\r\n                title={'패키지 수정'}\r\n                open={this.state.infoPackageModal}\r\n                close={this.closeInfoPackageModal}\r\n                body={<AddPackage close={this.closeInfoPackageModal} code={this.state.selectedCode}/>}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <SimpleModal\r\n          title={'패키지 추가'} open={this.state.addPackageModal}\r\n          close={this.closeAddPackageModal}\r\n          body={<AddPackage close={this.closeAddPackageModal}/>}\r\n        />\r\n        <SimpleDialog\r\n          open={this.state.deletePackageDialog}\r\n          onClose={this.closeDeletePackageDialog}\r\n          data={{\r\n            title: '패키지 삭제',\r\n            content: this.state.selectedCode + ' 패키지를 삭제하시겠습니까?',\r\n            agreeText: 'YES',\r\n            disagreeText: 'NO',\r\n            agreeEvent: this.deleteAgree,\r\n            disagreeEvent: this.deleteDisagree\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(Packages);\r\n","import React from 'react';\r\n\r\n/* Design Import */\r\nimport './AddProblem.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Icon Import */\r\nimport {\r\n  mdiCodeBraces,\r\n  mdiLeadPencil ,\r\n  mdiRadioboxMarked,\r\n  mdiPlus,\r\n  mdiMinus\r\n} from '@mdi/js';\r\nimport Icon from \"@mdi/react\";\r\n\r\n/* Material Import */\r\nimport {\r\n  Button,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n/* Custom Import */\r\nimport {SimpleModal, SimpleSelect, Tag} from \"../../components\";\r\nimport SimpleStepper from \"../../components/SimpleStepper\";\r\nimport {SelectTags} from \"../index\";\r\nimport { getData, postData, putData, deleteData } from '../../common'\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass AddProblem extends React.Component {\r\n  /* State */\r\n  state = {\r\n    problemType: '',\r\n    problemName: '',\r\n    problemDesc: '',\r\n    problemRest: '',\r\n    problemEntry: '',\r\n    problemReturn: '',\r\n    problemAnswer: '',\r\n    problemParams: [],\r\n    problemTestCases: [],\r\n    problemTags: [],\r\n    problemChoices: [],\r\n    step: 0,\r\n    selectTagsModal: false\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  /* Component Did Mount */\r\n  async componentDidMount() {\r\n    if(this.isExistCode()) {\r\n      let problemCode = this.props.code;\r\n\r\n      await getData(`/api/problem/${problemCode}`, async (res) => {\r\n        const data = res.data.success;\r\n        let parsed = JSON.parse(data.description);\r\n\r\n        this.setState({\r\n          problemType: data.type,\r\n          problemName: data.name,\r\n          problemDesc: parsed.text,\r\n          problemRest: data.restriction,\r\n          problemEntry: data.entry,\r\n          problemReturn: JSON.parse(data.return),\r\n          problemAnswer: parsed.answer !== 'undefined' ? parsed.answer : '',\r\n          problemParams: this.parseParams(data),\r\n          problemTestCases: await this.getTestCases(problemCode),\r\n          problemTags: data.tags,\r\n          problemChoices: parsed.choices !== 'undefined' ? parsed.choices : [],\r\n        });\r\n      }, (err) => {\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  parseParams = (data) => {\r\n    let params = [];\r\n    let parameters = JSON.parse(data.parameters);\r\n    let parameterNames = JSON.parse(data.parameter_names);\r\n\r\n    parameters.map((p, index) => {\r\n      params.push({\r\n        type: parameters[index],\r\n        name: parameterNames[index]\r\n      });\r\n    });\r\n\r\n    return params;\r\n  };\r\n\r\n  getTestCases = async (problemCode) => {\r\n    let data = [];\r\n    await getData(`/api/problem/${problemCode}/io/~`, (res) => {\r\n      data = res.data.success;\r\n    }, (err) => {\r\n\r\n    });\r\n    return data;\r\n  };\r\n\r\n  addProblemComplete = () => {\r\n    // Problem 추가\r\n    let sendData = {\r\n      type: this.state.problemType,\r\n      name: this.state.problemName,\r\n      description: '',\r\n      restriction: undefined,\r\n      entry: undefined,\r\n      return: undefined,\r\n      parameters: undefined,\r\n      parameter_names: undefined\r\n    };\r\n\r\n    let obj;\r\n    switch(this.state.problemType) {\r\n      case 'programming':\r\n        let parameters = [];\r\n        let parameterNames = [];\r\n\r\n        obj = {\r\n          text: this.state.problemDesc\r\n        };\r\n\r\n        this.state.problemParams.map((param) => {\r\n          parameters.push(param.type);\r\n          parameterNames.push(param.name);\r\n        });\r\n\r\n        sendData.restriction = this.state.problemRest;\r\n        sendData.entry = this.state.problemEntry;\r\n        sendData.return = JSON.stringify(this.state.problemReturn);\r\n        sendData.parameters = JSON.stringify(parameters);\r\n        sendData.parameter_names = JSON.stringify(parameterNames);\r\n        break;\r\n      case 'short':\r\n        obj = {\r\n          text: this.state.problemDesc,\r\n          answer: this.state.problemAnswer\r\n        };\r\n        break;\r\n      case 'multiple':\r\n        obj = {\r\n          text: this.state.problemDesc,\r\n          choices: this.state.problemChoices,\r\n          answer: this.state.problemAnswer\r\n        };\r\n        break;\r\n    }\r\n    sendData.description = JSON.stringify(obj);\r\n\r\n    postData('/api/problem', sendData, (res) => {\r\n      let newProblemCode = res.data.success;\r\n      if(this.state.problemType === 'programming') {\r\n        // 테스트 케이스 추가\r\n        this.addNewTestCase(newProblemCode);\r\n        // 태그 추가\r\n        this.state.problemTags.map((tag) => {\r\n          this.addNewTags(newProblemCode, tag);\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        this.props.close()\r\n      }, 500);\r\n    }, (err) => {\r\n\r\n    });\r\n\r\n    this.props.close(); // Modal Close\r\n  };\r\n  addNewTestCase = (newProblemCode) => {\r\n    // 테스트 케이스 추가\r\n    let sendData = {\r\n      cases: this.state.problemTestCases\r\n    };\r\n\r\n\r\n    postData(`/api/problem/${newProblemCode}/io`, sendData, (res) => {\r\n\r\n    }, (err) => {\r\n\r\n    });\r\n  };\r\n  addNewTags = (newProblemCode, tag) => {\r\n    // 태그 추가\r\n    putData(`/api/problem/${newProblemCode}/tag/${tag}`, {}, (res) => {\r\n\r\n    }, (err) => {\r\n\r\n    });\r\n  };\r\n\r\n  modifyProblemComplete = () => {\r\n    // Problem 수정\r\n    let sendData = {\r\n      type: this.state.problemType,\r\n      name: this.state.problemName,\r\n      description: '',\r\n      restriction: undefined,\r\n      entry: undefined,\r\n      return: undefined,\r\n      parameters: undefined,\r\n      parameter_names: undefined\r\n    };\r\n\r\n    let obj;\r\n    switch(this.state.problemType) {\r\n      case 'programming':\r\n        let parameters = [];\r\n        let parameterNames = [];\r\n\r\n        obj = {\r\n          text: this.state.problemDesc\r\n        };\r\n\r\n        this.state.problemParams.map((param) => {\r\n          parameters.push(param.type);\r\n          parameterNames.push(param.name);\r\n        });\r\n\r\n        sendData.restriction = this.state.problemRest;\r\n        sendData.entry = this.state.problemEntry;\r\n        sendData.return = JSON.stringify(this.state.problemReturn);\r\n        sendData.parameters = JSON.stringify(parameters);\r\n        sendData.parameter_names = JSON.stringify(parameterNames);\r\n        break;\r\n      case 'short':\r\n        obj = {\r\n          text: this.state.problemDesc,\r\n          answer: this.state.problemAnswer\r\n        };\r\n        break;\r\n      case 'multiple':\r\n        obj = {\r\n          text: this.state.problemDesc,\r\n          choices: this.state.problemChoices,\r\n          answer: this.state.problemAnswer\r\n        };\r\n        break;\r\n    }\r\n    sendData.description = JSON.stringify(obj);\r\n\r\n\r\n    const problemCode = this.props.code;\r\n    putData(`/api/problem/${problemCode}`, sendData, (res) => {\r\n      if(this.state.problemType === 'programming') {\r\n        // 테스트 케이스 수정\r\n        this.addNewTestCase(problemCode);\r\n        // 태그 수정 (모든 태그 삭제 후 재추가)\r\n        deleteData(`/api/problem/${problemCode}/tag`, (res) => {\r\n          this.state.problemTags.map((tag) => {\r\n            this.addNewTags(problemCode, tag);\r\n          });\r\n        }, (err) => {\r\n\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        this.props.close()\r\n      }, 500);\r\n    }, (err) => {\r\n\r\n    });\r\n  }\r\n\r\n  getVariableTypes = () => {\r\n    const items = [\r\n      { label: 'Int32', value: 'i32' },\r\n      { label: 'Int64', value: 'i64' },\r\n      { label: 'Float32', value: 'f32' },\r\n      { label: 'Float64', value: 'f64' },\r\n      { label: 'String', value: 'str' },\r\n\r\n      { label: 'Int32 Array', value: '[i32]' },\r\n      { label: 'Int64 Array', value: '[i64]' },\r\n      { label: 'Float32 Array', value: '[f32]' },\r\n      { label: 'Float64 Array', value: '[f64]' },\r\n      { label: 'String Array', value: '[str]' },\r\n    ];\r\n    return items;\r\n  }\r\n\r\n  changeStep = (now) => {\r\n    this.setState({ step: now });\r\n  }\r\n\r\n  isExistCode = () => {\r\n    return typeof this.props.code === 'string';\r\n  }\r\n  isExistType = () => {\r\n    return typeof this.props.type === 'string';\r\n  }\r\n\r\n  openSelectTagsModal = () => {\r\n    this.setState({ selectTagsModal: true });\r\n  };\r\n  closeSelectTagsModal = () => {\r\n    this.setState({ selectTagsModal: false });\r\n  };\r\n\r\n  setTags = (tags) => {\r\n    this.setState({ problemTags: tags });\r\n  };\r\n  pushParamsRow = () => {\r\n    let copyParams = this.state.problemParams;\r\n    copyParams.push({ type: this.getVariableTypes()[0].value, name: '' });\r\n    this.setState({ problemParams: copyParams });\r\n  };\r\n  popParamsRow = () => {\r\n    let copyParams = this.state.problemParams;\r\n    copyParams.pop();\r\n    this.setState({ problemParams: copyParams });\r\n  };\r\n  pushTestCaseRow = () => {\r\n    let copyTestCase = this.state.problemTestCases;\r\n    copyTestCase.push({ input: '', output: '', visible: true });\r\n    this.setState({ problemTestCases: copyTestCase });\r\n  };\r\n  popTestCaseRow = () => {\r\n    let copyTestCase = this.state.problemTestCases;\r\n    copyTestCase.pop();\r\n    this.setState({ problemTestCases: copyTestCase });\r\n  };\r\n  pushChoiceRow = () => {\r\n    let copyChoices = this.state.problemChoices;\r\n    copyChoices.push('');\r\n    this.setState({ problemChoices: copyChoices });\r\n  };\r\n  popChoiceRow = () => {\r\n    let copyChoices = this.state.problemChoices;\r\n    copyChoices.pop();\r\n    this.setState({ problemChoices: copyChoices });\r\n  };\r\n\r\n  onChangeName = (e) => {\r\n    this.setState({ problemName: e.target.value });\r\n  };\r\n  onChangeDesc = (e) => {\r\n    this.setState({ problemDesc: e.target.value });\r\n  };\r\n  onChangeRest = (e) => {\r\n    this.setState({ problemRest: e.target.value });\r\n  };\r\n  onChangeEntry = (e) => {\r\n    this.setState({ problemEntry: e.target.value });\r\n  };\r\n  onChangeAnswer = (e) => {\r\n    this.setState({ problemAnswer: e.target.value });\r\n  };\r\n\r\n  printTypeSelectForm = () => {\r\n    /* Props */\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={'select_type'}>\r\n        <Button\r\n          onClick={ () => this.setState({ problemType: 'programming' }) }\r\n          classes={{\r\n            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n          }}\r\n          startIcon={<Icon className=\"icon\" path={ mdiCodeBraces } size={2.0}/>}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          <em>프로그래밍 문제</em>\r\n        </Button>\r\n        <Button\r\n          onClick={ () => this.setState({ problemType: 'short' }) }\r\n          classes={{\r\n            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n          }}\r\n          startIcon={<Icon className=\"icon\" path={ mdiLeadPencil } size={2.0}/>}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          <em>주관식 문제</em>\r\n        </Button>\r\n        <Button\r\n          onClick={ () => this.setState({ problemType: 'multiple' }) }\r\n          classes={{\r\n            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n          }}\r\n          startIcon={<Icon className=\"icon\" path={ mdiRadioboxMarked } size={2.0}/>}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          <em>객관식 문제</em>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  printProblemForm  = () => {\r\n    switch (this.state.problemType) {\r\n      case 'programming':\r\n        return this.printProgrammingForm();\r\n      case 'short':\r\n        return this.printShortForm();\r\n      case 'multiple':\r\n        return this.printMultipleForm();\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  // 프로그래밍 문제 정보입력\r\n  printProgrammingForm = () => {\r\n    return (\r\n      <div className={'problem_form'}>\r\n        <table>\r\n          {this.state.step === 0 ? this.printNameForm() : null}\r\n          {this.state.step === 1 ? this.printDescForm() : null}\r\n          {this.state.step === 2 ? this.printRestForm() : null}\r\n          {this.state.step === 3 ? this.printEntryForm() : null}\r\n          {this.state.step === 4 ? this.printReturnForm() : null}\r\n          {this.state.step === 5 ? this.printParamForm() : null}\r\n          {this.state.step === 6 ? this.printTestCaseForm() : null}\r\n          {this.state.step === 7 ? this.printSelectTagForm() : null}\r\n          {this.state.step === 8 ? this.printCompleteBtn() : null}\r\n        </table>\r\n        <div className={'stepper'}>\r\n          <SimpleStepper maxSteps={9} next={this.changeStep} back={this.changeStep} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 주관식 문제 정보입력\r\n  printShortForm = () => {\r\n    /* Props */\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={'problem_form'}>\r\n        <table>\r\n          {this.state.step === 0 ? this.printNameForm() : null}\r\n          {this.state.step === 1 ? this.printDescForm() : null}\r\n          {this.state.step === 2 ? this.printAnswerForm() : null}\r\n          {this.state.step === 3 ? this.printCompleteBtn() : null}\r\n        </table>\r\n        <div className={'stepper'}>\r\n          <SimpleStepper maxSteps={4} next={this.changeStep} back={this.changeStep} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 객관식 문제 정보입력\r\n  printMultipleForm = () => {\r\n    return (\r\n      <div className={'problem_form'}>\r\n        <table>\r\n          {this.state.step === 0 ? this.printNameForm() : null}\r\n          {this.state.step === 1 ? this.printDescForm() : null}\r\n          {this.state.step === 2 ? this.printChoiceForm() : null}\r\n          {this.state.step === 3 ? this.printAnswerForm() : null}\r\n          {this.state.step === 4 ? this.printCompleteBtn() : null}\r\n        </table>\r\n        <div className={'stepper'}>\r\n          <SimpleStepper maxSteps={5} next={this.changeStep} back={this.changeStep} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  printNameForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>문제 명칭</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <input\r\n            type={'text'}\r\n            className={'design_form input_A necessary name'}\r\n            placeholder={'Name'}\r\n            value={this.state.problemName}\r\n            onChange={this.onChangeName}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printDescForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>문제 설명</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <textarea\r\n            className={'design_form textarea_A necessary description'}\r\n            placeholder={'Description'}\r\n            value={this.state.problemDesc}\r\n            onChange={this.onChangeDesc}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printRestForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>제한사항</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <textarea\r\n            className={'design_form textarea_A necessary description'}\r\n            placeholder={'Restriction'}\r\n            value={this.state.problemRest}\r\n            onChange={this.onChangeRest}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printEntryForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>실행함수 명칭</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <input\r\n            type={'text'}\r\n            className={'design_form input_A necessary name'}\r\n            placeholder={'Entry Function Name'}\r\n            value={this.state.problemEntry}\r\n            onChange={this.onChangeEntry}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printReturnForm = () => {\r\n    return (\r\n        <tbody>\r\n        <tr>\r\n          <th><em>결과값 자료형</em></th>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            { this.printReturnFormSub() }\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n    );\r\n  };\r\n  printReturnFormSub = () => {\r\n    const items = this.getVariableTypes();\r\n    return (\r\n        <table className={'sub_table return'}>\r\n          <tbody>\r\n          <tr>\r\n            <th><em>Type</em></th>\r\n            <td>\r\n              <SimpleSelect\r\n                  start={this.state.problemReturn}\r\n                  title={'Type'}\r\n                  items={items}\r\n                  changeEvent={(event) => {\r\n                    this.setState({ problemReturn: event.target.value });\r\n                  }}\r\n              />\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n    );\r\n  };\r\n  printParamForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th>\r\n          <em>실행함수 파라미터</em>\r\n          <button className={'icon_btn'} onClick={this.pushParamsRow}><Icon path={ mdiPlus } size={0.5}/></button>\r\n          <button className={'icon_btn'} onClick={this.popParamsRow}><Icon path={ mdiMinus } size={0.5}/></button>\r\n        </th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          { this.printParamFormSub() }\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printParamFormSub = () => {\r\n    const items = this.getVariableTypes();\r\n    return (\r\n      <table className={'sub_table params'}>\r\n        <tbody>\r\n        {this.state.problemParams.map((param, index) => {\r\n          return (\r\n            <tr>\r\n              <th><em>Type</em></th>\r\n              <td>\r\n                <SimpleSelect\r\n                  start={this.state.problemParams[index].type}\r\n                  title={'Type'}\r\n                  items={items}\r\n                  changeEvent={(event) => {\r\n                    let copyParams = this.state.problemParams;\r\n                    param.type = event.target.value;\r\n                    copyParams[index] = param;\r\n\r\n                    this.setState({ problemParams: copyParams });\r\n                  }}\r\n                />\r\n              </td>\r\n              <th><em>Name</em></th>\r\n              <td>\r\n                <input\r\n                  type={'text'}\r\n                  className={'design_form input_A necessary name'}\r\n                  placeholder={'Name'}\r\n                  value={this.state.problemParams[index].name}\r\n                  onChange={(event) => {\r\n                    let copyParams = this.state.problemParams;\r\n                    param.name = event.target.value;\r\n                    copyParams[index] = param;\r\n\r\n                    this.setState({ problemParams: copyParams });\r\n                  }}\r\n                />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n  printSelectTagForm = () => {\r\n    /* Props */\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <td>\r\n          <Button\r\n            onClick={this.openSelectTagsModal}\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            <em>태그 선택</em>\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          {this.state.problemTags.map((tagName) => {\r\n            return <Tag code={tagName} size={1} />;\r\n          })}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <SimpleModal\r\n            open={this.state.selectTagsModal}\r\n            close={this.closeSelectTagsModal}\r\n            body={<SelectTags close={this.closeSelectTagsModal} setTags={this.setTags} />}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printTestCaseForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th>\r\n          <em>테스트 케이스</em>\r\n          <button className={'icon_btn'} onClick={this.pushTestCaseRow}><Icon path={ mdiPlus } size={0.5}/></button>\r\n          <button className={'icon_btn'} onClick={this.popTestCaseRow}><Icon path={ mdiMinus } size={0.5}/></button>\r\n        </th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          { this.printTestCaseFormSub() }\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printTestCaseFormSub = () => {\r\n    console.log(this.state.problemTestCases);\r\n    return (\r\n      <table className={'sub_table test_case'}>\r\n        <tbody>\r\n        {this.state.problemTestCases.map((testCase, index) => {\r\n          return (\r\n            <tr>\r\n              <th><em>Input</em></th>\r\n              <td>\r\n                <input\r\n                  type={'text'}\r\n                  className={'design_form input_A necessary name'}\r\n                  placeholder={'Input'}\r\n                  value={this.state.problemTestCases[index].input}\r\n                  onChange={(event) => {\r\n                    let copyTestCase = this.state.problemTestCases;\r\n                    testCase.input = event.target.value;\r\n                    copyTestCase[index] = testCase;\r\n\r\n                    this.setState({ problemTestCases: copyTestCase });\r\n                  }}\r\n                />\r\n              </td>\r\n              <th><em>Output</em></th>\r\n              <td>\r\n                <input\r\n                  type={'text'}\r\n                  className={'design_form input_A necessary name'}\r\n                  placeholder={'Output'}\r\n                  value={this.state.problemTestCases[index].output}\r\n                  onChange={(event) => {\r\n                    let copyTestCase = this.state.problemTestCases;\r\n                    testCase.output = event.target.value;\r\n                    copyTestCase[index] = testCase;\r\n\r\n                    this.setState({ problemTestCases: copyTestCase });\r\n                  }}\r\n                />\r\n              </td>\r\n              <th><em>Visible</em></th>\r\n              <td>\r\n                <Checkbox\r\n                  inputProps={{ 'aria-label': 'uncontrolled-checkbox' }}\r\n                  checked={this.state.problemTestCases[index].visible}\r\n                  onChange={(event) => {\r\n                    let copyTestCase = this.state.problemTestCases;\r\n                    testCase.visible = event.target.checked ? 1 : 0;\r\n                    copyTestCase[index] = testCase;\r\n\r\n                    this.setState({ problemTestCases: copyTestCase });\r\n                  }}\r\n                />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n  printAnswerForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>정답</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <input\r\n            type={'text'}\r\n            className={'design_form input_A necessary name'}\r\n            placeholder={'Answer'}\r\n            value={this.state.problemAnswer}\r\n            onChange={this.onChangeAnswer}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printChoiceForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th>\r\n          <em>보기</em>\r\n          <button className={'icon_btn'} onClick={this.pushChoiceRow}><Icon path={ mdiPlus } size={0.5}/></button>\r\n          <button className={'icon_btn'} onClick={this.popChoiceRow}><Icon path={ mdiMinus } size={0.5}/></button>\r\n        </th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          { this.printChoiceFormSub() }\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printChoiceFormSub = () => {\r\n    return (\r\n      <table className={'sub_table choices'}>\r\n        <tbody>\r\n        {this.state.problemChoices.map((choice, index) => {\r\n          return (\r\n            <tr>\r\n              <th><em>보기 {index+1}</em></th>\r\n              <td>\r\n                <input\r\n                  type={'text'}\r\n                  className={'design_form input_A necessary name'}\r\n                  placeholder={'Choice'}\r\n                  value={this.state.problemChoices[index]}\r\n                  onChange={(event) => {\r\n                    let copyChoices = this.state.problemChoices;\r\n                    copyChoices[index] = event.target.value;\r\n\r\n                    this.setState({ problemChoices: copyChoices });\r\n                  }}\r\n                />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n  printCompleteBtn = () => {\r\n    /* Props */\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <td>\r\n          <Button\r\n            onClick={this.isExistCode() ? this.modifyProblemComplete : this.addProblemComplete}\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            <em>{this.isExistCode() ? '수정 완료' : '추가 완료' }</em>\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className={'page_modal add_problem_modal'}>\r\n        { this.state.problemType === '' ? this.printTypeSelectForm() : this.printProblemForm() }\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nAddProblem.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  code: PropTypes.string,\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(AddProblem);\r\n","import React from 'react'\r\n\r\n/* Design Import */\r\nimport './Problems.scss';\r\n\r\n/* Material Import */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\nimport {\r\n  SimpleTable,\r\n  SimpleModal\r\n} from '../../components';\r\nimport AddProblem from '../AddProblem';\r\nimport { getData, putData, postData, deleteData } from '../../common'\r\n\r\n/* Data Import */\r\nimport SimpleDialog from \"../../components/SimpleDialog\";\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass Problems extends React.Component {\r\n  state = {\r\n    selectedCode: '',\r\n    selectedType: '',\r\n    addProblemModal: false,\r\n    infoProblemModal: false,\r\n    deleteProblemDialog: false,\r\n    heads: [\r\n      { id: 'name',        label: '명칭'},\r\n      { id: 'description', label: '설명'},\r\n      { id: 'type',        label: '문제 유형'},\r\n      { id: 'tags',        label: '태그' }\r\n    ],\r\n    bodys: []\r\n  }\r\n  /* Component Did Mount */\r\n  componentDidMount() {\r\n    this.setBodys();\r\n  }\r\n\r\n  setBodys = async () => {\r\n    // Problem 목록 정보 불러오기\r\n    if(this.isExistPackageCode()){\r\n      const { match } = this.props;\r\n      const packageCode = match.params.package_code;\r\n\r\n      await getData(`/api/package/${packageCode}/problem`, (res) => {\r\n        let data = res.data.success;\r\n        data.map((d, index) => {\r\n          data[index] = this.descriptionParse(d);\r\n        })\r\n        this.setState({ bodys: data });\r\n      }, (err) => {\r\n        this.setState({ bodys: [] });\r\n      });\r\n    }\r\n    else {\r\n      await getData('/api/problem', (res) => {\r\n        let data = res.data.success;\r\n        data.map((d, index) => {\r\n          data[index] = this.descriptionParse(d);\r\n        })\r\n        this.setState({ bodys: data });\r\n      }, (err) => {\r\n        this.setState({ bodys: [] });\r\n      });\r\n    }\r\n  };\r\n\r\n  descriptionParse = (data) => {\r\n    let parsed = JSON.parse(data.description);\r\n\r\n    data.description = parsed.text;\r\n    data.answer = parsed.answer;\r\n    data.choices = parsed.choices;\r\n\r\n    return data;\r\n  };\r\n\r\n  /* Method */\r\n  isExistPackageCode = () => {\r\n    const { match } = this.props;\r\n    return typeof match.params.package_code === 'string';\r\n  }\r\n  isExistAssignmentCode = () => {\r\n    const { match } = this.props;\r\n    return typeof match.params.assignment_code === 'string';\r\n  }\r\n\r\n  openAddProblemModal = () => {\r\n    this.setState({ addProblemModal: true });\r\n  };\r\n  closeAddProblemModal = () => {\r\n    this.setState({ addProblemModal: false });\r\n    this.setBodys();\r\n  };\r\n\r\n  openInfoProblemModal = () => {\r\n    this.setState({ infoProblemModal: true });\r\n  };\r\n  closeInfoProblemModal = () => {\r\n    this.setState({ infoProblemModal: false });\r\n    this.setBodys();\r\n  };\r\n\r\n  openDeleteProblemDialog = () => {\r\n    this.setState({ deleteProblemDialog: true });\r\n  }\r\n  closeDeleteProblemDialog = () => {\r\n    this.setState({ deleteProblemDialog: false });\r\n  };\r\n\r\n  // Package Code is exist event\r\n  deleteEventA = (body) => {\r\n    this.setState({ selectedCode: body.code });\r\n    this.openDeleteProblemDialog();\r\n  };\r\n\r\n  // Default event\r\n  deleteEventB = (body) => {\r\n    this.setState({ selectedCode: body.code });\r\n    this.openDeleteProblemDialog();\r\n  };\r\n\r\n  deleteAgreeA = () => {\r\n    // Package 에서 Problem 삭제\r\n    const { match } = this.props;\r\n\r\n    let packageCode = match.params.package_code;\r\n    let problemCode = this.state.selectedCode;\r\n    deleteData(` /api/package/${packageCode}/problem/${problemCode}`, (res) => {\r\n      // Package 목록 정보 다시 불러오기\r\n      this.setBodys();\r\n      this.closeDeleteProblemDialog();\r\n    }, (err) => {\r\n\r\n    });\r\n  };\r\n  deleteAgreeB = () => {\r\n    // Problem 삭제\r\n    const problemCode = this.state.selectedCode;\r\n    deleteData(`/api/problem/${problemCode}`, (res) => {\r\n      // Package 목록 정보 다시 불러오기\r\n      this.setBodys();\r\n      this.closeDeleteProblemDialog();\r\n    }, (err) => {\r\n\r\n    });\r\n  };\r\n\r\n  deleteDisagree = () => {\r\n    this.closeDeleteProblemDialog();\r\n  };\r\n\r\n  customEvent = (body) => {\r\n    const { history, match } = this.props;\r\n    history.push(`/solving/${body.code}/${match.params.assignment_code}`);\r\n  }\r\n  \r\n  infoEvent = (body) => {\r\n    this.setState({ selectedCode: body.code });\r\n    this.setState({ selectedType: body.type });\r\n    this.openInfoProblemModal();\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    /* Props */\r\n    const { classes, match } = this.props;\r\n\r\n    /* Const */\r\n    const contentPrefix = (this.isExistPackageCode() ? '현재 패키지에서 ' : '');\r\n\r\n    return (\r\n      <div className={'page problems'}>\r\n        {this.isExistPackageCode() ?\r\n          <div className={'content'} ><em>{match.params.package_code}</em></div> : <div className={'content'}>\r\n          <div className={'search_box'}>\r\n\r\n          </div>\r\n          <div className={'btn_box'}>\r\n            <Button\r\n              onClick={this.openAddProblemModal}\r\n              classes={{\r\n                root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              startIcon={<AddIcon>send</AddIcon>}\r\n            >\r\n              문제 추가\r\n            </Button>\r\n          </div>\r\n        </div>}\r\n        <div className={'content package_table'}>\r\n          <SimpleTable\r\n            heads={this.state.heads}\r\n            bodys={this.state.bodys}\r\n            customEvent={this.isExistAssignmentCode() ? this.customEvent : null}\r\n            infoEvent={this.isExistPackageCode() ? null : this.infoEvent}\r\n            deleteEvent={this.isExistPackageCode() ? (this.isExistAssignmentCode() ? null : this.deleteEventA) : this.deleteEventB}\r\n            infoModal={\r\n              <SimpleModal\r\n                title={'문제 수정'}\r\n                open={this.state.infoProblemModal}\r\n                close={this.closeInfoProblemModal}\r\n                body={<AddProblem close={this.closeInfoProblemModal} code={this.state.selectedCode} type={this.state.selectedType} />}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <SimpleModal\r\n          title={'문제 추가'} open={this.state.addProblemModal}\r\n          close={this.closeAddProblemModal}\r\n          body={<AddProblem close={this.closeAddProblemModal}/>}\r\n        />\r\n        <SimpleDialog\r\n          open={this.state.deleteProblemDialog}\r\n          onClose={this.closeDeleteProblemDialog}\r\n          data={{\r\n            title: '문제 삭제',\r\n            content: contentPrefix + this.state.selectedCode + ' 문제를 삭제하시겠습니까?',\r\n            agreeText: 'YES',\r\n            disagreeText: 'NO',\r\n            agreeEvent: this.isExistPackageCode() ? this.deleteAgreeA : this.deleteAgreeB,\r\n            disagreeEvent: this.deleteDisagree\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(Problems);\r\n","import React from 'react';\r\n\r\n/* Design Import */\r\nimport './Solving.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    FormLabel\r\n} from '@material-ui/core';\r\nimport {\r\n    Add as AddIcon\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\nimport { getData, postData } from '../../common'\r\nimport {SimpleSelect} from \"../../components\";\r\nimport { solveFile } from '../../common'\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        padding: '5px 10px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n});\r\n\r\nclass Solving extends React.Component {\r\n    /* State */\r\n    state = {\r\n        problemType: '',\r\n        problemName: '',\r\n        problemDesc: '',\r\n        problemRest: '',\r\n        problemEntry: '',\r\n        problemAnswer: '',\r\n        problemTags: [],\r\n        problemChoices: [],\r\n        selectedLanguage: 'python',\r\n        code: '',\r\n        executeResult: ''\r\n    }\r\n\r\n    /* Components */\r\n\r\n    /* Method */\r\n    async componentDidMount() {\r\n        const { match } = this.props;\r\n        let problemCode = match.params.problem_code;\r\n\r\n        await getData(`/api/problem/${problemCode}`, async (res) => {\r\n            const data = res.data.success;\r\n            let parsed = JSON.parse(data.description);\r\n\r\n            this.setState({\r\n                problemType: data.type,\r\n                problemName: data.name,\r\n                problemDesc: parsed.text,\r\n                problemRest: data.restriction,\r\n                problemEntry: data.entry,\r\n                problemAnswer: parsed.answer !== 'undefined' ? parsed.answer : '',\r\n                problemTags: data.tags,\r\n                problemChoices: parsed.choices !== 'undefined' ? parsed.choices : [],\r\n            });\r\n            this.getDefaultCodeForm();\r\n        }, (err) => {\r\n\r\n        });\r\n    }\r\n\r\n    // 테스트 실행\r\n    testStart = () => {\r\n        const { match } = this.props;\r\n        let code = this.state.code.split('\\n');\r\n        let srcFile = new File(code, \"fileName\")\r\n        solveFile(match.params.problem_code, srcFile, this.state.selectedLanguage, (res) => {\r\n            const cases = res.data.success.cases;\r\n            let text = '';\r\n\r\n            cases.map((res, index) => {\r\n                text += 'Test case ' + (index+1) + ' : ' + (res.result ? '통과' : '실패') + '\\n';\r\n            })\r\n            this.setState({ executeResult: text });\r\n        }, (err) => {\r\n\r\n        });\r\n    };\r\n\r\n    // 채점 및 제출\r\n    sendResult = () => {\r\n        const { match, history } = this.props;\r\n        const assignmentCode = match.params.assignment_code;\r\n        const problemCode = match.params.problem_code;\r\n\r\n\r\n        let srcFile = new File(this.state.code.split('\\n'), 'test.py');\r\n        let formData = new FormData()\r\n        formData.append('source', srcFile);\r\n        formData.append('language', this.state.selectedLanguage);\r\n\r\n        postData(`/api/assignment/${assignmentCode}/submission/${problemCode}`, formData, (res) => {\r\n            history.goBack();\r\n        }, (err) => {\r\n\r\n        });\r\n    };\r\n\r\n    getLanguageTypes = () => {\r\n        let items = [\r\n            { label: 'Python', value: 'python' }\r\n        ];\r\n        return items;\r\n    }\r\n\r\n    getDefaultCodeForm = () => {\r\n        const { match } = this.props;\r\n        getData(`/api/problem/${match.params.problem_code}/signature/${this.state.selectedLanguage}`, (res) => {\r\n            this.setState({ code: res.data.success });\r\n        }, (err) => {\r\n            this.setState({ code: '' });\r\n        });\r\n    }\r\n\r\n    onChangeCode = (event) => {\r\n        this.setState({ code: event.target.value });\r\n    }\r\n    onChangeResult = (event) => {\r\n        this.setState({ executeResult: event.target.value });\r\n    }\r\n\r\n    printSolvingForm = () => {\r\n        switch(this.state.problemType) {\r\n            case 'programming': // 프로그래밍 문제\r\n                return this.printProgrammingSolvingForm();\r\n            case 'short': // 주관식 문제\r\n                return this.printShortSolvingForm();\r\n            case 'multiple': // 객관식 문제\r\n                return this.printMultipleSolvingForm();\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    printProgrammingSolvingForm = () => {\r\n        /* Props */\r\n        const { classes } = this.props;\r\n\r\n        const items = this.getLanguageTypes();\r\n\r\n        return (\r\n            <div className=\"page_wrap layout solving\">\r\n                <div className=\"box problem_title flex-align middle\">\r\n                    <em>{ this.state.problemName }</em>\r\n                    <span className={'select_language'}>\r\n                        <SimpleSelect\r\n                            title={'Language'}\r\n                            items={items}\r\n                            start={this.state.selectedLanguage}\r\n                            changeEvent={(event) => {\r\n                                this.setState({ selectedLanguage: event.target.value });\r\n                            }}\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div className=\"box problem_desc\">\r\n                    <em className=\"title\">문제 설명</em>\r\n                    <div className=\"description\">\r\n                        <em>{ this.state.problemDesc }</em>\r\n                    </div>\r\n                    <em className=\"title\">제약조건</em>\r\n                    <div className=\"description\">\r\n                        <em>{ this.state.problemRest }</em>\r\n                    </div>\r\n                </div>\r\n                <div className=\"box code_title flex-align middle\"><em>Solution</em></div>\r\n                <div className=\"box code\">\r\n                    <textarea\r\n                        placeholder={'Code...'}\r\n                        value={this.state.code}\r\n                        onChange={this.onChangeCode}\r\n                    />\r\n                </div>\r\n                <div className=\"box execute_title flex-align middle\"><em>Execute Result</em></div>\r\n                <div className=\"box result\">\r\n                    <textarea\r\n                        placeholder={'Code...'}\r\n                        value={this.state.executeResult}\r\n                        onChange={this.onChangeResult}\r\n                    />\r\n                </div>\r\n                <div className=\"box buttons flex-align middle\">\r\n                    <Button\r\n                        onClick={this.testStart}\r\n                        classes={{\r\n                            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<AddIcon>send</AddIcon>}\r\n                    >\r\n                        테스트 실행\r\n                    </Button>\r\n                    <Button\r\n                        onClick={this.sendResult}\r\n                        classes={{\r\n                            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<AddIcon>send</AddIcon>}\r\n                    >\r\n                        채점 및 제출\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    printShortSolvingForm = () => {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className=\"page_wrap layout solving\">\r\n                <div className={'problem_title'}>\r\n                    <em>{ this.state.problemName }</em>\r\n                </div>\r\n                <div className={'problem_desc'}>\r\n                    <em>{ this.state.problemDesc }</em>\r\n                </div>\r\n                <div className={'problem_answer'}>\r\n                    <textarea\r\n                        className={'design_form textarea_A necessary description'}\r\n                        placeholder={'정답'}\r\n                        value={this.state.code}\r\n                        onChange={(e) => {\r\n                            this.setState({ code: e.target.value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={'problem_send'}>\r\n                    <Button\r\n                        onClick={this.sendResult}\r\n                        classes={{\r\n                            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<AddIcon>send</AddIcon>}\r\n                    >\r\n                        채점 및 제출\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    printMultipleSolvingForm = () => {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className=\"page_wrap layout solving\">\r\n                <div className={'problem_title'}>\r\n                    <em>{ this.state.problemName }</em>\r\n                </div>\r\n                <div className={'problem_desc'}>\r\n                    <div>{ this.state.problemDesc }</div>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">Gender</FormLabel>\r\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={this.state.code} onChange={(e) => {\r\n                            this.setState({ code: e.target.value })\r\n                        }}>\r\n                            {this.state.problemChoices.map((choice, index) => {\r\n                                return <FormControlLabel value={index} control={<Radio />} label={choice} />\r\n                            })}\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </div>\r\n                <div className={'problem_send'}>\r\n                    <Button\r\n                        onClick={this.sendResult}\r\n                        classes={{\r\n                            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<AddIcon>send</AddIcon>}\r\n                    >\r\n                        채점 및 제출\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return this.state.problemType !== '' ? this.printSolvingForm() : null;\r\n    };\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(Solving);\r\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport './NotFoundCover.scss';\n\nconst NotFoundCover = props => {\n  const { history } = props;\n\n  const handleClick = () => {\n    history.goBack();\n  };\n\n  return (\n    <div className={'not_found_cover'}>\n      <button onClick={handleClick}>\n        Go Back\n      </button>\n    </div>\n  );\n};\n\nexport default withRouter(NotFoundCover);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SelectTags.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport {Button} from \"@material-ui/core\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\n/* Custom Import */\r\nimport Tag from \"../../components/Tag\";\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass SelectTags extends React.Component {\r\n  /* State */\r\n  state = {\r\n    selectList: []\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  selectTag = (tagName) => {\r\n    if(!this.state.selectList.includes(tagName))\r\n      this.setState({ selectList: [...this.state.selectList, tagName] });\r\n  }\r\n\r\n  selectComplete = () => {\r\n    this.props.setTags(this.state.selectList);\r\n    this.props.close();\r\n  }\r\n\r\n  render () {\r\n    const { classes } = this.props;\r\n    const tagList = ['Python', 'Ruby', 'Go', 'Java', 'JS', 'Kotlin', 'Swift', 'C', 'CPP', 'CS']\r\n    return (\r\n      <div className={'select_tags'}>\r\n        <div className={'tag_icons'}>\r\n          {tagList.map((tagName) => {\r\n            return <button onClick={() => { this.selectTag(tagName) }} className={this.state.selectList.includes(tagName) ? 'tag selected' : 'tag'}>\r\n              <Tag code={tagName} size={1} />\r\n            </button>\r\n          })}\r\n        </div>\r\n        <div className={'btn_box'}>\r\n          <Button\r\n            onClick={this.selectComplete}\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            <em>선택 완료</em>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelectTags.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  setTags: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(SelectTags);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SelectProblems.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport {Button} from \"@material-ui/core\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\n/* Custom Import */\r\nimport {getData} from \"../../common\";\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass SelectProblems extends React.Component {\r\n  /* State */\r\n  state = {\r\n    selectList: [],\r\n    problemList : [],\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  componentDidMount() {\r\n    this.getProblemList()\r\n  }\r\n\r\n  getProblemList = () => {\r\n    getData('/api/problem', (res) => {\r\n      this.setState({\r\n        problemList: res.data.success\r\n      })\r\n    }, (err) => {\r\n\r\n    });\r\n  }\r\n\r\n  isSelected = (problem) => {\r\n    let isExist = false;\r\n    this.state.selectList.map((p) => {\r\n      if (problem.code === p.code && problem.name === p.name)\r\n        isExist = true;\r\n    });\r\n    return isExist;\r\n  }\r\n\r\n  selectProblem = (problem) => {\r\n    if (!this.isSelected(problem))\r\n      this.setState({selectList: [...this.state.selectList, problem]});\r\n  }\r\n\r\n  selectComplete = () => {\r\n    this.props.setProblems(this.state.selectList);\r\n    this.props.close();\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n        <div className={'select_problems'}>\r\n          <div className={'problem_icons'}>\r\n            {this.state.problemList.map((problem) => {\r\n              return <button onClick={() => {\r\n                this.selectProblem(problem)\r\n              }} className={this.isSelected(problem) ? 'problem selected' : 'problem'}>\r\n                <em>{problem.name}</em>\r\n              </button>\r\n            })}\r\n          </div>\r\n          <div className={'btn_box'}>\r\n            <Button\r\n                onClick={this.selectComplete}\r\n                classes={{\r\n                  root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                  label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                }}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n            >\r\n              <em>선택 완료</em>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelectProblems.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  setProblems: PropTypes.func.isRequired,\r\n  code: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(useStyles, {withTheme: true})(SelectProblems);\r\n","import React from 'react'\r\n\r\n/* Design Import */\r\nimport './Scoring.scss';\r\n\r\n/* Material Import */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n    Add as AddIcon\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\nimport {\r\n    SimpleTable,\r\n    SimpleModal\r\n} from '../../components';\r\nimport AddProblem from '../AddProblem';\r\nimport { getData, putData, postData, deleteData } from '../../common'\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        padding: '5px 10px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n});\r\n\r\nclass Scoring extends React.Component {\r\n    state = {\r\n        selectedCode: '',\r\n        selectedType: '',\r\n        addProblemModal: false,\r\n        infoProblemModal: false,\r\n        deleteProblemDialog: false,\r\n        heads: [\r\n            { id: 'name',        label: '명칭'},\r\n            { id: 'description', label: '설명'},\r\n            { id: 'type',        label: '문제 유형'},\r\n            { id: 'tags',        label: '태그' }\r\n        ],\r\n        bodys: []\r\n    }\r\n    /* Component Did Mount */\r\n    componentDidMount() {\r\n        this.setBodys();\r\n    }\r\n\r\n    setBodys = async () => {\r\n        // Problem 목록 정보 불러오기\r\n        if(this.isExistPackageCode()){\r\n            const { match } = this.props;\r\n            const packageCode = match.params.package_code;\r\n\r\n            await getData(`/api/package/${packageCode}/problem`, (res) => {\r\n                let data = res.data.success;\r\n                data.map((d, index) => {\r\n                    data[index] = this.descriptionParse(d);\r\n                })\r\n                this.setState({ bodys: data });\r\n            }, (err) => {\r\n                this.setState({ bodys: [] });\r\n            });\r\n        }\r\n        else {\r\n            await getData('/api/problem', (res) => {\r\n                let data = res.data.success;\r\n                data.map((d, index) => {\r\n                    data[index] = this.descriptionParse(d);\r\n                })\r\n                this.setState({ bodys: data });\r\n            }, (err) => {\r\n                this.setState({ bodys: [] });\r\n            });\r\n        }\r\n    };\r\n\r\n    descriptionParse = (data) => {\r\n        let parsed = JSON.parse(data.description);\r\n\r\n        data.description = parsed.text;\r\n        data.answer = parsed.answer;\r\n        data.choices = parsed.choices;\r\n\r\n        return data;\r\n    };\r\n\r\n    /* Method */\r\n    isExistPackageCode = () => {\r\n        const { match } = this.props;\r\n        return typeof match.params.package_code === 'string';\r\n    }\r\n\r\n    openAddProblemModal = () => {\r\n        this.setState({ addProblemModal: true });\r\n    };\r\n    closeAddProblemModal = () => {\r\n        this.setState({ addProblemModal: false });\r\n        this.setBodys();\r\n    };\r\n\r\n    openInfoProblemModal = () => {\r\n        this.setState({ infoProblemModal: true });\r\n    };\r\n    closeInfoProblemModal = () => {\r\n        this.setState({ infoProblemModal: false });\r\n        this.setBodys();\r\n    };\r\n\r\n    openDeleteProblemDialog = () => {\r\n        this.setState({ deleteProblemDialog: true });\r\n    }\r\n    closeDeleteProblemDialog = () => {\r\n        this.setState({ deleteProblemDialog: false });\r\n    };\r\n\r\n    // Package Code is exist event\r\n    deleteEventA = (body) => {\r\n        this.setState({ selectedCode: body.code });\r\n        this.openDeleteProblemDialog();\r\n    };\r\n\r\n    // Default event\r\n    deleteEventB = (body) => {\r\n        this.setState({ selectedCode: body.code });\r\n        this.openDeleteProblemDialog();\r\n    };\r\n\r\n    deleteAgreeA = () => {\r\n        // Package 에서 Problem 삭제\r\n        const { match } = this.props;\r\n\r\n        let packageCode = match.params.package_code;\r\n        let problemCode = this.state.selectedCode;\r\n        deleteData(` /api/package/${packageCode}/problem/${problemCode}`, (res) => {\r\n            // Package 목록 정보 다시 불러오기\r\n            this.setBodys();\r\n            this.closeDeleteProblemDialog();\r\n        }, (err) => {\r\n\r\n        });\r\n    };\r\n    deleteAgreeB = () => {\r\n        // Problem 삭제\r\n        const problemCode = this.state.selectedCode;\r\n        deleteData(`/api/problem/${problemCode}`, (res) => {\r\n            // Package 목록 정보 다시 불러오기\r\n            this.setBodys();\r\n            this.closeDeleteProblemDialog();\r\n        }, (err) => {\r\n\r\n        });\r\n    };\r\n\r\n    deleteDisagree = () => {\r\n        this.closeDeleteProblemDialog();\r\n    };\r\n\r\n    infoEvent = (body) => {\r\n        this.setState({ selectedCode: body.code });\r\n        this.setState({ selectedType: body.type });\r\n        this.openInfoProblemModal();\r\n    };\r\n\r\n    /* Render */\r\n    render() {\r\n        /* Props */\r\n        const { classes, match } = this.props;\r\n\r\n        /* Const */\r\n        const contentPrefix = (this.isExistPackageCode() ? '현재 패키지에서 ' : '');\r\n\r\n        return (\r\n            <div className={'page problems'}>\r\n                {this.isExistPackageCode() ?\r\n                    <div className={'content'} ><em>{match.params.package_code}</em></div> : <div className={'content'}>\r\n                        <div className={'search_box'}>\r\n\r\n                        </div>\r\n                        <div className={'btn_box'}>\r\n                            <Button\r\n                                onClick={this.openAddProblemModal}\r\n                                classes={{\r\n                                    root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                                    label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                                }}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                startIcon={<AddIcon>send</AddIcon>}\r\n                            >\r\n                                문제 추가\r\n                            </Button>\r\n                        </div>\r\n                    </div>}\r\n                <div className={'content package_table'}>\r\n                    <SimpleTable\r\n                        heads={this.state.heads}\r\n                        bodys={this.state.bodys}\r\n                        deleteEvent={this.isExistPackageCode() ? this.deleteEventA : this.deleteEventB}\r\n                        infoEvent={this.isExistPackageCode() ? null : this.infoEvent}\r\n                        infoModal={\r\n                            <SimpleModal\r\n                                title={'문제 수정'}\r\n                                open={this.state.infoProblemModal}\r\n                                close={this.closeInfoProblemModal}\r\n                                body={<AddProblem close={this.closeInfoProblemModal} code={this.state.selectedCode} type={this.state.selectedType} />}\r\n                            />\r\n                        }\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(Scoring);\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\n/* Design Import */\r\nimport './Assignments.scss';\r\n\r\n/* Material Import */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\nimport {\r\n  SimpleTable,\r\n  SimpleModal,\r\n  SimpleDialog,\r\n  SimpleStepper\r\n} from '../../components';\r\nimport AddProblem from '../AddProblem';\r\nimport {getData, putData, postData, deleteData, getSession} from '../../common'\r\n\r\n/* Data Import */\r\nimport {SelectPackage} from \"../index\";\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass AddAssignment extends React.Component {\r\n  state = {\r\n    package: '',\r\n    title: '',\r\n    description: '',\r\n    step: 0,\r\n    modalFlag: false\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  createAssignment = () => {\r\n    let sendData = {\r\n      package: this.state.package,\r\n      title: this.state.title,\r\n      description: this.state.description\r\n    }\r\n\r\n    const courseCode = this.props.course;\r\n    postData(`/api/course/${courseCode}/assignment`, sendData, (res) => {\r\n      setTimeout(() => {\r\n        this.props.close();\r\n      }, 500);\r\n    }, (err) => {\r\n\r\n    });\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({ modalFlag: true });\r\n  }\r\n  closeModal = () => {\r\n    this.setState({ modalFlag: false });\r\n  }\r\n\r\n  printNameForm = () => {\r\n    return (\r\n        <tbody>\r\n        <tr>\r\n          <th><em>과제 명칭</em></th>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <input\r\n                type={'text'}\r\n                className={'design_form input_A necessary name'}\r\n                placeholder={'명칭'}\r\n                value={this.state.title}\r\n                onChange={(e) => {\r\n                  this.setState({ title: e.target.value })\r\n                }}\r\n            />\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n    );\r\n  }\r\n\r\n  printDescForm = () => {\r\n    return (\r\n        <tbody>\r\n        <tr>\r\n          <th><em>과제 설명</em></th>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <textarea\r\n                className={'design_form textarea_A necessary description'}\r\n                placeholder={'설명'}\r\n                value={this.state.description}\r\n                onChange={(e) => {\r\n                  this.setState({ description: e.target.value });\r\n                }}\r\n            />\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n    );\r\n  }\r\n\r\n  printSelPacForm = () => {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n        <tbody>\r\n        <tr>\r\n          <td>\r\n            <Button\r\n                onClick={this.openModal}\r\n                classes={{\r\n                  root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                  label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                }}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n            >\r\n              <em>패키지 선택</em>\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <em>{ this.state.package }</em>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <SimpleModal\r\n                open={this.state.modalFlag}\r\n                close={this.closeModal}\r\n                body={<SelectPackage close={this.closeModal} setPackage={(packageCode) => {\r\n                  this.state.package = packageCode;\r\n                }} />}\r\n            />\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n    );\r\n  }\r\n\r\n  printCompleteForm = () => {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n        <tbody>\r\n        <tr>\r\n          <td>\r\n            <Button\r\n                onClick={this.createAssignment}\r\n                classes={{\r\n                  root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                  label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                }}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n            >\r\n              <em>{'추가 완료'}</em>\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n    )\r\n  }\r\n\r\n  changeStep = (now) => {\r\n    this.setState({ step: now });\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n        <div className={'page_modal modal_design add_course'}>\r\n          <table>\r\n            {this.state.step === 0 ? this.printNameForm() : null}\r\n            {this.state.step === 1 ? this.printDescForm() : null}\r\n            {this.state.step === 2 ? this.printSelPacForm() : null}\r\n            {this.state.step === 3 ? this.printCompleteForm() : null}\r\n          </table>\r\n          <div className={'stepper'}>\r\n            <SimpleStepper maxSteps={4} next={this.changeStep} back={this.changeStep} />\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddAssignment.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  course: PropTypes.string.isRequired,\r\n  code: PropTypes.string,\r\n  session: {}\r\n};\r\n\r\nclass Assignments extends React.Component {\r\n  state = {\r\n    modalFlagA: false,\r\n    modalFlagB: false,\r\n    dialogFlag: false,\r\n    selectedAssignment: '',\r\n    heads: [\r\n      { id: 'title',       label: '명칭'},\r\n      { id: 'description', label: '설명'},\r\n    ],\r\n    bodys: [],\r\n    session: {}\r\n  }\r\n  /* Component Did Mount */\r\n  async componentDidMount() {\r\n    let tmp = await getSession(()=>{});\r\n    this.setState({ session: tmp.data });\r\n\r\n    await this.setBody();\r\n  }\r\n\r\n  setBody = async () => {\r\n    const { match } = this.props;\r\n    const courseCode = match.params.course_code;\r\n\r\n    await getData(`/api/course/${courseCode}/assignment`, (res) => {\r\n      this.setState({ bodys: res.data.success });\r\n    }, (err) => {\r\n      this.setState({ bodys: [] });\r\n    });\r\n  }\r\n\r\n  openModalA = () => {\r\n    this.setState({ modalFlagA: true });\r\n  }\r\n  closeModalA = () => {\r\n    this.setState({ modalFlagA: false });\r\n    this.setBody();\r\n  }\r\n\r\n  openModalB = (assignmentCode) => {\r\n    this.setState({\r\n      selectedAssignment: assignmentCode,\r\n      modalFlagB: true\r\n    });\r\n  }\r\n  closeModalB = () => {\r\n    this.setState({ modalFlagB: false });\r\n    this.setBody();\r\n  }\r\n\r\n  openDialog = (assignmentCode) => {\r\n    this.setState({\r\n      selectedAssignment: assignmentCode,\r\n      dialogFlagA: true\r\n    });\r\n  }\r\n  closeDialog = () => {\r\n    this.setState({ dialogFlagB: false });\r\n    this.setBody();\r\n  }\r\n\r\n  customEvent = (body) => {\r\n    const { history } = this.props;\r\n    history.push(`/problems/${body.package}/${body.code}`);\r\n  }\r\n\r\n  infoEvent = (body) => {\r\n    // 미완\r\n    this.openModalB(body.code);\r\n  };\r\n\r\n  deleteEvent = (body) => {\r\n    this.setState({\r\n      dialogFlag: true\r\n    });\r\n  }\r\n  agreeEvent = () => {\r\n\r\n  }\r\n  disagreeEvent = () => {\r\n\r\n  }\r\n\r\n  /* Render */\r\n  render() {\r\n    /* Props */\r\n    const { classes, match } = this.props;\r\n\r\n    /* Const */\r\n    const session = this.state.session.success;\r\n    let level = session ? session.auth.level : 1;\r\n\r\n    return (\r\n        <div className={'page problems'}>\r\n          {(level >= 2) ? <div className={'content'}>\r\n                <div className={'btn_box'}>\r\n                  <Button\r\n                      onClick={this.openModalA}\r\n                      classes={{\r\n                        root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                        label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                      }}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      startIcon={<AddIcon>send</AddIcon>}\r\n                  >\r\n                    과제 추가\r\n                  </Button>\r\n                </div>\r\n              </div> : null}\r\n          <div className={'content package_table'}>\r\n            <SimpleTable\r\n                heads={this.state.heads}\r\n                bodys={this.state.bodys}\r\n                customEvent={(level >= 2) ? null : this.customEvent}\r\n                deleteEvent={(level >= 2) ? this.deleteEvent : null}\r\n                infoEvent={(level >= 2) ? this.infoEvent : null}\r\n                infoModal={\r\n                  <SimpleModal\r\n                      title={'과제 수정'}\r\n                      open={this.state.modalFlagB}\r\n                      close={this.closeModalB}\r\n                      body={\r\n                        <AddAssignment\r\n                            classes={classes}\r\n                            close={this.closeModalB}\r\n                            course={this.props.match.params.course_code}\r\n                            code={this.state.selectedAssignment}\r\n                        />}\r\n                  />\r\n                }\r\n            />\r\n          </div>\r\n\r\n          <SimpleModal\r\n              title={'과제 추가'} open={this.state.modalFlagA}\r\n              close={this.closeModalA}\r\n              body={\r\n                <AddAssignment\r\n                    classes={classes}\r\n                    close={this.closeModalA}\r\n                    course={this.props.match.params.course_code}\r\n                />}\r\n          />\r\n          <SimpleDialog\r\n              open={this.state.dialogFlag}\r\n              onClose={this.closeDialog}\r\n              data={{\r\n                title: '과제 삭제',\r\n                content: '선택한 과제를 삭제하시겠습니까?',\r\n                agreeText: 'YES',\r\n                disagreeText: 'NO',\r\n                agreeEvent: this.agreeEvent,\r\n                disagreeEvent: this.disagreeEvent\r\n              }}\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(Assignments);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\n\r\n/* Design Import */\r\nimport './MainRoom.scss';\r\n\r\n/* Icon Import */\r\nimport {\r\n    mdiHeadQuestionOutline,\r\n    mdiAccountCheckOutline,\r\n    mdiGoogleClassroom,\r\n    mdiClipboardText ,\r\n    mdiEyeOutline,\r\n    mdiTrashCanOutline\r\n} from '@mdi/js';\r\nimport Icon from \"@mdi/react\";\r\n\r\n/* Material Import */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n    Add,\r\n    Add as AddIcon\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\nimport {\r\n    SimpleTable,\r\n    SimpleModal, SimpleSelect\r\n} from '../../components';\r\nimport AddProblem from '../AddProblem';\r\nimport { getData, putData, postData, deleteData, getSession } from '../../common'\r\nimport SimpleDialog from \"../../components/SimpleDialog\";\r\nimport SimpleStepper from \"../../components/SimpleStepper\";\r\nimport {SelectCourse} from \"../index\";\r\n\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\n// 강의 추가 Modal\r\nclass AddCourse extends React.Component {\r\n    state = {\r\n        name: '',\r\n        desc: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.code) {\r\n           // DB 처리 - 코드에 해당되는 강의 정보 불러오기\r\n        }\r\n    }\r\n\r\n    createCourse = async () => {\r\n        let sendData = {\r\n            name: this.state.name,\r\n            description: this.state.desc\r\n        }\r\n        await postData(`/api/course`, sendData, (res) => {\r\n            this.props.close();\r\n        }, (err) => {\r\n\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={'page_modal modal_design add_course'}>\r\n                <table>\r\n                    <tr>\r\n                        <th><em>강의 명칭</em></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <input\r\n                                type={'text'}\r\n                                className={'design_form input_A necessary name'}\r\n                                placeholder={'명칭'}\r\n                                value={this.state.name}\r\n                                onChange={(e) => {\r\n                                    this.setState({ name: e.target.value })\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><em>강의 설명</em></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <textarea\r\n                                className={'design_form textarea_A necessary description'}\r\n                                placeholder={'설명'}\r\n                                value={this.state.desc}\r\n                                onChange={(e) => {\r\n                                    this.setState({ desc: e.target.value });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <Button\r\n                                onClick={this.createCourse}\r\n                                classes={{\r\n                                    root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                                    label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                                }}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                <em>{ this.props.code ? '강의 수정' : '강의 개설' }</em>\r\n                            </Button>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddCourse.propTypes = {\r\n    close: PropTypes.func.isRequired,\r\n    code: PropTypes.string\r\n};\r\n\r\n\r\nclass QuestionManagement extends React.Component {\r\n    state = {\r\n        selectedAssignment: '',\r\n        assignments : [],\r\n        selectedQuestion: '',\r\n        questions: [],\r\n        title: '',\r\n        description: '',\r\n        step: 0,\r\n        session: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let tmp = await getSession(()=>{});\r\n        this.setState({ session: tmp.data });\r\n\r\n        const { course } = this.props;\r\n\r\n        await getData(`/api/course/${course}/assignment`, (res) => {\r\n            let data = [];\r\n            res.data.success.map((assignment) => {\r\n                data.push({\r\n                    label: assignment.title,\r\n                    value: assignment.code\r\n                });\r\n            });\r\n            this.setState({ assignments: data });\r\n        }, (err) => {\r\n            this.setState({ assignments: [] });\r\n        });\r\n    }\r\n\r\n    addQuestion = () => {\r\n        let sendData = {\r\n            title: this.state.title,\r\n            description: this.state.description\r\n        };\r\n        postData(`api/assignment/${this.state.selectedAssignment}/question`, sendData, (res) => {\r\n            this.props.close();\r\n        }, (err) => {\r\n\r\n        });\r\n    }\r\n    addAnswer = () => {\r\n        let sendData = {\r\n            description: this.state.description\r\n        };\r\n        postData(`/api/answer/${this.state.selectedQuestion}`, sendData, (res) => {\r\n            this.props.close();\r\n        }, (err) => {\r\n\r\n        });\r\n    }\r\n\r\n    printAssignmentList = () => {\r\n        return (\r\n            <tbody>\r\n            <tr>\r\n                <th><em>과제 선택</em></th>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <SimpleSelect\r\n                        start={this.state.selectedAssignment}\r\n                        title={'Assignments'}\r\n                        items={this.state.assignments}\r\n                        changeEvent={async (event) => {\r\n                            this.setState({ selectedAssignment: event.target.value });\r\n\r\n                            const session = this.state.session.success;\r\n                            if(session && session.auth.level >= 2){ // Professor\r\n                                await getData(`/api/assignment/${event.target.value}/question`, (res) => {\r\n                                    let data = [];\r\n                                    res.data.success.map((question) => {\r\n                                        data.push({\r\n                                            label: question.title,\r\n                                            value: question.code\r\n                                        });\r\n                                    });\r\n                                    this.setState({ questions: data });\r\n                                }, (err) => {\r\n                                    this.setState({ questions: [] });\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        );\r\n    };\r\n\r\n    printQuestionList = () => {\r\n        return (\r\n            <tbody>\r\n            <tr>\r\n                <th><em>질문 선택</em></th>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <SimpleSelect\r\n                        start={this.state.selectedQuestion}\r\n                        title={'Problems'}\r\n                        items={this.state.questions}\r\n                        changeEvent={(event) => {\r\n                            this.setState({ selectedQuestion: event.target.value });\r\n                        }}\r\n                    />\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        );\r\n    }\r\n\r\n    printQuestionForm = () => {\r\n        /* Props */\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <tbody>\r\n            <tr>\r\n                <th><em>질문 등록</em></th>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <input\r\n                        type={'text'}\r\n                        className={'design_form input_A necessary name'}\r\n                        placeholder={'제목'}\r\n                        value={this.state.title}\r\n                        onChange={(event) => {\r\n                            this.setState({ title: event.target.value })\r\n                        }}\r\n                    />\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <textarea\r\n                        className={'design_form textarea_A necessary description'}\r\n                        placeholder={'내용'}\r\n                        value={this.state.description}\r\n                        onChange={(event) => {\r\n                            this.setState({ description: event.target.value })\r\n                        }}\r\n                    />\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <Button\r\n                        onClick={this.addQuestion}\r\n                        classes={{\r\n                            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        <em>등록 완료</em>\r\n                    </Button>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        );\r\n    }\r\n\r\n    printAnswerForm = () => {\r\n        /* Props */\r\n        const { classes } = this.props;\r\n        \r\n        return (\r\n            <tbody>\r\n            <tr>\r\n                <th><em>답변 등록</em></th>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <textarea\r\n                        className={'design_form textarea_A necessary description'}\r\n                        placeholder={'내용'}\r\n                        value={this.state.description}\r\n                        onChange={(event) => {\r\n                            this.setState({ description: event.target.value })\r\n                        }}\r\n                    />\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <Button\r\n                        onClick={this.addAnswer}\r\n                        classes={{\r\n                            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        <em>등록 완료</em>\r\n                    </Button>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        );\r\n    }\r\n\r\n    changeStep = (now) => {\r\n        this.setState({ step: now });\r\n    }\r\n\r\n    render() {\r\n        const session = this.state.session.success;\r\n        const level = session ? session.auth.level : 1;\r\n\r\n        return (\r\n            <div className={'question_form'}>\r\n                <table>\r\n                    {this.state.step === 0 ? this.printAssignmentList() : null}\r\n                    {this.state.step === 1 && (level >= 2) ? this.printQuestionList() : null}\r\n                    {this.state.step === 1 && (level < 2) ? this.printQuestionForm() : null}\r\n                    {this.state.step === 2 ? this.printAnswerForm() : null}\r\n                </table>\r\n                <div className={'stepper'}>\r\n                    <SimpleStepper maxSteps={(level >= 2) ? 3 : 2} next={this.changeStep} back={this.changeStep} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nQuestionManagement.propTypes = {\r\n    close: PropTypes.func.isRequired,\r\n    course: PropTypes.string.isRequired\r\n}\r\n\r\nclass MainRoom extends React.Component {\r\n  /* State */\r\n  state = {\r\n      session: {},\r\n      courseList: [],\r\n      modalFlagA: false,\r\n      modalFlagB: false,\r\n      modalFlagC: false,\r\n      modalFlagD: false,\r\n      dialogFlag: false,\r\n      selectedCourseCode : ''\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  async componentDidMount() {\r\n      await this.setBody();\r\n  }\r\n\r\n  setBody = async () => {\r\n\r\n      let tmp = await getSession(()=>{});\r\n      this.setState({ session: tmp.data });\r\n\r\n\r\n      await getData('/api/my-course', (res) => {\r\n          this.setState({ courseList: res.data.success });\r\n      }, (err) => {\r\n          this.setState({ courseList: [] });\r\n          console.log('Error ++++++++++');\r\n      });\r\n\r\n       /*\r\n      this.setState({\r\n          session: {success:{user: {code: 'USER000005'},auth: {code: 'AUTH000006', level: 2}}},\r\n          courseList: [\r\n              { name: '강의 A', description: '설명설명', code: 'COUR000001' }\r\n          ]\r\n      })\r\n        */\r\n  }\r\n\r\n  registCourse = async (courseCode) => {\r\n      await postData(`/api/course/${courseCode}/enroll`, {}, (res) => {\r\n          this.setBody();\r\n      }, (err) => {\r\n\r\n      });\r\n  }\r\n\r\n  openModalA = () => {\r\n      this.setState({ modalFlagA: true });\r\n  }\r\n  closeModalA = async () => {\r\n      this.setState({ modalFlagA: false });\r\n      await this.setBody();\r\n  }\r\n\r\n  openModalB = (courseCode) => {\r\n      this.setState({\r\n          selectedCourseCode: courseCode,\r\n          modalFlagB: true\r\n      });\r\n  }\r\n  closeModalB = () => {\r\n      this.setState({ modalFlagB: false });\r\n  }\r\n\r\n  openModalC = () => {\r\n      this.setState({ modalFlagC: true });\r\n  }\r\n  closeModalC = () => {\r\n      this.setState({ modalFlagC: false });\r\n  }\r\n\r\n  openModalD = (courseCode) => {\r\n      this.setState({\r\n          selectedCourseCode: courseCode,\r\n          modalFlagD: true\r\n      });\r\n  }\r\n  closeModalD = () => {\r\n      this.setState({ modalFlagD: false });\r\n  }\r\n\r\n  openDialog = (courseCode) => {\r\n      this.setState({\r\n          selectedCourseCode: courseCode,\r\n          dialogFlag: true\r\n      });\r\n  }\r\n  closeDialog = () => {\r\n      this.setState({ dialogFlag: false });\r\n  }\r\n  agreeEvent = () => {\r\n      let courseCode = this.state.selectedCourseCode;\r\n\r\n      // DB 처리 - 강의 폐강\r\n  }\r\n  disagreeEvent = () => {\r\n      this.closeDialog();\r\n  }\r\n\r\n  printCourseCard = (course) => {\r\n      return (\r\n          <span className={'course_card_box'}>\r\n              <span className={'course_card'}>\r\n              <div className={'title'}>\r\n                  <em>{ course.name }</em>\r\n                  <span>\r\n                      <button className={'icon_btn'} onClick={() => { this.openModalB(course.code) }}>\r\n                          <Icon className=\"icon\" path={ mdiEyeOutline} size={0.7}/>\r\n                      </button>\r\n                      <button className={'icon_btn'} onClick={() => { this.openDialog(course.code) }}>\r\n                          <Icon className=\"icon\" path={ mdiTrashCanOutline } size={0.7}/>\r\n                      </button>\r\n                  </span>\r\n              </div>\r\n              <div className={'description'}>{ course.description }</div>\r\n              { this.printIconButtons(course.code) }\r\n          </span>\r\n          </span>\r\n      );\r\n  };\r\n  printIconButtons = (courseCode) => {\r\n      /*\r\n      * 학생: 질문, 미팅룸, 출석, 과제\r\n      * 교수: 질문, 미팅룸, 출석정보 수정, 과제 관리, 강의정보 수정\r\n      * */\r\n      const { classes } = this.props;\r\n      const session = this.state.session.success;\r\n\r\n      const userCode = session ? session.user.code : '';\r\n      const authCode = session ? session.auth.code : '';\r\n      const iconSize = 1.0;\r\n\r\n      return (\r\n          <div className={'icon_buttons'}>\r\n              <Button\r\n                  onClick={() => {\r\n                      this.openModalD(courseCode);\r\n                  }}\r\n                  classes={{\r\n                      root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                      label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                  }}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  startIcon={<Icon className=\"icon\" path={ mdiHeadQuestionOutline } size={iconSize}/>}\r\n              >\r\n                  질문 관리\r\n              </Button>\r\n              <Button\r\n                  onClick={() => {}}\r\n                  classes={{\r\n                      root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                      label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                  }}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  startIcon={<Icon className=\"icon\" path={ mdiAccountCheckOutline  } size={iconSize}/>}\r\n              >\r\n                  출석정보 수정\r\n              </Button>\r\n              <Link to={`/roomPage/${courseCode}/${userCode}/${authCode}`}>\r\n                  <Button\r\n                      onClick={() => {}}\r\n                      classes={{\r\n                          root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                          label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                      }}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      startIcon={<Icon className=\"icon\" path={ mdiGoogleClassroom  } size={iconSize}/>}\r\n                  >\r\n                      미팅 룸\r\n                  </Button>\r\n              </Link>\r\n              <Link to={`/assignments/${courseCode}`}>\r\n                  <Button\r\n                      onClick={() => {}}\r\n                      classes={{\r\n                          root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                          label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                      }}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      startIcon={<Icon className=\"icon\" path={ mdiClipboardText  } size={iconSize}/>}\r\n                  >\r\n                      과제 관리\r\n                  </Button>\r\n              </Link>\r\n          </div>\r\n      );\r\n  };\r\n\r\n  render() {\r\n    /* Props */\r\n    const { classes, match } = this.props;\r\n\r\n    /* Const */\r\n    const session = this.state.session.success;\r\n    let level = session ? session.auth.level : 1;\r\n\r\n    return (\r\n        <div className={'page main_room'}>\r\n          <div className={'content'} >\r\n            <div className={'btn_box'}>\r\n                {level >= 2 ? <Button\r\n                    onClick={this.openModalA}\r\n                    classes={{\r\n                        root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                        label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<AddIcon>send</AddIcon>}\r\n                >\r\n                    강의 개설\r\n                </Button> : <Button\r\n                    onClick={this.openModalC}\r\n                    classes={{\r\n                        root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                        label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<AddIcon>send</AddIcon>}\r\n                >\r\n                    수강 신청\r\n                </Button>}\r\n            </div>\r\n          </div>\r\n          <div className={'content course_list'}>\r\n              {this.state.courseList.map((course) => {\r\n                  return this.printCourseCard(course);\r\n              })}\r\n          </div>\r\n\r\n          <SimpleModal\r\n              title={'강의 개설'} open={this.state.modalFlagA}\r\n              close={this.closeModalA}\r\n              body={<AddCourse classes={classes} close={this.closeModalA}/>}\r\n          />\r\n          <SimpleModal\r\n              title={'강의 수정'} open={this.state.modalFlagB}\r\n              close={this.closeModalB}\r\n              body={<AddCourse classes={classes} close={this.closeModalB} code={this.state.selectedCourseCode}/>}\r\n          />\r\n            <SimpleModal\r\n                title={'수강 신청'} open={this.state.modalFlagC}\r\n                close={this.closeModalC}\r\n                body={<SelectCourse close={this.closeModalC} setCourse={(courseCode) => {\r\n                    this.registCourse(courseCode);\r\n                }}/>}\r\n            />\r\n            <SimpleModal\r\n                title={'질문 관리'} open={this.state.modalFlagD}\r\n                close={this.closeModalD}\r\n                body={<QuestionManagement close={this.closeModalD} course={this.state.selectedCourseCode} classes={classes}/>}\r\n            />\r\n          <SimpleDialog\r\n              open={this.state.dialogFlag}\r\n              onClose={this.closeDialog}\r\n              data={{\r\n                  title: '강의 폐강',\r\n                  content: '선택한 강의를 폐강하시겠습니까?',\r\n                  agreeText: 'YES',\r\n                  disagreeText: 'NO',\r\n                  agreeEvent: this.agreeEvent,\r\n                  disagreeEvent: this.disagreeEvent\r\n              }}\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(MainRoom);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SelectPackage.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport {Button} from \"@material-ui/core\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport {getData} from \"../../common\";\r\n\r\n/* Custom Import */\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass SelectPackage extends React.Component {\r\n  /* State */\r\n  state = {\r\n    packList: []\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  async componentDidMount() {\r\n    await getData('/api/package', (res) => {\r\n      this.setState({ packList: res.data.success });\r\n    }, (err) => {\r\n      this.setState({ packList: [] });\r\n      console.log('Error ++++++++++');\r\n    });\r\n  }\r\n\r\n  select = (packageCode) => {\r\n    this.props.setPackage(packageCode);\r\n    this.props.close();\r\n  }\r\n\r\n  render () {\r\n    const { classes } = this.props;\r\n    const packList = this.state.packList;\r\n    return (\r\n      <div className={'select_tags'}>\r\n        <div className={'tag_icons'}>\r\n          {packList.map((pack) => {\r\n            return <button onClick={() => { this.select(pack.code) }} className={'tag'}>\r\n              <em>{ pack.name }</em>\r\n            </button>\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelectPackage.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  setPackage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(SelectPackage);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SelectCourse.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport {Button} from \"@material-ui/core\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport {getData} from \"../../common\";\r\n\r\n/* Custom Import */\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass SelectCourse extends React.Component {\r\n  /* State */\r\n  state = {\r\n    courseList: []\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  async componentDidMount() {\r\n    await getData('/api/course', (res) => {\r\n      this.setState({ courseList: res.data.success });\r\n    }, (err) => {\r\n      this.setState({ courseList: [] });\r\n      console.log('Error ++++++++++');\r\n    });\r\n  }\r\n\r\n  select = (courseCode) => {\r\n    this.props.setCourse(courseCode);\r\n    this.props.close();\r\n  }\r\n\r\n  render () {\r\n    const { classes } = this.props;\r\n    const courseList = this.state.courseList;\r\n    return (\r\n      <div className={'select_tags'}>\r\n        <div className={'tag_icons'}>\r\n          {courseList.map((cour) => {\r\n            return <button onClick={() => { this.select(cour.code) }} className={'tag'}>\r\n              <em>{ cour.name }</em>\r\n            </button>\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelectCourse.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  setCourse: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(SelectCourse);\r\n","import axios from 'axios';\n\nconst client = axios.create();\n\n/*\n  글로벌 설정 예시:\n  \n  // API 주소를 다른 곳으로 사용함\n  client.defaults.baseURL = 'https://external-api-server.com/' \n\n  // 헤더 설정\n  client.defaults.headers.common['Authorization'] = 'Bearer a1b2c3d4';\n\n  // 인터셉터 설정\n  axios.intercepter.response.use(\\\n    response => {\n      // 요청 성공 시 특정 작업 수행\n      return response;\n    }, \n    error => {\n      // 요청 실패 시 특정 작업 수행\n      return Promise.reject(error);\n    }\n  })  \n*/\n\nexport default client;\n","import client from './client';\r\n\r\nconst ip = 'http://localhost:4000';\r\n//const address = ip.concat(\" \", URL);\r\n\r\n//세션 정보\r\n//export const getSession = () => client.get('/auth/session');\r\nexport const getSession = () => {\r\n    return {\r\n        data : {\r\n            user: {\r\n                code: 'USER000002'\r\n            },\r\n            auth: {\r\n                authority_code: 'AUTH000002'\r\n            }\r\n        }\r\n    }\r\n};\r\n//개인별 강의정보 받기\r\nexport const getUserCourse = async (user_code) =>\r\n  await client.get(ip + '/testCourseProf/' + user_code);\r\n//강좌별 강의정보 받기\r\nexport const getCourse = (course_code) =>\r\n  client.get(ip + '/testCourseProf/' + course_code);\r\n//전체강의보기\r\nexport const getAllCourse = () => client.get(ip + '/testCourseProf/all');\r\n//강의개설\r\nexport const postCourse = (user_code, courseName, description) =>\r\n  client.post(ip + '/testCourseProf', { user_code, courseName, description });\r\n//강의 내용수정\r\nexport const reviseCourse = (course_code, description, user_code) =>\r\n  client.put(ip + '/testCourseProf', { course_code, description, user_code });\r\n//폐강\r\nexport const deleteCourse = (course_code, user_code) =>\r\n  client.delete(ip + '/testCourseProf', { data: { course_code, user_code } });\r\n//학생 강의 신청\r\nexport const registerCourse = (submitValue, user_code) =>\r\n  client.post(ip + '/testCourseStud/enrolment', { submitValue, user_code });\r\n//강의 룸 정보\r\nexport const getRoomInfo = (course_code) =>\r\n  client.get(ip + '/room/' + course_code);\r\n//강의 룸 생성\r\nexport const CreateRoom = (course_code, submitValue) =>\r\n  client.post(ip + '/room', { course_code, submitValue });\r\n//강의 룸 닫기\r\nexport const closeRoom = (course_code) =>\r\n  client.delete(ip + '/room/' + course_code);\r\n//room 입장\r\nexport const InRoom = (course_code, room_code, user_code) =>\r\n  client.post(ip + '/attendance/entrance', {\r\n    course_code,\r\n    room_code,\r\n    user_code,\r\n  });\r\n//room퇴장\r\nexport const OutRoom = (course_code, room_code, user_code) =>\r\n  client.post(ip + '/attendance/exit', { course_code, room_code, user_code });\r\n//교수 출석 정보 조회\r\nexport const AllRoom = (course_code) =>\r\n  client.get(ip + '/attendance/' + course_code);\r\n//출석 확인 학생\r\nexport const StudentAttend = (course_code, user_code) =>\r\n  client.get(ip + '/attendance/student/' + user_code + '/' + course_code);\r\n//출석 수정\r\nexport const reviseAttend = (course_code, submitValue) =>\r\n  client.put(ip + '/attendance', { course_code, submitValue });\r\n//전체 과제 조회\r\nexport const AllAssign = (course_code) =>\r\n  client.get(ip + '/assignment/' + course_code);\r\n//과제 질문 조회\r\nexport const getQuestion = (assignment_code) =>\r\n  client.get(ip + '/question/' + assignment_code);\r\n//개인 질문 조회\r\nexport const getmyQuestion = (user_code) =>\r\n  client.get(ip + '/question/my/' + user_code);\r\n//질문생성\r\nexport const createQuestion = (\r\n  assignment_code,\r\n  user_code,\r\n  title,\r\n  description,\r\n) =>\r\n  client.post(ip + '/question', {\r\n    assignment_code,\r\n    user_code,\r\n    title,\r\n    description,\r\n  });\r\n//질문수정\r\nexport const reviseQuestion = (\r\n  question_code,\r\n  assignment_code,\r\n  title,\r\n  description,\r\n) =>\r\n  client.put(ip + '/question', {\r\n    question_code,\r\n    assignment_code,\r\n    title,\r\n    description,\r\n  });\r\n//질문삭제\r\nexport const deleteQuestion = (assignment_code, question_code) =>\r\n  client.delete(ip + '/question', { data: { assignment_code, question_code } });\r\n//질문답변 확인\r\nexport const getAnswer = (question_code) =>\r\n  client.get(ip + '/answer/' + question_code);\r\n//질문답변 생성\r\nexport const createAnswer = (\r\n  question_code,\r\n  user_code,\r\n  title,\r\n  description,\r\n  code,\r\n) =>\r\n  client.post(ip + '/answer', {\r\n    question_code,\r\n    user_code,\r\n    title,\r\n    description,\r\n    code,\r\n  });\r\n//질문답변 수정\r\nexport const reviseAnswer = (question_code, idx, description) =>\r\n  client.put(ip + '/answer', { question_code, idx, description });\r\n//질문답변 삭제\r\nexport const deleteAnswer = (question_code, idx) =>\r\n  client.delete(ip + '/answer', { question_code, idx });\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { getSession, getUserCourse, deleteCourse } from '../../lib/api/allapi';\r\n\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  CardText,\r\n  CardGroup,\r\n  CardSubtitle,\r\n  CardBody,\r\n} from 'reactstrap';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst CourseRoomFormBlock = styled.div`\r\n  h1 {\r\n    margin: 0;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nconst CourseRoomForm = () => {\r\n  const [CourseList, setCourseList] = useState([]);\r\n  const [id, setID] = useState('');\r\n  const [auth, setAuth] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // let response = getSession();\r\n        // let response1 = response.data.user.code;\r\n        // let response2 = response.data.auth.authority_code;\r\n        // setID(response1);\r\n        // setAuth(response2);\\\r\n        setID('USER000002');\r\n        setAuth('AUTH000002');\r\n        let res = await getUserCourse('USER000002');\r\n        setCourseList(res.data);\r\n      } catch (e) {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n  const deleteButton = (code) => {\r\n    console.log(code + '/' + id);\r\n    let res = deleteCourse(code, id);\r\n    //res = res.data;\r\n    //res=res.data.success\r\n    res = res.data;\r\n    //if (!res) return null;\r\n    // else {\r\n    // if (res === 'true') {\r\n    //alert('폐강성공!');\r\n    // } else {\r\n    //  alert('폐강실패!');\r\n    // }\r\n    //}\r\n  };\r\n  const renderCardFoot = (code) => {\r\n    if (auth === 'AUTH000002') {\r\n      //교수\r\n      const url8 = '/QuestionProblem/' + code + '/' + id + '/' + auth;\r\n      const url1 = '/roompage1/' + code + '/' + id + '/' + auth;\r\n      const url2 = '/attendance/' + code + '/' + id + '/' + auth;\r\n      const url3 = '/revisecourse/' + code + '/' + id;\r\n      const url4 = '/revisecourse/' + code + '/' + id;\r\n      return (\r\n        <div>\r\n          <Link to={url8}>\r\n            <Button to=\"/\" color=\"primary\">\r\n              질문\r\n            </Button>{' '}\r\n          </Link>\r\n          <Link to={url1}>\r\n            <Button color=\"warning\">Room</Button>{' '}\r\n          </Link>\r\n          <Link to={url2}>\r\n            <Button color=\"success\">출석정보 수정</Button>{' '}\r\n          </Link>\r\n          <Link to={url3}>\r\n            <Button color=\"info\">강의정보 수정</Button>{' '}\r\n          </Link>\r\n          <Link to={url4}>\r\n            {/*예비로 해둠 */}\r\n            <Button color=\"secondary\">과제</Button>{' '}\r\n          </Link>\r\n          <Button onClick={() => deleteButton(code)} color=\"danger\">\r\n            강의 폐강\r\n          </Button>{' '}\r\n        </div>\r\n      );\r\n    } else if (auth === 'AUTH000001') {\r\n      //학생\r\n      const url = '/roompage1/' + code + '/' + id + '/' + auth;\r\n      const url1 = '/attendance/' + code + '/' + id + '/' + auth;\r\n      const url8 = '/QuestionProblem/' + code + '/' + id + '/' + auth;\r\n      return (\r\n        <div>\r\n          <Link to={url8}>\r\n            <Button to=\"/\" color=\"primary\">\r\n              질문\r\n            </Button>{' '}\r\n          </Link>\r\n          <Link to={url}>\r\n            <Button color=\"warning\">Room</Button>{' '}\r\n          </Link>\r\n\r\n          <Link to={url1}>\r\n            <Button color=\"success\">출석</Button>{' '}\r\n          </Link>\r\n          <Link to={url1}>\r\n            {/*예비로 해둠 */}\r\n            <Button color=\"info\">과제</Button>{' '}\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const renderbutton = () => {\r\n    const url = '/opencourse/' + id;\r\n    const url1 = '/registercourse/' + id;\r\n\r\n    if (auth === 'AUTH000002') {\r\n      //교수\r\n      return (\r\n        <div>\r\n          <Link to={url}>\r\n            <Button color=\"secondary\" style={{ width: '100px' }}>\r\n              개설\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      );\r\n    } else if (auth === 'AUTH000001') {\r\n      //학생\r\n      return (\r\n        <div>\r\n          <Link to={url1}>\r\n            <Button color=\"secondary\" style={{ width: '100px' }}>\r\n              신청\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  if (!loading) {\r\n    return <CourseRoomFormBlock>대기중..</CourseRoomFormBlock>;\r\n  }\r\n\r\n  if (!auth)\r\n    return (\r\n      <div>\r\n        <p style={{ marginLeft: '30rem' }}>정보를 받아오는 중..</p>\r\n      </div>\r\n    );\r\n  if (!CourseList && CourseList.length === 0)\r\n    return (\r\n      <div>\r\n        <div style={{ marginTop: '5rem', marginLeft: '10rem' }}>\r\n          <h1>강의실</h1>\r\n          {renderbutton()}\r\n        </div>\r\n\r\n        <CardGroup\r\n          style={{ margin: '10rem', marginLeft: '10rem', width: '800px' }}\r\n        ></CardGroup>\r\n        <Card>\r\n          <p style={{ marginLeft: '30rem' }}>등록된강의가 없습니다.</p>\r\n        </Card>\r\n      </div>\r\n    );\r\n  return (\r\n    <CourseRoomFormBlock>\r\n      <div style={{ marginTop: '5rem', marginLeft: '10rem' }}>\r\n        <h1>강의실</h1>\r\n        {renderbutton()}\r\n      </div>\r\n\r\n      <CardGroup\r\n        style={{ margin: '10rem', marginLeft: '10rem', width: '800px' }}\r\n      >\r\n        <div>\r\n          <Card>\r\n            {CourseList &&\r\n              CourseList.map((k) => {\r\n                return (\r\n                  <CardBody key={k.code}>\r\n                    <CardTitle tag=\"h5\"> {k.name}</CardTitle>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n                      {' '}\r\n                    </CardSubtitle>\r\n                    <CardText>{k.description}</CardText>\r\n\r\n                    {renderCardFoot(k.code)}\r\n                  </CardBody>\r\n                );\r\n              })}\r\n          </Card>\r\n        </div>\r\n      </CardGroup>\r\n    </CourseRoomFormBlock>\r\n  );\r\n};\r\nexport default CourseRoomForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CourseRoomForm from '../components/course/CourseRoomForm';\r\n\r\n\r\nconst MainRoomPageBlock = styled.div``;\r\n\r\nconst MainRoomPage = () => {\r\n  return (\r\n    <MainRoomPageBlock>\r\n      <CourseRoomForm />\r\n    </MainRoomPageBlock>\r\n  );\r\n};\r\nexport default MainRoomPage;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n/**\n * 회원가입 / 로그인 페이지의 레이아웃을 담당하는 컴포넌트입니다.\n */\n\n/* 화면 전체를 채움 */\nconst AuthTemplateBlock = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  background: #D7E0FC;\n  /* flex로 내부 내용 중앙 정렬 */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\n/* 흰색 박스 */\nconst WhiteBox = styled.div`\n  .logo-area {\n    display: block;\n    padding-bottom: 2rem;\n    text-align: center;\n    font-weight: bold;\n    letter-spacing: 2px;\n  }\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\n  padding: 2rem;\n  width: 360px;\n  background: white;\n  border-radius: 2px;\n`;\n\nconst AuthTemplate = ({ children }) => {\n  return (\n    <AuthTemplateBlock>\n      <WhiteBox>\n        <div className=\"logo-area\">\n          <Link to=\"/\">Codinator</Link>\n        </div>\n        {children}\n      </WhiteBox>\n    </AuthTemplateBlock>\n  );\n};\n\nexport default AuthTemplate;\n","import { createAction, handleActions } from 'redux-actions';\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\nexport const startLoading = createAction(\n  START_LOADING,\n  (requestType) => requestType,\n);\n\nexport const finishLoading = createAction(\n  FINISH_LOADING,\n  (requestType) => requestType,\n);\n\nconst initialState = {};\n\nconst loading = handleActions(\n  {\n    [START_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: true,\n    }),\n    [FINISH_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: false,\n    }),\n  },\n  initialState,\n);\n\nexport default loading;\n","import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\n\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return function*(action) {\n    yield put(startLoading(type)); // 로딩 시작\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response.data,\n        meta: response,\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true,\n      });\n    }\n    yield put(finishLoading(type)); // 로딩 끝\n  };\n}\n","import client from './client';\n\n// 로그인\nexport const login = ({ username, password }) =>\n  client.get('/auth/session', { username, password });\n\n// 회원가입\nexport const register = ({ username, password, name }) =>\n  client.post('/auth/register', { username, password, name });\n\n// 로그인 상태 확인\nexport const check = () => client.get('/auth/session');\n\n// 로그아웃\nexport const logout = () => (window.location.href = '/auth/logout');\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\n  'auth/REGISTER',\n);\n\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\n  'auth/LOGIN',\n);\n\nexport const changeField = createAction(\n  CHANGE_FIELD,\n  ({ form, key, value }) => ({\n    form, // register , login\n    key, // username, password, passwordConfirm\n    value, // 실제 바꾸려는 값\n  }),\n);\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form); // register / login\nexport const register = createAction(\n  REGISTER,\n  ({ username, password, name }) => ({\n    username,\n    password,\n    name,\n  }),\n);\nexport const login = createAction(LOGIN, ({ username, password }) => ({\n  username,\n  password,\n}));\n\n// saga 생성\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\nexport function* authSaga() {\n  yield takeLatest(REGISTER, registerSaga);\n  yield takeLatest(LOGIN, loginSaga);\n}\n\nconst initialState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: '',\n    name: '',\n  },\n  login: {\n    username: '',\n    password: '',\n  },\n  auth: null,\n  authError: null,\n};\n\nconst auth = handleActions(\n  {\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\n      produce(state, (draft) => {\n        draft[form][key] = value; // 예: state.register.username을 바꾼다\n      }),\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\n      ...state,\n      [form]: initialState[form],\n      authError: null, // 폼 전환 시 회원 인증 에러 초기화\n    }),\n    // 회원가입 성공\n    [REGISTER_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    // 회원가입 실패\n    [REGISTER_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n    // 로그인 성공\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    // 로그인 실패\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n  },\n  initialState,\n);\n\nexport default auth;\n","const palette = {\n  gray: [\n    '#f8f9fa',\n    '#f1f3f5',\n    '#e9ecef',\n    '#dee2e6',\n    '#ced4da',\n    '#adb5bd',\n    '#868e96',\n    '#495057',\n    '#343a40',\n    '#212529'\n  ],\n  cyan: [\n    '#e3fafc',\n    '#c5f6fa',\n    '#99e9f2',\n    '#66d9e8',\n    '#3bc9db',\n    '#22b8cf',\n    '#15aabf',\n    '#1098ad',\n    '#0c8599',\n    '#0b7285'\n  ]\n};\n\nexport default palette;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/styles/palette';\n\nconst buttonStyle = css`\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  color: white;\n  outline: none;\n  cursor: pointer;\n\n  background: ${palette.gray[8]};\n  &:hover {\n    background: ${palette.gray[6]};\n  }\n\n  ${props =>\n    props.fullWidth &&\n    css`\n      padding-top: 0.75rem;\n      padding-bottom: 0.75rem;\n      width: 100%;\n      font-size: 1.125rem;\n    `}\n\n  ${props =>\n    props.cyan &&\n    css`\n      background:#3E68F1;\n      &:hover {\n        background: ${palette.gray[6]};\n      }\n    `}\n\n    &:disabled {\n    background: ${palette.gray[3]};\n    color: ${palette.gray[5]};\n    cursor: not-allowed;\n  }\n`;\n\nconst StyledButton = styled.button`\n  ${buttonStyle}\n`;\n\nconst StyledLink = styled(Link)`\n  ${buttonStyle}\n`;\n\nconst Button = props => {\n  return props.to ? (\n    <StyledLink {...props} cyan={props.cyan ? 1 : 0} />\n  ) : (\n    <StyledButton {...props} />\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/styles/palette';\nimport Button from '../common/Button';\n\n/**\n * 회원가입 또는 로그인 폼을 보여줍니다.\n */\n\nconst AuthFormBlock = styled.div`\n  h3 {\n    margin: 0;\n    color: ${palette.gray[8]};\n    margin-bottom: 1rem;\n  }\n`;\n\n/**\n * 스타일링된 input\n */\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n`;\n\n/**\n * 폼 하단에 로그인 혹은 회원가입 링크를 보여줌\n */\nconst Footer = styled.div`\n  margin-top: 2rem;\n  text-align: right;\n  a {\n    color: ${palette.gray[6]};\n    text-decoration: underline;\n    &:hover {\n      color: ${palette.gray[9]};\n    }\n  }\n`;\n\nconst ButtonWithMarginTop = styled(Button)`\n  margin-top: 1rem;\n`;\n\nconst textMap = {\n  login: '로그인',\n  register: '회원가입',\n  google: '구글로그인',\n};\n\n/**\n * 에러를 보여줍니다\n */\nconst ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n  font-size: 0.875rem;\n  margin-top: 1rem;\n`;\n\nconst AuthForm = ({ type, form, onChange, onSubmit, error }) => {\n  const text = textMap[type];\n  return (\n    <AuthFormBlock>\n      <h3>{text}</h3>\n      <form onSubmit={onSubmit}>\n        <StyledInput\n          autoComplete=\"username\"\n          name=\"username\"\n          placeholder=\"아이디\"\n          onChange={onChange}\n          value={form.username}\n        />\n        <StyledInput\n          autoComplete=\"new-password\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          type=\"password\"\n          onChange={onChange}\n          value={form.password}\n        />\n        {type === 'register' && (\n          <div>\n            <StyledInput\n              autoComplete=\"new-password\"\n              name=\"passwordConfirm\"\n              placeholder=\"비밀번호 확인\"\n              type=\"password\"\n              onChange={onChange}\n              value={form.passwordConfirm}\n            />\n            <StyledInput\n              autoComplete=\"name\"\n              name=\"name\"\n              placeholder=\"학생:student, 교수자:professor\"\n              type=\"name\"\n              onChange={onChange}\n              value={form.name}\n            />\n          </div>\n        )}\n\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        <ButtonWithMarginTop cyan fullWidth style={{ marginTop: '1rem' }}>\n          {text}\n        </ButtonWithMarginTop>\n      </form>\n      <Footer>\n        {type === 'login' ? (\n          <Link to=\"/register\">회원가입</Link>\n        ) : (\n          <Link to=\"/login\">로그인</Link>\n        )}\n      </Footer>\n    </AuthFormBlock>\n  );\n};\n\nexport default AuthForm;\n","import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest, call } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\n\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\n// 회원 정보 확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\n  'user/CHECK',\n);\nconst LOGOUT = 'user/LOGOUT';\n\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user'); // localStorage 에서 user 제거하고\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(authAPI.logout); // logout API 호출\n    localStorage.removeItem('user'); // localStorage 에서 user 제거\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n}\n\nconst initialState = {\n  user: null,\n  checkError: null,\n};\n\nexport default handleActions(\n  {\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\n      ...state,\n      user,\n    }),\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\n      ...state,\n      user,\n      checkError: null,\n    }),\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      user: null,\n      checkError: error,\n    }),\n    [LOGOUT]: state => ({\n      ...state,\n      user: null,\n    }),\n  },\n  initialState,\n);\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\n\nconst LoginForm = ({ history }) => {\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n  // 인풋 변경 이벤트 핸들러\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form: 'login',\n        key: name,\n        value,\n      }),\n    );\n  };\n\n  // 폼 등록 이벤트 핸들러\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { username, password } = form;\n    dispatch(login({ username, password }));\n  };\n\n  // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('로그인 실패!아이디 또는 비밀번호가 맞지 않습니다.');\n      return;\n    }\n    if (auth) {\n      console.log('로그인 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n\n  return (\n    <AuthForm\n      type=\"login\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    />\n  );\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport LoginForm from '../containers/auth/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <AuthTemplate>\n      <LoginForm />\n    </AuthTemplate>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ResponsiveBlock = styled.div`\n  padding-left: 1rem;\n  padding-right: 1rem;\n  width: 1024px;\n  margin: 0 auto; /* 중앙 정렬 */\n\n  /* 브라우저 크기에 따라 가로 사이즈 변경 */\n  @media (max-width: 1024px) {\n    width: 768px;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Responsive = ({ children, ...rest }) => {\n  // style, className, onClick, onMouseMove 등의 props를 사용할 수 있도록\n  // ...rest를 사용하여 ResponsiveBlock에게 전달\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\n};\n\nexport default Responsive;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Responsive from './Responsive';\nimport Button from './Button';\n\nconst HeaderBlock = styled.div`\n  position: fixed;\n  width: 100%;\n  background: white;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.08);\n`;\n\n/**\n * Responsive 컴포넌트의 속성에 스타일을 추가해서 새로운 컴포넌트 생성\n */\nconst Wrapper = styled(Responsive)`\n  height: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between; /* 자식 엘리먼트 사이에 여백을 최대로 설정 */\n  .logo {\n    font-size: 1.125rem;\n    font-weight: 800;\n    letter-spacing: 2px;\n  }\n  .right {\n    display: flex;\n    align-items: center;\n  }\n`;\n\n/**\n * 헤더가 fixed로 되어 있기 때문에 페이지의 컨텐츠가 4rem 아래 나타나도록 해주는 컴포넌트\n */\nconst Spacer = styled.div`\n  height: 4rem;\n`;\n\nconst UserInfo = styled.div`\n  font-weight: 800;\n  margin-right: 1rem;\n`;\n\nconst Header = ({ user, onLogout }) => {\n  return (\n    <>\n      <HeaderBlock>\n        <Wrapper>\n          <Link to=\"/\" className=\"logo\">\n            Codinator\n          </Link>\n          {user ? (\n            <div className=\"right\">\n              <UserInfo>{user.username}</UserInfo>\n              <Button onClick={onLogout}>로그아웃</Button>\n            </div>\n          ) : (\n            <div className=\"right\">\n              <Button to=\"/login\">로그인</Button>\n            </div>\n          )}\n        </Wrapper>\n      </HeaderBlock>\n      <Spacer />\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Header from '../../components/common/Header';\nimport { logout } from '../../modules/user';\n\nconst HeaderContainer = () => {\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\n  const dispatch = useDispatch();\n  const onLogout = () => {\n    dispatch(logout());\n  };\n  return <Header user={user} onLogout={onLogout} />;\n};\n\nexport default HeaderContainer;\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport styled from 'styled-components';\nconst PostListPageBlock = styled.div`\n  .image1 {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\nconst PostListPage = () => {\n  return (\n    <div>\n      <HeaderContainer />\n      <PostListPageBlock>\n        <div class=\"image1\">\n          <div\n            class=\"single-blog-area mb-100 wow fadeInUp\"\n            data-wow-delay=\"250ms\"\n          >\n            <img src=\"images/online.png\" alt=\"\" width=\"500\" height=\"300\" />\n\n            <div class=\"blog-content\">\n              <h4>온라인 학습 환경에서</h4>\n\n              <p>Coditnator와 함께하세요</p>\n            </div>\n          </div>\n        </div>\n      </PostListPageBlock>\n    </div>\n  );\n};\n\nexport default PostListPage;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nclass QpListPage extends Component {\r\n  state = { boards: [] };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }; //로딩 데이터\r\n  loadingData = async () => {\r\n    try {\r\n      const response = await axios.get('/question');\r\n      this.setState({\r\n        // boards: 'test'\r\n        boards: response.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    const { loadingData } = this;\r\n    loadingData();\r\n  }\r\n  render() {\r\n    const { boards } = this.state;\r\n    const { handleChange } = this;\r\n    return (\r\n      <Wrap>\r\n        <h2>List</h2>\r\n        <div>\r\n          {boards && (\r\n            <textarea\r\n              name=\"getBoards2\"\r\n              onChange={handleChange}\r\n              rows={7}\r\n              value={JSON.stringify(boards, null, 2)}\r\n            />\r\n          )}\r\n        </div>\r\n        {/* {console.log(boards)} */}\r\n        {/* {boards[0].id} */}\r\n        {boards.map((item) => {\r\n          return (\r\n            <ListItem key={item.id}>\r\n              <Link to={`/Qpread/${item.id}`}>\r\n                <h3>{item.title}</h3>\r\n                <p>{item.content}</p>\r\n              </Link>\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <Button>\r\n          {/* <button onClick={handleClick}>get Request</button> */}\r\n          <Link to={`/Qpwrite`}>글쓰기</Link>\r\n        </Button>\r\n      </Wrap>\r\n    );\r\n  }\r\n}\r\n//styling\r\nconst Wrap = styled.div`\r\n  padding: 20px;\r\n`;\r\nconst ListItem = styled.div`\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  padding: 20px;\r\n  border-top: 1px solid #eee;\r\n  a {\r\n    text-decoration: none;\r\n    h3 {\r\n      margin: 0;\r\n      padding: 0;\r\n      color: #212121;\r\n    }\r\n    p {\r\n      margin: 0;\r\n      padding: 10px 0 0 0;\r\n      color: #787878;\r\n    }\r\n    &:hover {\r\n      h3 {\r\n        color: #0066ff;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Button = styled.div`\r\n  border-top: 1px solid #eee;\r\n  padding: 20px;\r\n  a {\r\n    float: right;\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    text-decoration: none;\r\n    background: #212121;\r\n    color: #fff;\r\n  }\r\n`;\r\nexport default QpListPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../components/common/Button';\r\n\r\nimport { getCourse, reviseCourse } from '../lib/api/allapi';\r\n\r\nconst ReviseCoursePageBlock = styled.div``;\r\n\r\nconst ReviseCourseFormBlock = styled.div`\r\n  font-size: 1rem;\r\n  border: none;\r\n  font-weight: bold;\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  bt {\r\n    position: absolute;\r\n\r\n    left: 100px;\r\n\r\n    top: 150px;\r\n  }\r\n`;\r\nconst CourseContainerBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: white;\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst InformBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 600px;\r\n  height: 580px;\r\n  background: #d7e0fc;\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst ReviseCoursePage = ({ match }) => {\r\n  const course_code = match.params.course_code;\r\n  const user_code = match.params.user_code;\r\n  const [description, setDescription] = useState('');\r\n  const onChangeDescription = (e) => setDescription(e.target.value);\r\n\r\n  const onClick = async (description) => {\r\n    console.log('---------' + course_code);\r\n    console.log('---------' + description);\r\n    console.log('---------' + user_code);\r\n    let res = await reviseCourse(course_code, description, user_code);\r\n    res = res.data.success;\r\n    //if (res === 'true') {\r\n    //수정성공\r\n    // alert('수정 성공!');\r\n    // } else {\r\n    //수정 실패\r\n    // alert('수정 실패!');\r\n    // }\r\n  };\r\n  const renderInform = () => {\r\n    return (\r\n      <div>\r\n        <form id=\"gform\" class=\"pure-form pure-form-stacked\" action=\"\">\r\n          <fieldset class=\"pure-group\">\r\n            <label for=\"description\">강의 설명 </label>\r\n            <textarea\r\n              id=\"description\"\r\n              name=\"description\"\r\n              rows=\"10\"\r\n              cols=\"100\"\r\n              placeholder=\"\"\r\n              onChange={onChangeDescription}\r\n              value={description}\r\n            ></textarea>\r\n          </fieldset>\r\n\r\n          <Button\r\n            onClick={() => onClick(description)}\r\n            class=\"bt\"\r\n            cyan\r\n            width=\"100%\"\r\n          >\r\n            수정\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <ReviseCoursePageBlock>\r\n      <CourseContainerBlock>\r\n        <InformBox>\r\n          <ReviseCourseFormBlock>\r\n            <div>\r\n              <h1>강의정보 수정</h1>\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"http://yui.yahooapis.com/pure/0.6.0/pure-min.css\"\r\n              />\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"\r\n              />\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdn.rawgit.com/dwyl/html-form-send-email-via-google-script-without-server/master/style.css\"\r\n              />\r\n              {renderInform()}\r\n            </div>\r\n          </ReviseCourseFormBlock>\r\n        </InformBox>\r\n      </CourseContainerBlock>\r\n    </ReviseCoursePageBlock>\r\n  );\r\n};\r\nexport default ReviseCoursePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from '@material-ui/core/Input';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { AllRoom, reviseAttend, StudentAttend } from '../lib/api/allapi';\r\nimport Button from '../components/common/Button';\r\n\r\nconst AttendTemplateBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: white;\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst TableBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 1000px;\r\n  background: white;\r\n  border-radius: 2px;\r\n`;\r\nconst AttendFormBlock = styled.div`\r\n  margin: 0 auto;\r\n\r\n  border: none;\r\n  padding: 1rem;\r\n  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap');\r\n\r\n  body {\r\n    font-family: 'Quicksand', sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 0;\r\n    color: #4d4d4d;\r\n  }\r\n\r\n  #title {\r\n    margin-top: 1px;\r\n    margin-left: 200px;\r\n  }\r\n\r\n  #room {\r\n    border-collapse: collapse;\r\n    border: 3px solid #ddd;\r\n  }\r\n\r\n  #room td,\r\n  #room th {\r\n    border: 1px solid #ddd;\r\n    padding: 12px;\r\n  }\r\n\r\n  #room tr:hover {\r\n    background-color: #ddd;\r\n  }\r\n\r\n  #room th {\r\n    padding: 10px;\r\n    text-align: center;\r\n    background-color: #3e68f1;\r\n    color: white;\r\n  }\r\n\r\n  .opration {\r\n    text-align: center;\r\n  }\r\n\r\n  .button {\r\n    border: none;\r\n    outline: none;\r\n    font-size: 11px;\r\n    font-family: 'Quicksand', sans-serif;\r\n    color: #f44336;\r\n    padding: 3px 10px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    border: 1px solid #f44336;\r\n    background-color: transparent;\r\n  }\r\n\r\n  .button:active {\r\n    border: 1px solid blue;\r\n  }\r\n`;\r\n\r\nconst AtttendancePage = ({ match }) => {\r\n  const course_code = match.params.course_code;\r\n  const user_code = match.params.user_code;\r\n  const auth = match.params.auth;\r\n  console.log(course_code);\r\n  console.log(user_code);\r\n  console.log(auth);\r\n  const [rooms, setRooms] = useState([]);\r\n  const [strooms, setSRooms] = useState([]);\r\n  const [title, setTitle] = useState();\r\n  const [id, setId] = useState('');\r\n  const [attendance, setAttend] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let response = await AllRoom(course_code);\r\n        response = response.data;\r\n        setRooms(response);\r\n        let response1 = await StudentAttend(course_code, user_code);\r\n        setSRooms(response1.data);\r\n      } catch (e) {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [course_code, user_code]);\r\n\r\n  const setIdText = (e) => {\r\n    setId(e.target.value);\r\n  };\r\n  const setTitleText = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const setAttendText = (e) => {\r\n    setAttend(e.target.value);\r\n  };\r\n\r\n  const save = (e) => {\r\n    e.preventDefault();\r\n    const submitValue = {\r\n      title: title,\r\n      id: id,\r\n      attendance: attendance,\r\n    };\r\n    console.log(title + '/' + id + '/' + attendance);\r\n    let res = reviseAttend(course_code, submitValue);\r\n    // if (res['success'] !== undefined) {\r\n    //  alert('출석정보 수정 완료');\r\n    // } else {\r\n    //  alert('출석정보 수정 실패');\r\n    // }\r\n  };\r\n  if (!loading) {\r\n    return <AttendTemplateBlock>대기중..</AttendTemplateBlock>;\r\n  }\r\n  if (!rooms)\r\n    return (\r\n      <div>\r\n        <p style={{ marginLeft: '30rem' }}>정보를 받아오는 중..</p>\r\n      </div>\r\n    );\r\n  const revise = () => {\r\n    if (auth === 'AUTH000002') {\r\n      return (\r\n        <div>\r\n          <h4 style={{ fontWeight: 'bold' }}>출석정보수정</h4>\r\n          <form\r\n            onSubmit={save}\r\n            style={{ marginTop: '1px', marginLeft: '200px' }}\r\n          >\r\n            <FormLabel htmlFor=\"title\">주차</FormLabel>\r\n            <NativeSelect id=\"title\" name=\"title\" onChange={setTitleText}>\r\n              <option value={title}></option>\r\n              <option value=\"ROOM000001\">1주차</option>\r\n              <option value=\"ROOM000002\">2주차</option>\r\n              <option value=\"ROOM000003\">3주차</option>\r\n              <option value=\"ROOM000004\">4주차</option>\r\n              <option value=\"ROOM000005\">5주차</option>\r\n              <option value=\"ROOM000006\">6주차</option>\r\n              <option value=\"ROOM000007\">7주차</option>\r\n              <option value=\"ROOM000008\">8주차</option>\r\n              <option value=\"ROOM000009\">9주차</option>\r\n            </NativeSelect>\r\n            <br />\r\n            <FormLabel htmlFor=\"id\">아이디</FormLabel>\r\n            <Input\r\n              name=\"decription\"\r\n              id=\"description\"\r\n              placeholder=\"\"\r\n              onChange={setIdText}\r\n            />\r\n            <br />\r\n            <FormLabel htmlFor=\"attend_v\">출석상태</FormLabel>\r\n            <NativeSelect\r\n              id=\"attend_v\"\r\n              name=\"attend_v\"\r\n              onChange={setAttendText}\r\n            >\r\n              <option value={attendance}></option>\r\n              <option value=\"1\">출석</option>\r\n              <option value=\"0\">결석</option>\r\n            </NativeSelect>\r\n            <br />\r\n            <br />\r\n            <Button\r\n              type=\"submit\"\r\n              value=\"저장\"\r\n              style={{ backgroundColor: '#3E68F1', color: 'white' }}\r\n            >\r\n              수정하기\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  };\r\n\r\n  const renderHeader = () => {\r\n    let headerElement = [\r\n      '주차',\r\n      '아이디',\r\n      '강의소요시간',\r\n      '출석한 시간',\r\n      '출석여부',\r\n    ];\r\n    let headerElement1 = ['주차', '강의소요시간', '출석한 시간', '출석여부'];\r\n    if (auth === 'AUTH000002') {\r\n      return headerElement.map((key, index) => {\r\n        return <th key={index}>{key.toUpperCase()}</th>;\r\n      });\r\n    } else if (auth === 'AUTH000001') {\r\n      return headerElement1.map((key, index) => {\r\n        return <th key={index}>{key.toUpperCase()}</th>;\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderBody = () => {\r\n    if (auth === 'AUTH000002') {\r\n      return (\r\n        rooms &&\r\n        rooms.map(({ code, user_code, class_time, attend_time, attend }) => {\r\n          return (\r\n            <tr key={code}>\r\n              <td>{code}</td>\r\n              <td>{user_code}</td>\r\n              <td>{class_time}</td>\r\n              <td>{attend_time}</td>\r\n              <td>{attend ? 'O' : 'X'}</td>\r\n            </tr>\r\n          );\r\n        })\r\n      );\r\n    } else if (auth === 'AUTH000001') {\r\n      return (\r\n        strooms &&\r\n        strooms.map(({ code, class_time, attend_time, attend }) => {\r\n          return (\r\n            <tr key={code}>\r\n              <td>{code}</td>\r\n              <td>{class_time}</td>\r\n              <td>{attend_time}</td>\r\n              <td>{attend ? 'O' : 'X'}</td>\r\n            </tr>\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AttendTemplateBlock>\r\n      <TableBox>\r\n        <AttendFormBlock style={{ marginTop: '300px' }}>\r\n          <>\r\n            <div style={{ margin: '100px' }}>\r\n              <h1 style={{ fontWeight: 'bold' }}>출석</h1>\r\n              <table id=\"room\">\r\n                <thead>\r\n                  <tr style={{ marginTop: '900px' }}>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>{renderBody()}</tbody>\r\n              </table>\r\n            </div>\r\n            {revise()}\r\n          </>\r\n        </AttendFormBlock>\r\n      </TableBox>\r\n    </AttendTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AtttendancePage;\r\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, register } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\nconst RegisterForm = ({ history }) => {\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.register,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n  // 인풋 변경 이벤트 핸들러\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form: 'register',\n        key: name,\n        value,\n      }),\n    );\n  };\n\n  // 폼 등록 이벤트 핸들러\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { username, password, passwordConfirm, name } = form;\n    // 하나라도 비어있다면\n    if ([username, password, passwordConfirm, name].includes('')) {\n      setError('빈 칸을 모두 입력하세요.');\n      return;\n    }\n\n    // 비밀번호가 일치하지 않는다면\n    if (password !== passwordConfirm) {\n      setError('비밀번호가 일치하지 않습니다.');\n      dispatch(changeField({ form: 'register', key: 'password', value: '' }));\n      dispatch(\n        changeField({ form: 'register', key: 'passwordConfirm', value: '' }),\n      );\n      return;\n    }\n    //비밀번호 조건 불만족\n    if (!(password.length > 4 && password.length < 15)) {\n      setError('비밀번호 길이가 4이상 15이하 이어야 합니다.');\n      dispatch(changeField({ form: 'register', key: 'password', value: '' }));\n      dispatch(\n        changeField({ form: 'register', key: 'passwordConfirm', value: '' }),\n      );\n      return;\n    }\n    if (name !== 'student' || name !== 'professor') {\n      setError('student 또는 professor를 입력하세요. ');\n      dispatch(changeField({ form: 'register', key: 'name', value: '' }));\n\n      return;\n    }\n\n    dispatch(register({ username, password, name }));\n  };\n\n  // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n  useEffect(() => {\n    dispatch(initializeForm('register'));\n  }, [dispatch]);\n\n  // 회원가입 성공 / 실패 처리\n  useEffect(() => {\n    if (authError) {\n      // 계정명이 이미 존재할 때\n      if (authError.response.status === 409) {\n        setError('ID 중복');\n        return;\n      }\n      // 기타 이유\n      setError('회원가입 실패!');\n      return;\n    }\n\n    if (auth) {\n      console.log('가입 완료! 환영합니다.');\n      console.log(auth);\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  // user 값이 잘 설정되었는지 확인\n  useEffect(() => {\n    if (user) {\n      history.push('/'); // 홈 화면으로 이동\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n\n  return (\n    <AuthForm\n      type=\"register\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    />\n  );\n};\n\nexport default withRouter(RegisterForm);\n","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport RegisterForm from '../containers/auth/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <AuthTemplate>\n      <RegisterForm />\n    </AuthTemplate>\n  );\n};\n\nexport default RegisterPage;\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst DeleteCourseBlock = styled.div`\r\n  margin: 0 auto;\r\n\r\n  border: none;\r\n  padding: 1rem;\r\n  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap');\r\n\r\n  body {\r\n    font-family: 'Quicksand', sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 0;\r\n    color: #4d4d4d;\r\n  }\r\n\r\n  #title {\r\n    margin-top: 1px;\r\n    margin-left: 200px;\r\n  }\r\n\r\n  #room {\r\n    border-collapse: collapse;\r\n    border: 3px solid #ddd;\r\n  }\r\n\r\n  #room td,\r\n  #room th {\r\n    border: 1px solid #ddd;\r\n    padding: 12px;\r\n  }\r\n\r\n  #room tr:hover {\r\n    background-color: #ddd;\r\n  }\r\n\r\n  #room th {\r\n    padding: 10px;\r\n    text-align: center;\r\n    background-color: #3e68f1;\r\n    color: white;\r\n  }\r\n\r\n  .opration {\r\n    text-align: center;\r\n  }\r\n\r\n  .button {\r\n    border: none;\r\n    outline: none;\r\n    font-size: 11px;\r\n    font-family: 'Quicksand', sans-serif;\r\n    color: #f44336;\r\n    padding: 3px 10px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    border: 1px solid #f44336;\r\n    background-color: transparent;\r\n  }\r\n\r\n  .button:active {\r\n    border: 1px solid blue;\r\n  }\r\n`;\r\n\r\nconst DeleteCoursePage = () => {\r\n  const [courseItem, setList] = useState([]);\r\n  const [usercode, setUserCode] = useState([]);\r\n  const [title, setTitle] = useState();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getCourse();\r\n  });\r\n\r\n  const setTitleText = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const getData = () => {\r\n    const response = axios.get('/auth/session');\r\n    setUserCode(response.user);\r\n  };\r\n  const getCourse = () => {\r\n    const URL = '/course' + { usercode };\r\n    const response = axios.get(URL);\r\n    setList(response.user.code);\r\n  };\r\n  const save = (e) => {\r\n    e.preventDefault();\r\n    const submitValue = {\r\n      title: title,\r\n    };\r\n\r\n    axios.delete('/course', { usercode, submitValue }).then((res) => {\r\n      if (res.success === 'true') {\r\n        alert('강의폐강 성공');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <DeleteCourseBlock>\r\n      <>\r\n        <br />\r\n        <br />\r\n        <h1 id=\"title\">폐강</h1>\r\n        <div style={{ margin: '200px' }}>\r\n          <form\r\n            onSubmit={save}\r\n            style={{ marginTop: '1px', marginLeft: '200px' }}\r\n          >\r\n            <FormLabel htmlFor=\"title\">주차</FormLabel>\r\n            <NativeSelect id=\"title\" name=\"title\" onChange={setTitleText}>\r\n              <option value={title}></option>\r\n\r\n              {courseItem.map((course) => (\r\n                <option value={course.code}>{course.name}</option>\r\n              ))}\r\n            </NativeSelect>\r\n            <br />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              value=\"저장\"\r\n              style={{ backgroundColor: '#3E68F1', color: 'white' }}\r\n            >\r\n              수정하기\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    </DeleteCourseBlock>\r\n  );\r\n};\r\nexport default DeleteCoursePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { getAllCourse, registerCourse } from '../lib/api/allapi';\r\nimport Button from '../components/common/Button';\r\nconst RegisterCoursePageBlock = styled.div``;\r\nconst AttendTemplateBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst TableBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 1000px;\r\n  background: white;\r\n  border-radius: 2px;\r\n`;\r\nconst StudentRegisterCourseBlock = styled.div`\r\n  margin: 0 auto;\r\n\r\n  border: none;\r\n  padding: 1rem;\r\n  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap');\r\n\r\n  body {\r\n    font-family: 'Quicksand', sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 0;\r\n    color: #4d4d4d;\r\n  }\r\n\r\n  #title {\r\n    margin-top: 1px;\r\n    margin-left: 200px;\r\n  }\r\n\r\n  #room {\r\n    border-collapse: collapse;\r\n    border: 3px solid #ddd;\r\n  }\r\n\r\n  #room td,\r\n  #room th {\r\n    border: 1px solid #ddd;\r\n    padding: 12px;\r\n  }\r\n\r\n  #room tr:hover {\r\n    background-color: #ddd;\r\n  }\r\n\r\n  #room th {\r\n    padding: 10px;\r\n    text-align: center;\r\n    background-color: #3e68f1;\r\n    color: white;\r\n  }\r\n\r\n  .opration {\r\n    text-align: center;\r\n  }\r\n\r\n  .button {\r\n    border: none;\r\n    outline: none;\r\n    font-size: 11px;\r\n    font-family: 'Quicksand', sans-serif;\r\n    color: #f44336;\r\n    padding: 3px 10px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    border: 1px solid #f44336;\r\n    background-color: transparent;\r\n  }\r\n\r\n  .button:active {\r\n    border: 1px solid blue;\r\n  }\r\n`;\r\nconst RegisterCoursePage = ({ match }) => {\r\n  const user_code = match.params.user_code;\r\n  const [name, setName] = useState('');\r\n  const [courseitem, setCourseitem] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let response = await getAllCourse();\r\n        response = response.data;\r\n        setCourseitem(response);\r\n      } catch (e) {\r\n        console.log(e);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const setNameText = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const save = (e) => {\r\n    e.preventDefault();\r\n    const submitValue = {\r\n      name: name,\r\n    };\r\n    console.log(name);\r\n    console.log(user_code);\r\n    registerCourse(submitValue, user_code).then(function (data) {\r\n      // if (data['success'] !== undefined) {\r\n      //수강 신청성공\r\n      //  alert('수강 신청 성공!');\r\n      //  } else {\r\n      //로그인 실패\r\n      //  alert('수강 신청 실패!');\r\n      //  }\r\n    });\r\n  };\r\n  const renderHeader = () => {\r\n    let headerElement = ['강의명', '강의설명'];\r\n\r\n    return headerElement.map((key, index) => {\r\n      return <th key={index}>{key.toUpperCase()}</th>;\r\n    });\r\n  };\r\n  const renderBody = () => {\r\n    return courseitem.map((item) => (\r\n      <tr key={item.code}>\r\n        <td>{item.name}</td>\r\n        <td>{item.description}</td>\r\n      </tr>\r\n    ));\r\n  };\r\n  return (\r\n    <RegisterCoursePageBlock>\r\n      <AttendTemplateBlock>\r\n        <TableBox>\r\n          <StudentRegisterCourseBlock>\r\n            <>\r\n              <div style={{ marginTop: '100px' }}>\r\n                <h1 style={{ fontWeight: 'bold' }}>강의 신청</h1>\r\n                <br />\r\n                <form\r\n                  onSubmit={save}\r\n                  style={{ marginTop: '1px', marginLeft: '200px' }}\r\n                >\r\n                  <FormLabel htmlFor=\"name\">강의명</FormLabel>\r\n                  <NativeSelect id=\"name\" name=\"title\" onChange={setNameText}>\r\n                    {courseitem.map((item) => (\r\n                      <option value={item.code}>{item.name}</option>\r\n                    ))}\r\n                  </NativeSelect>\r\n                  <br />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    style={{\r\n                      backgroundColor: '#3E68F1',\r\n                      color: 'white',\r\n                      marginTop: '10px',\r\n                      width: '200px',\r\n                    }}\r\n                  >\r\n                    신청하기\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n              <br />\r\n              <h1 style={{ fontWeight: 'bold' }}>개설강의 목록</h1>\r\n              <div>\r\n                <table id=\"room\">\r\n                  <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                  </thead>\r\n                  <tbody>{renderBody()}</tbody>\r\n                </table>\r\n              </div>\r\n            </>\r\n          </StudentRegisterCourseBlock>\r\n        </TableBox>\r\n      </AttendTemplateBlock>\r\n    </RegisterCoursePageBlock>\r\n  );\r\n};\r\nexport default RegisterCoursePage;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { postCourse } from '../lib/api/allapi';\r\nimport Button from '../components/common/Button';\r\nconst OpenCoursePageBlock = styled.div``;\r\nconst CourseContainerBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: white;\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst InformBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 600px;\r\n  height: 580px;\r\n  background: #d7e0fc;\r\n  border-radius: 2px;\r\n`;\r\nconst CourseFormBlock = styled.div`\r\n  font-size: 1rem;\r\n  border: none;\r\n  font-weight: bold;\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  bt {\r\n    position: absolute;\r\n\r\n    left: 100px;\r\n\r\n    top: 150px;\r\n  }\r\n`;\r\nconst OpenCoursePage = ({ match }) => {\r\n  const user_code = match.params.user_code;\r\n  const [name, setName] = useState('');\r\n  const [description, setDesc] = useState('');\r\n\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const onChangeDesc = (e) => {\r\n    setDesc(e.target.value);\r\n  };\r\n  const onClick = async (e) => {\r\n    e.preventdefault();\r\n    let res = await postCourse(user_code, name, description);\r\n    res = res.data.result.affectedRows;\r\n    // if (res === 1) {\r\n    //  alert('강의개설 완료!');\r\n    // } else {\r\n    //  alert('강의개설 실패!');\r\n    //  }\r\n  };\r\n  if (!user_code) return <div>유저정보 안받아짐</div>;\r\n  return (\r\n    <OpenCoursePageBlock>\r\n      <CourseContainerBlock>\r\n        <InformBox>\r\n          <CourseFormBlock>\r\n            <div>\r\n              <h1>강의 개설</h1>\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"http://yui.yahooapis.com/pure/0.6.0/pure-min.css\"\r\n              />\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"\r\n              />\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdn.rawgit.com/dwyl/html-form-send-email-via-google-script-without-server/master/style.css\"\r\n              />\r\n\r\n              <form id=\"gform\" class=\"pure-form pure-form-stacked\" action=\"\">\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"name\">강의 명칭</label>\r\n                  <input\r\n                    type=\"text \"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"입력하세요.\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    onChange={onChangeName}\r\n                    value={name}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"definition\">강의 설명 </label>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    placeholder=\"입력하세요.\"\r\n                    onChange={onChangeDesc}\r\n                    value={description}\r\n                  ></textarea>\r\n                </fieldset>\r\n\r\n                <Button class=\"bt\" cyan width=\"100%\" onClick={onClick}>\r\n                  개설\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </CourseFormBlock>\r\n        </InformBox>\r\n      </CourseContainerBlock>\r\n    </OpenCoursePageBlock>\r\n  );\r\n};\r\nexport default OpenCoursePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { AllAssign } from '../lib/api/allapi';\r\nimport Button from '../components/common/Button';\r\nconst QpPageBlock = styled.div``;\r\nconst QpFormBlock = styled.div``;\r\nconst QpPage = ({ match }) => {\r\n  const course_code = match.params.course_code;\r\n  const user_code = match.params.user_code;\r\n  const auth = match.params.auth;\r\n  const [problemList, setProblemList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let response = await AllAssign(course_code);\r\n        console.log('----' + course_code);\r\n        response = response.data;\r\n        setProblemList(response);\r\n      } catch (e) {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [course_code]);\r\n  if (!loading) {\r\n    return <QpPageBlock>대기중..</QpPageBlock>;\r\n  }\r\n  if (!problemList && problemList.length === 0)\r\n    return (\r\n      <div>\r\n        <p style={{ marginLeft: '30rem' }}>등록된 과제가 없습니다.</p>\r\n      </div>\r\n    );\r\n  if (auth === 'AUTH000002') {\r\n    return (\r\n      <div>\r\n        <QpFormBlock>\r\n          <div>\r\n            <p>\r\n              <strong>\r\n                <h1 style={{ marginTop: '90px', marginLeft: '100px' }}>\r\n                  과제선택\r\n                </h1>\r\n              </strong>\r\n            </p>\r\n            <div>\r\n              {problemList &&\r\n                problemList.map((k) => {\r\n                  let url =\r\n                    '/select/' +\r\n                    course_code +\r\n                    '/' +\r\n                    user_code +\r\n                    '/' +\r\n                    k.code +\r\n                    '/' +\r\n                    auth;\r\n                  return (\r\n                    <ListGroup style={{ width: '500px', margin: '190px' }}>\r\n                      <Link to={url}>\r\n                        <ListGroupItem active tag=\"a\" href=\"#\" action>\r\n                          {k.code}\r\n                        </ListGroupItem>\r\n                      </Link>\r\n                    </ListGroup>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </QpFormBlock>\r\n      </div>\r\n    );\r\n  } else if (auth === 'AUTH000001') {\r\n    return (\r\n      <div>\r\n        <QpFormBlock>\r\n          <div>\r\n            <p>\r\n              <strong>\r\n                <h1 style={{ marginTop: '90px', marginLeft: '100px' }}>과제</h1>\r\n              </strong>\r\n            </p>\r\n            <div>\r\n              {problemList &&\r\n                problemList.map((k) => {\r\n                  let url =\r\n                    '/Qpwrite/' +\r\n                    course_code +\r\n                    '/' +\r\n                    user_code +\r\n                    '/' +\r\n                    k.code +\r\n                    '/' +\r\n                    auth;\r\n                  let url_2 =\r\n                    '/select/' +\r\n                    course_code +\r\n                    '/' +\r\n                    user_code +\r\n                    '/' +\r\n                    k.code +\r\n                    '/' +\r\n                    auth;\r\n                  return (\r\n                    <div>\r\n                      <ListGroup style={{ width: '500px', margin: '190px' }}>\r\n                        <ListGroupItem active tag=\"a\" href=\"#\" action>\r\n                          {k.code}\r\n                          <Link to={url}>\r\n                            {' '}\r\n                            <Button\r\n                              style={{\r\n                                backgroundColor: 'white',\r\n                                color: 'black',\r\n                                marginLeft: '5px',\r\n                              }}\r\n                            >\r\n                              질문등록\r\n                            </Button>{' '}\r\n                          </Link>{' '}\r\n                        </ListGroupItem>\r\n                      </ListGroup>\r\n                      <div>\r\n                        <Link to={url_2}>\r\n                          <Button style={{ width: '500px', margin: '190px' }}>\r\n                            내 과거 질문\r\n                          </Button>{' '}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </QpFormBlock>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default QpPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nconst CommentsBlock = styled.div`\r\n  .comment {\r\n    border: 1px solid #ccc;\r\n    padding: 1em;\r\n    margin: 1em 0;\r\n  }\r\n`;\r\nexport default class Comments extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comments: [],\r\n      id: '',\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({ comments: e.target.value });\r\n  };\r\n  componentDidMount() {\r\n    axios.get(`/auth/session`).then((res) => {\r\n      this.setState({ id: res.user.code });\r\n    });\r\n    axios.get(`/queston`).then((res) => {\r\n      let comm = [];\r\n      for (var i in res.data) {\r\n        comm.push({ index: i, value: res.data[i] });\r\n      }\r\n      this.setState({ comments: comm });\r\n    });\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.prevenDefault();\r\n\r\n    const comments_group = {\r\n      comments: this.state.comments,\r\n    };\r\n    axios.post(`/question`, { comments_group }).then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      if (res.data['success'] !== undefined) {\r\n        //등록 성공\r\n        alert('답변등록이 완료되었습니다.');\r\n      } else {\r\n        //로그인 실패\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { comments } = this.state;\r\n    return (\r\n      <CommentsBlock>\r\n        <div className=\"form-group\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label>New comment</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"comments\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <div className=\"text-right\">\r\n              <button type=\"submit\"> 등록</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {comments.map((comment) => {\r\n          return (\r\n            <div key={comment.index} className=\"comment\">\r\n              {comment.value}\r\n            </div>\r\n          );\r\n        })}\r\n      </CommentsBlock>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n//styling\r\nconst Wrap = styled.div`\r\n  padding: 20px;\r\n  h2 {\r\n    padding-bottom: 20px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  p {\r\n    min-height: 200px;\r\n  }\r\n`;\r\nconst Button = styled.div`\r\n  border-top: 1px solid #eee;\r\n  padding: 20px;\r\n  a {\r\n    float: right;\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    text-decoration: none;\r\n    background: #f2f2f2;\r\n    border: 1px solid #ddd;\r\n    color: #424242;\r\n    font-size: 16px;\r\n  }\r\n  a + a {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\nconst URL = '/question';\r\nclass ReadQuestion extends Component {\r\n  state = { id: '', board: [] }; //로딩 데이터\r\n  getEmployees() {\r\n    return axios.get('/question');\r\n  }\r\n  getID = async () => {\r\n    try {\r\n      // const id = 0; //test id\r\n      const response = await axios.get(`/auth/session`);\r\n      this.setState({\r\n        id: response.user.code,\r\n      });\r\n      console.log(response.user.code);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  loadingData = async () => {\r\n    try {\r\n      // const id = 0; //test id\r\n      const { id } = this.props.match.params;\r\n      console.log(id);\r\n      const response = await axios.get(`question/${id}`);\r\n      this.setState({\r\n        // boards: 'test'\r\n        board: response.data,\r\n      });\r\n      console.log(response.data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    const { getID, loadingData } = this;\r\n    getID();\r\n    loadingData();\r\n  }\r\n  UpdatePost() {\r\n    axios\r\n      .post('/board' + this.board)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n  DeletePost() {\r\n    axios\r\n      .delete(`${URL}/${this.id}`)\r\n      .then(function (response) {\r\n        // handle success\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  }\r\n  render() {\r\n    const { board } = this.state;\r\n    return (\r\n      <Wrap>\r\n        <h2>{board.title}</h2>\r\n        <p>{board.content}</p>\r\n        <Button>\r\n          <Link to=\"/Qplist\">목록</Link>\r\n          <a onClick={() => this.UpdatePost()}>수정</a>\r\n          <a onClick={() => this.DeletePost()}>삭제</a>\r\n        </Button>\r\n      </Wrap>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReadQuestion;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Comments from '../components/comment/Comments';\r\n\r\nimport ReadQuestion from '../components/comment/ReadQuestion';\r\n\r\nconst QpreadPageBlock = styled.div``;\r\n\r\nconst QpreadPage = () => {\r\n  return (\r\n    <QpreadPageBlock>\r\n      <ReadQuestion />\r\n      <Comments />\r\n    </QpreadPageBlock>\r\n  );\r\n};\r\nexport default QpreadPage;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../components/common/Button';\r\nimport { createQuestion } from '../lib/api/allapi';\r\nconst QpwritePageBlock = styled.div``;\r\nconst InformBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 600px;\r\n  height: 580px;\r\n  background: #d7e0fc;\r\n  border-radius: 2px;\r\n`;\r\nconst CourseContainerBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: white;\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst CourseFormBlock = styled.div`\r\n  font-size: 1rem;\r\n  border: none;\r\n  font-weight: bold;\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  bt {\r\n    position: absolute;\r\n\r\n    left: 100px;\r\n\r\n    top: 150px;\r\n  }\r\n`;\r\n\r\nconst QpwritePage = ({ match }) => {\r\n  const course_code = match.params.course_code;\r\n  const user_code = match.params.user_code;\r\n  const code = match.params.code;\r\n  const auth = match.params.auth;\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDesc] = useState('');\r\n\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onChangeDesc = (e) => {\r\n    setDesc(e.target.value);\r\n  };\r\n  const onClick = () => {\r\n    if (!title || !description) return alert('모든 필수정보를 입력하세요.');\r\n    let res = createQuestion(code, user_code, title, description);\r\n    res = res.result.result.affectedRows;\r\n    //if (res === '1') {\r\n    //alert('질문등록 완료!');\r\n    //  } else {\r\n    // alert('질문등록 실패!');\r\n    //  }\r\n  };\r\n  if (!user_code) return <div>유저정보 안받아짐</div>;\r\n  if (!course_code) return <div>코스정보 안받아짐</div>;\r\n  if (!code) return <div>과제 정보 안받아짐</div>;\r\n  return (\r\n    <QpwritePageBlock>\r\n      <CourseContainerBlock>\r\n        <InformBox>\r\n          <CourseFormBlock>\r\n            <div>\r\n              <h1>질문 등록</h1>\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"http://yui.yahooapis.com/pure/0.6.0/pure-min.css\"\r\n              />\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"\r\n              />\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdn.rawgit.com/dwyl/html-form-send-email-via-google-script-without-server/master/style.css\"\r\n              />\r\n\r\n              <form id=\"gform\" class=\"pure-form pure-form-stacked\">\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"name\">질문 제목</label>\r\n                  <input\r\n                    type=\"text \"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    placeholder=\"입력하세요.\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    onChange={onChangeTitle}\r\n                    value={title}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"definition\">질문 내용 </label>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    placeholder=\"입력하세요.\"\r\n                    onChange={onChangeDesc}\r\n                    value={description}\r\n                  ></textarea>\r\n                </fieldset>\r\n\r\n                <Button class=\"bt\" cyan width=\"100%\" onClick={onClick}>\r\n                  등록\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </CourseFormBlock>\r\n        </InformBox>\r\n      </CourseContainerBlock>\r\n    </QpwritePageBlock>\r\n  );\r\n};\r\nexport default QpwritePage;\r\n","import React, { useState } from 'react';\nimport { Paper } from '@material-ui/core';\nimport { AppBar } from '@material-ui/core';\nimport { withStyles, fade } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n  roomLayout: {\n    display: 'inlineBlock',\n    backgroundColor: 'white',\n    color: 'white',\n    padding: 0,\n    margin: 0,\n    marginRight: 50,\n    border: '1px solid black',\n    width: 800,\n    height: 720,\n    overflow: 'scroll',\n    boxShadow: 'grey 2px 2px 3px,grey -2px -2px 3px',\n  },\n  appBar: {\n    padding: theme.spacing(1),\n    backgroundColor: '#3e68f1',\n  },\n  search: {\n    borderRadius: theme.shape.borderRadius,\n    color: 'white',\n    backgroundColor: fade(theme.palette.common.white, 0.8),\n    '&:hover': {\n      backgroundColor: 'white',\n    },\n    '&:focus': {\n      backgroundColor: 'white',\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: 500,\n  },\n  buttonGroup: {\n    width: 200,\n  },\n  button: {\n    background: '#7B68EE',\n    border: '2px white solid',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    fontWeight: 600,\n    height: 60,\n  },\n});\n\nconst RoomLayout = ({\n  makeRoom,\n  enterRoom,\n  GetRoomsInfo,\n  rooms,\n  isRoomLoaded,\n  classes,\n}) => {\n  const [search, setSearch] = useState('');\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  /* 방 이름 검색 */\n  const filterRoom = (roomList) => {\n    return roomList.filter((room) => room.roomName.indexOf(search) >= 0);\n  };\n  const roomsList = filterRoom(rooms);\n  return <Paper className={classes.roomLayout}></Paper>;\n};\n\nexport default withStyles(styles)(RoomLayout);\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n  userInfo: {\n    border: '1px solid  #3e68f1',\n    background: 'white',\n    margin: 0,\n    marginBottom: 10,\n    //padding: 10,\n    width: 400,\n    height: 165,\n    boxShadow: ' #3e68f1 2px 2px 3px, #3e68f1 -2px -2px 3px',\n  },\n};\n\nconst UserInfo = ({ nick, classes }) => {\n  return (\n    <Paper className={classes.userInfo}>\n      <div>접속 아이디 : {nick}</div>\n      <div>어서오세요.</div>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(UserInfo);\n","import React, { useState, useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = () => ({\n  chattingRoom: {\n    boxShadow: ' #3e68f1 2px 2px 3px, #3e68f1 -2px -2px 3px',\n    display: 'inline-block',\n    backgroundColor: 'white',\n    margin: 0,\n    padding: 10,\n    border: '1px solid  #3e68f1',\n    width: 400,\n    height: 500,\n  },\n  chattingMessage: {\n    overflow: 'auto',\n    listStyleType: 'none',\n    height: 450,\n    width: '100%',\n    margin: 0,\n    padding: 0,\n    marginBottom: 10,\n    border: '1px solid  #3e68f1',\n  },\n  message: {\n    width: '100%',\n    height: 30,\n    fontSize: '2rem',\n  },\n  systemMsg: {\n    border: '1px  #3e68f1 solid',\n    padding: 5,\n    margin: 10,\n    textAlign: 'center',\n    backgroundColor: ' #3e68f1',\n    color: 'white',\n    marginLeft: '10%',\n    marginRight: '10%',\n    boxShadow: ' #3e68f1 2px 2px 3px, #3e68f1 -2px -2px 3px',\n  },\n  myMsg: {\n    border: '1px  #3e68f1 solid',\n    padding: '5px',\n    margin: '10px',\n    textAlign: 'left',\n    borderRadius: 10,\n    marginLeft: '30%',\n    marginRight: 3,\n    boxShadow: 'grey 2px 2px 3px,grey -2px -2px 3px',\n  },\n  othersMsg: {\n    border: '1px  #3e68f1 solid',\n    padding: 5,\n    margin: 10,\n    textAlign: 'left',\n    borderRadius: 10,\n    marginLeft: 3,\n    marginRight: '30%',\n    boxShadow: ' #3e68f1 2px 2px 3px, #3e68f1 -2px -2px 3px',\n  },\n  Msg: {\n    fontSize: 20,\n  },\n});\n\nconst Chat = ({ sendMessage, chattingMessages, classes }) => {\n  // 메시지 element key\n  let num = 0;\n  const [message, setMessage] = useState('');\n  let messagesEnd = React.createRef();\n\n  const handleMessageInput = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.charCode === 13) {\n      handleSendMessage();\n    }\n  };\n\n  /* 메시지 보내기 */\n  const handleSendMessage = () => {\n    sendMessage(message);\n    setMessage('');\n  };\n  /* 채팅 메시지 밑으로 내리기 */\n  const scrollToBottom = () => {\n    messagesEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  });\n\n  /* 메치시 리스트 */\n  const chattingList = chattingMessages.map((chatting) => {\n    if (chatting.who === 'system') {\n      //시스템신호\n      return (\n        <li key={num++} className={classes.systemMsg}>\n          <Paper>{chatting.message}</Paper>\n        </li>\n      );\n    } else if (chatting.who === 'me') {\n      //내꺼\n      return (\n        <li key={num++} className={classes.myMsg}>\n          <Box>\n            {chatting.who} {chatting.time}\n            <br />\n            <Box className={classes.Msg}>{chatting.message}</Box>\n          </Box>\n        </li>\n      );\n    } else {\n      return (\n        //남꺼\n        <li key={num++} className={classes.othersMsg}>\n          <Box>\n            {chatting.who} {chatting.time}\n            <br />\n            <Box className={classes.Msg}>{chatting.message}</Box>\n          </Box>\n        </li>\n      );\n    }\n  });\n\n  return (\n    <Box className={classes.chattingRoom}>\n      <ul className={classes.chattingMessage}>\n        {chattingList}\n        <div\n          style={{ float: 'left', clear: 'both' }}\n          ref={(el) => {\n            messagesEnd = el;\n          }}\n        ></div>\n      </ul>\n      <div>\n        <input\n          className={classes.message}\n          name=\"message\"\n          autoComplete=\"off\"\n          placeholder=\"입력\"\n          value={message}\n          onChange={handleMessageInput}\n          onKeyPress={handleKeyPress}\n        />\n      </div>\n    </Box>\n  );\n};\n\nexport default withStyles(styles)(Chat);\n","import React from 'react';\nimport io from 'socket.io-client';\nimport RoomLayout from '../components/chat/RoomLayout';\nimport UserInfo from '../components/chat/UserInfo';\nimport Chat from '../components/chat/Chat';\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rooms: [],\n      isRoomLoaded: false,\n      enterRoom: false,\n      enterRoomNum: 0,\n      course_code: '',\n      room_code: '',\n      user_code: '',\n      chattingMessages: [\n        { who: 'system', message: '안녕하세요, 반가워요 ㅎㅎ' },\n      ],\n      socket: null,\n    };\n  }\n  //소켓 연결하기\n  handleConnectSocket = () => {\n    const { socket, user_code } = this.state;\n    socket.on('connect', () => {\n      console.log('연결됬어요;);');\n      socket.on('hi', (msg) => {\n        //서버에서 보내주는거\n        this.handleGetMessageFromServer(msg, true);\n      });\n      socket.on('chat', (msg) => {\n        //사람끼리 이야기하는거\n        this.handleGetMessageFromServer(msg, false);\n      });\n      socket.emit('joinRoom', user_code);\n    });\n    socket.on('error', (error) => {\n      this.handleGetMessageFromServer('서버와의 연결이 되지않습니다.', true);\n    });\n  };\n  //채팅 메시지 보내는거\n  handleSendMessageToServer = (message) => {\n    const { socket } = this.state;\n    const time = new Date().toLocaleTimeString();\n    socket.emit(\n      'chat',\n      JSON.stringify({ email: this.props.email, message, time }),\n    );\n  };\n  //채팅 메시지 받는거\n  handleGetMessageFromServer = (msg, signal) => {\n    const { chattingMessages } = this.state;\n    let messageObj = { who: '', message: '' };\n\n    if (signal) {\n      //서버신호 -> 방입장\n      messageObj.who = 'system';\n      messageObj.message = msg;\n      this.setState({\n        chattingMessages: chattingMessages.concat(messageObj),\n      });\n      return;\n    }\n    //사람신호 -> 채팅\n    let { email, message, time } = JSON.parse(msg);\n    if (email === this.props.email) {\n      messageObj.who = 'me';\n    } else {\n      messageObj.who = email;\n    }\n    messageObj.message = message;\n    messageObj.time = time;\n    this.setState({\n      chattingMessages: chattingMessages.concat(messageObj),\n    });\n  };\n\n  //컴포넌트 마운트 끝나면 서버로부터 정보 가지고오기\n  componentDidMount() {\n    const url = this.props.location.pathname.split('/');\n    const course_code = url[2];\n    const room_code = url[3];\n    const user_code = url[4];\n    const socket = io(`/${course_code}/${room_code}`, {\n      transports: ['polling'],\n      forceNew: true,\n    });\n    this.setState(\n      {\n        socket,\n        course_code,\n        room_code,\n        user_code,\n      },\n      () => this.handleConnectSocket(),\n    );\n  }\n\n  render() {\n    const { rooms, chattingMessages, isRoomLoaded, user_code } = this.state;\n    return (\n      <div id=\"main-wrap\" style={{ display: 'flex' }}>\n        <RoomLayout rooms={rooms} isRoomLoaded={isRoomLoaded} />\n\n        <div id=\"rightSide\">\n          <UserInfo nick={user_code} />\n          <Chat\n            sendMessage={this.handleSendMessageToServer}\n            chattingMessages={chattingMessages}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n// const MainPage = ({ match }) => {\n//   const course_code = match.params.course_code;\n//   const room_code = match.params.room_code;\n//   const user_code = match.params.user_code;\n//   const [rooms, setRooms] = useState([]);\n//   const [isRoomLoaded, setIsRoomLoaded] = useState(false);\n//   const [chattingMessages, setChattingMessages] = useState([\n//     { who: 'system', message: '채팅을 시작하세요.' },\n//   ]);\n//   const socket = io.connect(`/${course_code}/${room_code}`, {\n//     transports: ['polling'],\n//     forceNew: true,\n//   })\n//   useEffect(()=>{\n//     socket.on('hi', (msg) => {\n//       //서버에서 보내주는거\n//       console.log(msg);\n//       handleGetMessageFromServer(msg, true);\n//     });\n//     socket.on('chat', (msg) => {\n//       //사람끼리 이야기하는거\n//       console.log(msg);\n//       handleGetMessageFromServer(msg, false);\n//     });\n//     socket.emit('joinRoom', user_code);\n//   })\n\n//   // const [socket, setSocket] = useState(\n//   //   io(`/${course_code}/${room_code}`, {\n//   //     transports: ['polling'],\n//   //     forceNew: true,\n//   //   }),\n//   // );\n//   // useEffect(()=>{\n//   //   handleConnectSocket(socket);\n//   // },[])\n\n//   /* 소캣 변경 */\n//   // const handleChangeSocket = () => {\n//   //   socket.disconnect();\n//   //   setSocket(\n//   //     io(`/${course_code}/${room_code}`, {\n//   //       transports: ['polling'],\n//   //       forceNew: true,\n//   //     }),\n//   //   );\n//   // };\n\n//   // /* 소캣 연결 */\n//   // const handleConnectSocket = (socket) => {\n//   //   console.log('12345\"');\n//   //   socket.on('connect', () => {\n//   //     console.log('연결됨');\n//   //     socket.on('hi', (msg) => {\n//   //       //서버에서 보내주는거\n//   //       console.log(msg);\n//   //       handleGetMessageFromServer(msg, true);\n//   //     });\n//   //     socket.on('chat', (msg) => {\n//   //       //사람끼리 이야기하는거\n//   //       console.log(msg);\n//   //       handleGetMessageFromServer(msg, false);\n//   //     });\n//   //     socket.emit('joinRoom', user_code);\n//   //   });\n//   //   socket.on('error', (error) => {\n//   //     handleGetMessageFromServer(`서버 연결이 되지않습니다. \"${error}\" `, true);\n//   //   });\n//   // };\n\n//   /* 채팅 메시지 보내기 */\n//   const handleSendMessageToServer = (message) => {\n//     const time = new Date().toLocaleTimeString();\n//     console.log(message);\n//     socket.emit(\n//       'chat',\n//       JSON.stringify({ user_code: user_code, message, time }),\n//     );\n//   };\n\n//   /* 채팅 메시지 받기 */\n//   const handleGetMessageFromServer = (msg, signal) => {\n//     let messageObj = { who: '', message: '' };\n\n//     if (signal) {\n//       //서버신호 -> 방입장\n//       messageObj.who = 'system';\n//       messageObj.message = msg;\n//       setChattingMessages(chattingMessages.concat(messageObj));\n//       return;\n//     } else {\n//       //사람신호 -> 채팅\n//       let { user_code, message, time } = JSON.parse(msg);\n//       if (user_code === user_code) {\n//         messageObj.who = 'me';\n//       } else {\n//         messageObj.who = user_code;\n//       }\n//       messageObj.message = message;\n//       messageObj.time = time;\n//       setChattingMessages(chattingMessages.concat(messageObj));\n//     }\n//   };\n\n//   return (\n//     <div id=\"main-wrap\" style={{ display: 'flex' }}>\n//       <RoomLayout rooms={rooms} isRoomLoaded={isRoomLoaded} />\n\n//       <div id=\"rightSide\">\n//         <UserInfo nick={user_code} />\n//         <Chat\n//           sendMessage={handleSendMessageToServer}\n//           chattingMessages={chattingMessages}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\nexport default MainPage;\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteQuestion, getmyQuestion, getQuestion } from '../lib/api/allapi';\r\nimport Button from '../components/common/Button';\r\nconst SelectQuestionPageBlock = styled.div``;\r\n\r\nconst SelectQuestionPage = ({ match }) => {\r\n  const course_code = match.params.course_code;\r\n  const user_code = match.params.user_code;\r\n  const code = match.params.code;\r\n  const auth = match.params.auth;\r\n  console.log(course_code);\r\n  console.log(user_code);\r\n  console.log(auth);\r\n  console.log(code);\r\n  const [questionList, setQuestionList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (auth === 'AUTH000002') {\r\n          let response = await getQuestion(code);\r\n          response = response.data;\r\n          setQuestionList(response);\r\n        } else if (auth === 'AUTH000001') {\r\n          let response = await getmyQuestion(user_code);\r\n          response = response.data;\r\n          setQuestionList(response);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [code]);\r\n  //if (!loading) {\r\n  // return <SelectQuestionPageBlock>대기중..</SelectQuestionPageBlock>;\r\n  // }\r\n  if (!questionList && questionList === 0)\r\n    return (\r\n      <div>\r\n        <p style={{ marginLeft: '30rem' }}>질문정보 없음.</p>\r\n      </div>\r\n    );\r\n  const deleteButton = (assigncode, questioncode) => {\r\n    console.log(assigncode + '/' + questioncode);\r\n    let res = deleteQuestion(assigncode, questioncode);\r\n    //res = res.data;\r\n    //res=res.data.success\r\n    res = res.data;\r\n    console.log(res);\r\n    // if (!res) return null;\r\n    // else {\r\n    //  if (res === 'true') {\r\n    //   alert('질문삭제성공!');\r\n    //  } else {\r\n    //   alert('질문삭제실패!');\r\n    //  }\r\n    //}\r\n  };\r\n\r\n  return (\r\n    <SelectQuestionPageBlock>\r\n      <div>\r\n        <p>\r\n          <strong>\r\n            <h1 style={{ marginTop: '90px', marginLeft: '100px' }}>질문선택</h1>\r\n          </strong>\r\n        </p>\r\n        <div>\r\n          {questionList &&\r\n            questionList.map((k) => {\r\n              let url1 = '/answer/' + k.code + '/' + user_code + '/' + code;\r\n              let url2 =\r\n                '/reviseQuestion/' + k.code + '/' + user_code + '/' + code;\r\n              if (auth === 'AUTH000002') {\r\n                return (\r\n                  <ListGroup style={{ width: '500px', margin: '190px' }}>\r\n                    <Link to={url1}>\r\n                      <ListGroupItem active tag=\"a\" href=\"#\" action>\r\n                        <tr>\r\n                          제목:\r\n                          <td>\r\n                            {k.title}\r\n                            <br />\r\n                          </td>\r\n                          내용:<td>{k.description}</td>\r\n                        </tr>\r\n                      </ListGroupItem>\r\n                    </Link>\r\n                  </ListGroup>\r\n                );\r\n              } else if (auth === 'AUTH000001') {\r\n                return (\r\n                  <ListGroup style={{ width: '500px', margin: '190px' }}>\r\n                    <ListGroupItem active tag=\"a\" href=\"#\" action>\r\n                      <tr>\r\n                        제목:<td>{k.title}</td>\r\n                        내용:<td>{k.description}</td>\r\n                        <td>\r\n                          <Link to={url2}>\r\n                            <Button style={{ marginLeft: '10px' }}>수정</Button>\r\n                          </Link>\r\n                        </td>\r\n                        <td>\r\n                          <Button\r\n                            style={{ marginLeft: '10px' }}\r\n                            onClick={() =>\r\n                              deleteButton(k.assignment_code, k.code)\r\n                            }\r\n                          >\r\n                            삭제\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                );\r\n              }\r\n            })}\r\n        </div>\r\n      </div>\r\n    </SelectQuestionPageBlock>\r\n  );\r\n};\r\nexport default SelectQuestionPage;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../components/common/Button';\r\nimport { createAnswer } from '../lib/api/allapi';\r\nconst CourseContainerBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: white;\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst InformBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 600px;\r\n  height: 580px;\r\n  background: #d7e0fc;\r\n  border-radius: 2px;\r\n`;\r\nconst CourseFormBlock = styled.div`\r\n  font-size: 1rem;\r\n  border: none;\r\n  font-weight: bold;\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  bt {\r\n    position: absolute;\r\n\r\n    left: 100px;\r\n\r\n    top: 150px;\r\n  }\r\n`;\r\n\r\nconst AnswerPageBlock = styled.div``;\r\n\r\nconst AnswerPage = ({ match }) => {\r\n  const questioncode = match.params.questioncode;\r\n  const user_code = match.params.user_code;\r\n  const code = match.params.Assigncode;\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDesc] = useState('');\r\n\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n    console.log(title);\r\n  };\r\n  const onChangeDesc = (e) => {\r\n    setDesc(e.target.value);\r\n    console.log(description);\r\n  };\r\n  const onClick = async () => {\r\n    if (!title || !description) return alert('모든 필수정보를 입력하세요.');\r\n    let res = await createAnswer(\r\n      questioncode,\r\n      user_code,\r\n      title,\r\n      description,\r\n      code,\r\n    );\r\n    // res = res.data.result.success;\r\n    //if (res === 'true') {\r\n    //  alert('질문등록 완료!');\r\n    // } else {\r\n    //  alert('질문등록 실패!');\r\n    //}\r\n  };\r\n  if (!user_code) return <div>유저정보 안받아짐</div>;\r\n  if (!questioncode) return <div>질문정보 안받아짐</div>;\r\n  if (!code) return <div>과제 정보 안받아짐</div>;\r\n  return (\r\n    <AnswerPageBlock>\r\n      <CourseContainerBlock>\r\n        <InformBox>\r\n          <CourseFormBlock>\r\n            <div>\r\n              <h1>답변 등록</h1>\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"http://yui.yahooapis.com/pure/0.6.0/pure-min.css\"\r\n              />\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"\r\n              />\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdn.rawgit.com/dwyl/html-form-send-email-via-google-script-without-server/master/style.css\"\r\n              />\r\n\r\n              <form id=\"gform\" class=\"pure-form pure-form-stacked\">\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"name\">답변 제목</label>\r\n                  <input\r\n                    type=\"text \"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    placeholder=\"입력하세요.\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    onChange={onChangeTitle}\r\n                    value={title}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"definition\">답변 내용 </label>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    placeholder=\"입력하세요.\"\r\n                    onChange={onChangeDesc}\r\n                    value={description}\r\n                  ></textarea>\r\n                </fieldset>\r\n\r\n                <Button class=\"bt\" cyan width=\"100%\" onClick={onClick}>\r\n                  등록\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </CourseFormBlock>\r\n        </InformBox>\r\n      </CourseContainerBlock>\r\n    </AnswerPageBlock>\r\n  );\r\n};\r\nexport default AnswerPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from '@material-ui/core/Input';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Link } from 'react-router-dom';\r\nimport { getRoomInfo, CreateRoom, InRoom } from '../lib/api/allapi';\r\nimport Button from '../components/common/Button';\r\n\r\nconst TablePageBlock = styled.div`\r\n  margin: 0 auto;\r\n\r\n  border: none;\r\n  padding: 1rem;\r\n  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap');\r\n\r\n  body {\r\n    font-family: 'Quicksand', sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 0;\r\n    color: #4d4d4d;\r\n  }\r\n\r\n  #title {\r\n    margin-top: 1px;\r\n    margin-left: 200px;\r\n  }\r\n\r\n  #room {\r\n    border-collapse: collapse;\r\n    border: 3px solid #ddd;\r\n  }\r\n\r\n  #room td,\r\n  #room th {\r\n    border: 1px solid #ddd;\r\n    padding: 12px;\r\n  }\r\n\r\n  #room tr:hover {\r\n    background-color: #ddd;\r\n  }\r\n\r\n  #room th {\r\n    padding: 10px;\r\n    text-align: center;\r\n    background-color: #3e68f1;\r\n    color: white;\r\n  }\r\n\r\n  .opration {\r\n    text-align: center;\r\n  }\r\n\r\n  .button {\r\n    border: none;\r\n    outline: none;\r\n    font-size: 11px;\r\n    font-family: 'Quicksand', sans-serif;\r\n    color: #f44336;\r\n    padding: 3px 10px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    border: 1px solid #f44336;\r\n    background-color: transparent;\r\n  }\r\n\r\n  .button:active {\r\n    border: 1px solid blue;\r\n  }\r\n`;\r\n\r\nconst TablePage = ({ match }) => {\r\n  const course_code = match.params.course_code;\r\n  const user_code = match.params.user_code;\r\n  const auth = match.params.auth_code;\r\n  const [rooms, setRooms] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [hour, setHour] = useState('');\r\n  const [min, setMin] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let response = await getRoomInfo(course_code);\r\n        response = response.data;\r\n        setRooms(response);\r\n      } catch (e) {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [course_code]);\r\n\r\n  const setTitleText = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const setDescriptionText = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n  const setHourText = (e) => {\r\n    setHour(e.target.value);\r\n  };\r\n  const setMinText = (e) => {\r\n    setMin(e.target.value);\r\n  };\r\n\r\n  const save = async (e) => {\r\n    e.preventDefault();\r\n    const submitValue = {\r\n      title: title,\r\n      description: description,\r\n      hour: hour,\r\n      min: min,\r\n    };\r\n    console.log(title + '/' + description + '/' + hour + '/' + min);\r\n    let res = await CreateRoom(course_code, submitValue);\r\n    res = res.data;\r\n    // if(res==='true') return alert('룸 생성 성공!');\r\n  };\r\n\r\n  // const IntoRoom = (course_code, room_code, user_code) => {\r\n  //   InRoom(course_code).then((res) => {});\r\n  // };\r\n\r\n  const renderHeader = () => {\r\n    let headerElement = ['코드', '이름', '시작시간', '종료시간', '룸입장'];\r\n\r\n    return headerElement.map((key, index) => {\r\n      return <th key={index}>{key.toUpperCase()}</th>;\r\n    });\r\n  };\r\n  if (!loading) {\r\n    return <TablePageBlock>대기중..</TablePageBlock>;\r\n  }\r\n\r\n  const renderBody = () => {\r\n    if (!rooms && rooms.length === 0) {\r\n      return (\r\n        <div>\r\n          <p style={{ marginLeft: '30rem' }}>개설된 룸 없음</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        rooms &&\r\n        rooms.map((k) => {\r\n          const url =\r\n            '/roompage2/' + k.course_code + '/' + k.code + '/' + user_code;\r\n\r\n          return (\r\n            <tr key={k.code}>\r\n              <td>{k.code}</td>\r\n              <td>{k.name}</td>\r\n              <td>{k.open_time}</td>\r\n              <td>{k.close_time}</td>\r\n              <td>\r\n                <Link to={url}>\r\n                  <Button>room입장</Button>\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n  if (auth === 'AUTH000002') {\r\n    return (\r\n      <TablePageBlock>\r\n        <>\r\n          <br />\r\n          <br />\r\n          <h1 id=\"title\">Room</h1>\r\n          <div style={{ margin: '200px' }}>\r\n            <table id=\"room\">\r\n              <thead>\r\n                <tr>\r\n                  {' '}\r\n                  <tbody>{renderBody()}</tbody>\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n          </div>\r\n\r\n          <form\r\n            onSubmit={save}\r\n            style={{ marginTop: '1px', marginLeft: '200px' }}\r\n          >\r\n            <FormLabel htmlFor=\"title\">room 이름</FormLabel>\r\n            <Input\r\n              name=\"title\"\r\n              id=\"title\"\r\n              placeholder=\"\"\r\n              onChange={setTitleText}\r\n            />\r\n            <br />\r\n            <FormLabel htmlFor=\"description\">room 설명</FormLabel>\r\n            <Input\r\n              name=\"decription\"\r\n              id=\"description\"\r\n              placeholder=\"\"\r\n              onChange={setDescriptionText}\r\n            />\r\n            <br />\r\n            <FormLabel htmlFor=\"hour\">시</FormLabel>\r\n            <NativeSelect id=\"hour\" name=\"hour\" onChange={setHourText}>\r\n              <option value={hour}></option>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"6\">6</option>\r\n              <option value=\"7\">7</option>\r\n              <option value=\"8\">8</option>\r\n              <option value=\"9\">9</option>\r\n              <option value=\"10\">10</option>\r\n              <option value=\"11\">11</option>\r\n              <option value=\"12\">12</option>\r\n            </NativeSelect>\r\n            <br />\r\n            <FormLabel htmlFor=\"min\">분</FormLabel>\r\n            <NativeSelect id=\"min\" name=\"min\" onChange={setMinText}>\r\n              <option value={min}></option>\r\n              <option value=\"0\">0</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"10\">10</option>\r\n              <option value=\"15\">15</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"30\">30</option>\r\n              <option value=\"35\">35</option>\r\n              <option value=\"40\">40</option>\r\n              <option value=\"45\">45</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"55\">55</option>\r\n            </NativeSelect>\r\n            <br />\r\n            <br />\r\n            <Button\r\n              type=\"submit\"\r\n              style={{ backgroundColor: '#3E68F1', color: 'white' }}\r\n            >\r\n              개설하기\r\n            </Button>\r\n          </form>\r\n        </>\r\n      </TablePageBlock>\r\n    );\r\n  } else if (auth === 'AUTH000001') {\r\n    return (\r\n      <TablePageBlock>\r\n        <>\r\n          <br />\r\n          <br />\r\n          <h1 id=\"title\">Room</h1>\r\n          <div style={{ margin: '200px' }}>\r\n            <table id=\"room\">\r\n              <thead>\r\n                <tr>\r\n                  {' '}\r\n                  <tbody>\r\n                    {renderHeader()}\r\n                    {renderBody()}\r\n                  </tbody>\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n          </div>\r\n        </>\r\n      </TablePageBlock>\r\n    );\r\n  }\r\n};\r\nexport default TablePage;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../components/common/Button';\r\nimport { reviseQuestion } from '../lib/api/allapi';\r\nconst QpwritePageBlock = styled.div``;\r\nconst CourseContainerBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: white;\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst InformBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 600px;\r\n  height: 580px;\r\n  background: #d7e0fc;\r\n  border-radius: 2px;\r\n`;\r\nconst CourseFormBlock = styled.div`\r\n  font-size: 1rem;\r\n  border: none;\r\n  font-weight: bold;\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  bt {\r\n    position: absolute;\r\n\r\n    left: 100px;\r\n\r\n    top: 150px;\r\n  }\r\n`;\r\n\r\nconst ReviseQuestion = ({ match }) => {\r\n  const questioncode = match.params.questioncode;\r\n  const user_code = match.params.user_code;\r\n  const Assigncode = match.params.Assigncode;\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDesc] = useState('');\r\n\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onChangeDesc = (e) => {\r\n    setDesc(e.target.value);\r\n  };\r\n  const onClick = () => {\r\n    if (!title || !description) return alert('모든 필수정보를 입력하세요.');\r\n    let res = reviseQuestion(questioncode, Assigncode, title, description);\r\n    res = res.result.result.affectedRows;\r\n    //if (res === '1') {\r\n    //  alert('질문수정 완료!');\r\n    //} else {\r\n    //  alert('질문수정 실패!');\r\n    // }\r\n  };\r\n  if (!user_code) return <div>유저정보 안받아짐</div>;\r\n  if (!questioncode) return <div>질문정보 안받아짐</div>;\r\n  if (!Assigncode) return <div>과제 정보 안받아짐</div>;\r\n  return (\r\n    <QpwritePageBlock>\r\n      <CourseContainerBlock>\r\n        <InformBox>\r\n          <CourseFormBlock>\r\n            <div>\r\n              <h1>질문 수정</h1>\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"http://yui.yahooapis.com/pure/0.6.0/pure-min.css\"\r\n              />\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"\r\n              />\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdn.rawgit.com/dwyl/html-form-send-email-via-google-script-without-server/master/style.css\"\r\n              />\r\n\r\n              <form id=\"gform\" class=\"pure-form pure-form-stacked\">\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"name\">질문 제목</label>\r\n                  <input\r\n                    type=\"text \"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    placeholder=\"입력하세요.\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    onChange={onChangeTitle}\r\n                    value={title}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"definition\">질문 내용 </label>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    placeholder=\"입력하세요.\"\r\n                    onChange={onChangeDesc}\r\n                    value={description}\r\n                  ></textarea>\r\n                </fieldset>\r\n\r\n                <Button class=\"bt\" cyan width=\"100%\" onClick={onClick}>\r\n                  등록\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </CourseFormBlock>\r\n        </InformBox>\r\n      </CourseContainerBlock>\r\n    </QpwritePageBlock>\r\n  );\r\n};\r\nexport default ReviseQuestion;\r\n","import React from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\n\nimport { RouteWithLayout } from './common';\nimport { Minimal as MinimalLayout, Default as DefaultLayout } from './layouts';\n\nimport {\n    Home as HomePage,\n    Packages as PackagesPage,\n    Problems as ProblemsPage,\n    NotFoundCover as NotFoundCoverPage,\n    Solving as SolvingPage,\n    Scoring as ScoringPage,\n    Assignments as AssignmentsPage, MainRoom\n} from './pages';\nimport MainRoomPage from \"./pages/MainRoomPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport PostListPage from \"./pages/PostListPage\";\nimport QpListPage from \"./pages/QpListPage\";\nimport ReviseCoursePage from \"./pages/ReviseCoursePage\";\nimport AtttendancePage from \"./pages/AttendancePage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport DeleteCoursePage from \"./pages/DeleteCoursePage\";\nimport RegisterCoursePage from \"./pages/RegisterCoursePage\";\nimport OpenCoursePage from \"./pages/OpenCoursePage\";\nimport QpPage from \"./pages/QpPage\";\nimport QpreadPage from \"./pages/QpreadPage\";\nimport QpwritePage from \"./pages/QpwritePage\";\nimport MainPage from \"./pages/MainPage\";\nimport SelectQuestionPage from \"./pages/selectQuestionPage\";\nimport AnswerPage from \"./pages/AnswerPage\";\nimport TablePage from \"./pages/TablePage\";\nimport ReviseQuestion from \"./pages/ReviseQuestion\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/mainroom\" />\n        {/* ---------------------------------------------- */}\n        {/* Home */}\n        <RouteWithLayout\n            component={HomePage}\n            exact\n            layout={MinimalLayout}\n            path=\"/home\"\n        />\n        {/* Packages */}\n        <RouteWithLayout\n            component={PackagesPage}\n            exact\n            layout={DefaultLayout}\n            path=\"/packages\"\n        />\n        {/* Problems - 모든 문제 목록 */}\n        <RouteWithLayout\n            component={ProblemsPage}\n          exact\n          layout={DefaultLayout}\n          path=\"/problems\"\n        />\n        {/* Problems - 특정 패키지의 문제 목록 */}\n        <RouteWithLayout\n          component={ProblemsPage}\n          exact\n          layout={DefaultLayout}\n           path=\"/problems/:package_code\"\n         />\n        {/* Problems - 문제 풀기 */}\n        <RouteWithLayout\n            component={ProblemsPage}\n            exact\n            layout={DefaultLayout}\n            path=\"/problems/:package_code/:assignment_code\"\n        />\n         {/* 문제 답안 작성 */}\n         <RouteWithLayout\n          component={SolvingPage}\n          exact\n          layout={DefaultLayout}\n          path=\"/solving/:problem_code/:assignment_code\"\n         />\n         {/* 문제 답안 작성 - 미리보기 */}\n        <RouteWithLayout\n            component={SolvingPage}\n            exact\n            layout={DefaultLayout}\n            path=\"/solving/:problem_code\"\n         />\n        {/* 채점 */}\n        <RouteWithLayout\n            component={ScoringPage}\n            exact\n            layout={DefaultLayout}\n            path=\"/scoring\"\n        />\n        {/* 과제 목록 */}\n        <RouteWithLayout\n            component={AssignmentsPage}\n            exact\n            layout={DefaultLayout}\n            path=\"/assignments/:course_code\"\n        />\n        {/* 강의실 */}\n        <RouteWithLayout\n            component={MainRoom}\n            exact\n            layout={DefaultLayout}\n            path=\"/mainroom\"\n        />\n\n      {/* ---------------------------------------------- */}\n      {/* 홈 */}\n      <RouteWithLayout\n        component={PostListPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/@:username\"\n      />\n      {/* 로그인 */}\n      <RouteWithLayout\n        component={LoginPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/login\"\n      />\n      {/* 회원가입 */}\n      <RouteWithLayout\n        component={RegisterPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/register\"\n      />\n      {/* 출석수정 및 확인 */}\n      <RouteWithLayout\n        component={AtttendancePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/attendance/:course_code/:user_code/:auth\"\n      />\n      {/* 강의개설 */}\n      <RouteWithLayout\n        component={OpenCoursePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/opencourse/:user_code\"\n      />\n      {/* 강의신청 */}\n      <RouteWithLayout\n        component={RegisterCoursePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/registercourse/:user_code\"\n      />\n      {/* 강의폐강 */}\n      <RouteWithLayout\n        component={DeleteCoursePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/deletecourse/:course_code/:user_code\"\n      />\n      {/* 강의정보 수정 */}\n      <RouteWithLayout\n        component={ReviseCoursePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/revisecourse/:course_code/:user_code\"\n      />\n      {/* 강의실 */}\n      <RouteWithLayout\n        component={MainRoomPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/mainroom_old\"\n      />\n      {/* 질문목록 */}\n      <RouteWithLayout\n        component={QpListPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/Qplist/:course_code/:user_code/:code\"\n      />\n      {/* 질문할 문제 선택페이지 */}\n      <RouteWithLayout\n        component={QpPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/QuestionProblem/:course_code/:user_code/:auth\"\n      />\n      {/* 질문작성 */}\n      <RouteWithLayout\n        component={QpwritePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/Qpwrite/:course_code/:user_code/:code/:auth\"\n      />\n      {/* 질문 작성 페이지 */}\n      <RouteWithLayout\n        component={QpreadPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/Qpread/:course_code/:user_code/:code\"\n      />\n      {/* 질문 수정 페이지 */}\n      <RouteWithLayout\n        component={ReviseQuestion}\n        exact\n        layout={DefaultLayout}\n        path=\"/reviseQuestion/:questioncode/:user_code/:Assigncode\"\n      />\n      {/* 질문 선택 페이지 */}\n      <RouteWithLayout\n        component={SelectQuestionPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/select/:course_code/:user_code/:code/:auth\"\n      />\n      {/* 답변작성 페이지 */}\n      <RouteWithLayout\n        component={AnswerPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/answer/:questioncode/:user_code/:Assigncode\"\n      />\n      {/* room 개설 */}\n      <RouteWithLayout\n        component={TablePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/roompage1/:course_code/:user_code/:auth_code\"\n      />\n      {/* room입장후 화면 */}\n      <RouteWithLayout\n        component={MainPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/roompage2/:course_code/:room_code/:user_code\"\n      />\n\n      <RouteWithLayout\n        component={NotFoundCoverPage}\n        exact\n        layout={MinimalLayout}\n        path=\"/not-found-cover\"\n      />\n      <Redirect to=\"/not-found-cover\" status=\"404\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport AOS from 'aos';\n\nimport theme from './theme';\nimport Routes from './Routes';\n\nimport 'aos/dist/aos.css';\nimport './assets/scss/index.scss';\n\nconst browserHistory = createBrowserHistory();\n\nbrowserHistory.listen(location => {\n    // Use setTimeout to make sure this runs after React Router's own listener\n    setTimeout(() => {\n        // Keep default behavior of restoring scroll position when user:\n        // - clicked back button\n        // - clicked on a link that programmatically calls `history.goBack()`\n        // - manually changed the URL in the address bar (here we might want\n        // to scroll to top, but we can't differentiate it from the others)\n        if (location.action === 'POP') {\n            return;\n        }\n        // In all other cases, scroll to top\n        window.scrollTo(0, 0);\n    });\n});\n\nexport default class App extends Component {\n    render() {\n        AOS.init({\n            once: true,\n            delay: 50,\n            duration: 500,\n            easing: 'ease-in-out',\n        });\n        // <BrowserRouter history={browserHistory} basename='/static'>\n        return (\n          <ThemeProvider theme={theme}>\n              <BrowserRouter history={browserHistory} basename='/static'>\n                  <Routes />\n              </BrowserRouter>\n          </ThemeProvider>\n        );\n    }\n}\n","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport auth, { authSaga } from './auth';\nimport loading from './loading';\nimport user, { userSaga } from './user';\n\nconst rootReducer = combineReducers({\n  auth,\n  loading,\n  user,\n});\n\nexport function* rootSaga() {\n  yield all([authSaga(), userSaga()]);\n}\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport rootReducer, {rootSaga} from './modules';\nimport {applyMiddleware, createStore} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport {Provider} from \"react-redux\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(sagaMiddleware)),\n)\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}