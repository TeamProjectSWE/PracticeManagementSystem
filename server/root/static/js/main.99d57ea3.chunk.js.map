{"version":3,"sources":["theme/palette.js","theme/index.js","common/RouteWithLayout/RouteWithLayout.js","common/DBController/DBController.js","images/logo/logo.png","layouts/Default/components/Menu/Menu.js","layouts/Default/components/SimpleMenu/SimpleMenu.js","layouts/Default/data/index.js","layouts/Default/Default.js","layouts/Minimal/Minimal.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/Main.js","pages/Home/Home.js","components/DesignTable/DesignTable.js","components/SimpleModal/SimpleModal.js","components/SimpleSelect/SimpleSelect.js","components/Tag/Tag.js","components/SimpleTable/SimpleTable.js","components/SimpleDialog/SimpleDialog.js","components/SimpleStepper/SimpleStepper.js","pages/AddPackage/AddPackage.js","pages/Packages/Packages.js","pages/AddProblem/AddProblem.js","pages/Problems/Problems.js","pages/Solving/Solving.js","pages/NotFoundCover/NotFoundCover.js","pages/SelectTags/SelectTags.js","pages/SelectProblems/SelectProblems.js","pages/Scoring/Scoring.js","pages/Assignments/Assignments.js","pages/MainRoom/MainRoom.js","pages/SelectPackage/SelectPackage.js","lib/api/client.js","lib/api/allapi.js","components/course/CourseRoomForm.js","pages/MainRoomPage.js","components/auth/AuthTemplate.js","modules/loading.js","lib/createRequestSaga.js","lib/api/auth.js","modules/auth.js","lib/styles/palette.js","components/common/Button.js","components/auth/AuthForm.js","modules/user.js","containers/auth/LoginForm.js","pages/LoginPage.js","components/common/Responsive.js","components/common/Header.js","containers/common/HeaderContainer.js","pages/PostListPage.js","pages/QpListPage.js","pages/ReviseCoursePage.js","pages/AttendancePage.js","containers/auth/RegisterForm.js","pages/RegisterPage.js","pages/DeleteCoursePage.js","pages/RegisterCoursePage.js","pages/OpenCoursePage.js","pages/QpPage.js","components/comment/Comments.js","components/comment/ReadQuestion.js","pages/QpreadPage.js","pages/QpwritePage.js","components/chat/RoomLayout.js","components/chat/UserInfo.js","components/chat/Chat.js","pages/MainPage.js","pages/selectQuestionPage.js","pages/AnswerPage.js","pages/TablePage.js","pages/ReviseQuestion.js","Routes.js","App.js","modules/index.js","index.js"],"names":["white","black","alternate","secondary","main","success","contrastText","dark","colors","green","light","info","blue","warning","orange","error","red","text","primary","blueGrey","link","background","default","paper","icon","divider","grey","theme","responsiveFontSizes","createMuiTheme","palette","typography","fontFamily","zIndex","appBar","drawer","overrides","MuiButton","containedSecondary","color","RouteWithLayout","props","Layout","layout","Component","component","rest","render","matchProps","ip","getSession","a","axios","get","withCredentials","getData","url","callback","final","console","log","undefined","res","err","response","putData","params","put","then","catch","finally","deleteData","delete","postData","post","solveFile","problemCode","file","language","File","formData","FormData","append","Menu","list","pages","List","data","title","href","key","to","className","src","Logo","alt","length","map","obj","SimpleMenu","iconPath","mdiBookmarkMultipleOutline","mdiCodeBraces","mdiFolderGoogleDrive","path","size","Default","children","useState","visibleMenu","setVisibleMenu","useHistory","ref","right","onClick","mdiMenu","mdiBellRingOutline","mdiCog","window","location","mdiLogout","Minimal","makeStyles","root","boxShadow","borderBottom","flexGrow","navigationContainer","display","justifyContent","alignItems","toolbar","maxWidth","width","margin","padding","spacing","navLink","fontWeight","listItem","cursor","listItemActive","listItemText","flex","marginRight","whiteSpace","listItemButton","listItemIcon","minWidth","popover","border","marginTop","iconButton","expandOpen","transform","logoContainer","height","breakpoints","up","logoImage","menu","menuItem","menuGroupItem","paddingTop","menuGroupTitle","textTransform","Home","paddingLeft","paddingRight","highlight","type","backgroundColor","lighten","marginBottom","table","visuallyHidden","clip","overflow","position","top","getModalStyle","left","useStyles","shadows","SimpleModal","open","close","body","classes","React","modalStyle","Modal","onClose","aria-labelledby","aria-describedby","style","BootstrapInput","withStyles","input","borderRadius","fontSize","transition","transitions","create","join","borderColor","InputBase","SimpleSelect","items","start","changeEvent","FormControl","Select","labelId","id","onChange","value","item","label","MenuItem","Tag","code","Python","Ruby","Go","Java","JS","Kotlin","Swift","C","CPP","CS","mdiEmoticonConfused","getTagIcon","SimpleTable","heads","bodys","search","customEvent","infoEvent","deleteEvent","infoModal","printBody","printTags","tags","tag","printActions","mdiLightbulbOnOutline","mdiEyeOutline","mdiTrashCanOutline","searchFilter","head","data-id","SimpleDialog","Dialog","DialogTitle","DialogContent","DialogContentText","content","DialogActions","disagreeEvent","disagreeText","agreeEvent","autoFocus","agreeText","SimpleStepper","maxSteps","back","next","useTheme","activeStep","setActiveStep","MobileStepper","variant","steps","nextButton","prevActiveStep","disabled","direction","KeyboardArrowLeft","KeyboardArrowRight","backButton","AddPackage","state","packageName","packageDesc","packageProblems","step","selectProblemsModal","setPackageProblems","packageCode","setState","addPackageToDB","sendData","name","description","modifyPackageToDB","problems","problem","push","changeStep","now","isExistCode","openSelectProblemsModal","closeSelectProblemsModal","setProblems","onChangeName","e","target","onChangeDesc","printPackageForm","printNameForm","printDescForm","printSelectProblemForm","printCompleteBtn","placeholder","this","thema","withTheme","Packages","selectedCode","addPackageModal","infoPackageModal","deletePackageDialog","setBodys","openAddPackageModal","closeAddPackageModal","openInfoPackageModal","closeInfoPackageModal","openDeletePackageDialog","closeDeletePackageDialog","history","deleteAgree","deleteDisagree","startIcon","Add","AddProblem","problemType","problemName","problemDesc","problemRest","problemEntry","problemReturn","problemAnswer","problemParams","problemTestCases","problemTags","problemChoices","selectTagsModal","parseParams","parameters","JSON","parse","parameterNames","parameter_names","p","index","getTestCases","addProblemComplete","restriction","entry","return","param","stringify","answer","choices","newProblemCode","addNewTestCase","addNewTags","setTimeout","cases","modifyProblemComplete","getVariableTypes","isExistType","openSelectTagsModal","closeSelectTagsModal","setTags","pushParamsRow","copyParams","popParamsRow","pop","pushTestCaseRow","copyTestCase","output","visible","popTestCaseRow","pushChoiceRow","copyChoices","popChoiceRow","onChangeRest","onChangeEntry","onChangeAnswer","printTypeSelectForm","mdiLeadPencil","mdiRadioboxMarked","printProblemForm","printProgrammingForm","printShortForm","printMultipleForm","printRestForm","printEntryForm","printReturnForm","printParamForm","printTestCaseForm","printSelectTagForm","printAnswerForm","printChoiceForm","printReturnFormSub","event","mdiPlus","mdiMinus","printParamFormSub","tagName","printTestCaseFormSub","testCase","Checkbox","inputProps","checked","printChoiceFormSub","choice","parsed","Problems","selectedType","addProblemModal","infoProblemModal","deleteProblemDialog","isExistPackageCode","match","package_code","d","descriptionParse","isExistAssignmentCode","assignment_code","openAddProblemModal","closeAddProblemModal","openInfoProblemModal","closeInfoProblemModal","openDeleteProblemDialog","closeDeleteProblemDialog","deleteEventA","deleteEventB","deleteAgreeA","deleteAgreeB","contentPrefix","Solving","selectedLanguage","executeResult","testStart","split","srcFile","problem_code","result","sendResult","assignmentCode","getLanguageTypes","getDefaultCodeForm","onChangeCode","onChangeResult","printSolvingForm","printProgrammingSolvingForm","printShortSolvingForm","printMultipleSolvingForm","withRouter","goBack","SelectTags","selectList","selectTag","includes","selectComplete","SelectProblems","getProblemList","isSelected","isExist","selectProblem","problemList","Scoring","AddAssignment","package","modalFlag","createAssignment","courseCode","course","openModal","closeModal","printSelPacForm","setPackage","printCompleteForm","Assignments","modalFlagA","modalFlagB","dialogFlag","selectedAssignment","setBody","course_code","isStudent","openModalA","closeModalA","openModalB","closeModalB","openDialog","dialogFlagA","closeDialog","dialogFlagB","AddCourse","desc","createCourse","MainRoom","session","courseList","selectedCourseCode","printCourseCard","printIconButtons","userCode","user","authCode","auth","tmp","packList","SelectPackage","select","pack","client","getUserCourse","user_code","postCourse","courseName","reviseCourse","getRoomInfo","CreateRoom","submitValue","AllRoom","StudentAttend","AllAssign","getmyQuestion","createAnswer","question_code","CourseRoomFormBlock","styled","div","CourseRoomForm","CourseList","setCourseList","setID","setAuth","loading","setLoading","useEffect","fetchData","deleteButton","renderCardFoot","url8","url1","url2","url3","url4","renderbutton","marginLeft","CardGroup","Card","k","CardBody","CardTitle","CardSubtitle","CardText","MainRoomPageBlock","MainRoomPage","AuthTemplateBlock","WhiteBox","AuthTemplate","START_LOADING","FINISH_LOADING","startLoading","createAction","requestType","finishLoading","handleActions","action","payload","createRequestActionTypes","createRequestSaga","request","SUCCESS","FAILURE","call","meta","logout","authSaga","CHANGE_FIELD","INITIALIZE_FORM","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","initializeForm","register","username","password","login","registerSaga","loginSaga","takeLatest","initialState","passwordConfirm","authError","produce","draft","gray","cyan","buttonStyle","css","fullWidth","StyledButton","button","StyledLink","Link","Button","AuthFormBlock","StyledInput","Footer","ButtonWithMarginTop","textMap","google","ErrorMessage","AuthForm","onSubmit","autoComplete","logoutSaga","userSaga","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","check","checkSaga","checkFailureSaga","localStorage","removeItem","authAPI","checkError","setError","dispatch","useDispatch","useSelector","setItem","preventDefault","LoginPage","ResponsiveBlock","Responsive","HeaderBlock","Wrapper","Spacer","UserInfo","Header","onLogout","HeaderContainer","PostListPageBlock","PostListPage","class","data-wow-delay","QpListPage","boards","handleChange","loadingData","Wrap","rows","ListItem","ReviseCoursePageBlock","ReviseCourseFormBlock","CourseContainerBlock","InformBox","ReviseCoursePage","setDescription","onChangeDescription","rel","for","cols","AttendTemplateBlock","TableBox","AttendFormBlock","AtttendancePage","rooms","setRooms","strooms","setSRooms","setTitle","setId","attendance","setAttend","response1","setIdText","setTitleText","setAttendText","save","reviseAttend","toUpperCase","class_time","attend_time","attend","FormLabel","htmlFor","NativeSelect","Input","status","RegisterPage","DeleteCourseBlock","DeleteCoursePage","courseItem","setList","usercode","setUserCode","getCourse","URL","alert","RegisterCoursePageBlock","StudentRegisterCourseBlock","RegisterCoursePage","setName","courseitem","setCourseitem","registerCourse","OpenCoursePageBlock","CourseFormBlock","OpenCoursePage","setDesc","preventdefault","affectedRows","QpPageBlock","QpFormBlock","QpPage","setProblemList","ListGroup","ListGroupItem","active","url_2","CommentsBlock","Comments","comments","handleSubmit","prevenDefault","comments_group","comm","i","comment","ReadQuestion","board","getID","UpdatePost","DeletePost","QpreadPageBlock","QpreadPage","QpwritePageBlock","QpwritePage","createQuestion","roomLayout","shape","fade","common","buttonGroup","makeRoom","enterRoom","GetRoomsInfo","isRoomLoaded","filter","room","roomName","indexOf","Paper","userInfo","nick","chattingRoom","chattingMessage","listStyleType","message","systemMsg","textAlign","myMsg","othersMsg","Msg","sendMessage","chattingMessages","num","setMessage","messagesEnd","createRef","handleSendMessage","scrollIntoView","behavior","chattingList","chatting","who","Box","time","float","clear","el","onKeyPress","charCode","MainPage","handleConnectSocket","socket","on","msg","handleGetMessageFromServer","emit","handleSendMessageToServer","Date","toLocaleTimeString","email","signal","messageObj","concat","enterRoomNum","room_code","pathname","io","transports","forceNew","SelectQuestionPageBlock","SelectQuestionPage","questionList","setQuestionList","assigncode","questioncode","AnswerPageBlock","AnswerPage","Assigncode","TablePageBlock","TablePage","auth_code","hour","setHour","min","setMin","renderBody","open_time","close_time","ReviseQuestion","reviseQuestion","Routes","exact","from","HomePage","DefaultLayout","PackagesPage","ProblemsPage","SolvingPage","ScoringPage","AssignmentsPage","NotFoundCoverPage","MinimalLayout","browserHistory","createBrowserHistory","listen","scrollTo","App","AOS","init","once","delay","duration","easing","ThemeProvider","basename","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","StrictMode","document","getElementById"],"mappings":"uuBAEMA,EAAQ,UAGC,GACbC,MAHY,UAIZD,QACAE,UAAW,qBACXC,UAAW,CACTC,KAAM,WAERC,QAAS,CACPC,aAAcN,EACdO,KAAMC,IAAOC,MAAM,KACnBL,KAAMI,IAAOC,MAAM,KACnBC,MAAOF,IAAOC,MAAM,MAEtBE,KAAM,CACJL,aAAcN,EACdO,KAAMC,IAAOI,KAAK,KAClBR,KAAMI,IAAOI,KAAK,KAClBF,MAAOF,IAAOI,KAAK,MAErBC,QAAS,CACPP,aAAcN,EACdO,KAAMC,IAAOM,OAAO,KACpBV,KAAMI,IAAOM,OAAO,KACpBJ,MAAOF,IAAOM,OAAO,MAEvBC,MAAO,CACLT,aAAcN,EACdO,KAAMC,IAAOQ,IAAI,KACjBZ,KAAMI,IAAOQ,IAAI,KACjBN,MAAOF,IAAOQ,IAAI,MAEpBC,KAAM,CACJC,QAAS,UACTf,UAAWK,IAAOW,SAAS,KAC3BC,KAAMZ,IAAOI,KAAK,MAEpBS,WAAY,CACVC,QAAS,UACTC,MAAOvB,GAETwB,KAAMhB,IAAOW,SAAS,KACtBM,QAASjB,IAAOkB,KAAK,MCtBRC,EApBDC,YACZC,YAAe,CACbC,UACAC,WAAY,CACVC,WAAY,QAEdC,OAAQ,CACNC,OAAQ,KACRC,OAAQ,MAEVC,UAAW,CACTC,UAAW,CACTC,mBAAoB,CAClBC,MAAO,c,uBCQFC,EArBS,SAAAC,GAAU,IAChBC,EAA0CD,EAAlDE,OAA2BC,EAAuBH,EAAlCI,UAAyBC,EADlB,YAC2BL,EAD3B,wBAG/B,OACE,cAAC,IAAD,2BACMK,GADN,IAEEC,OAAQ,SAAAC,GAAU,OAChB,cAACN,EAAD,UACE,cAACE,EAAD,eAAeI,W,yCCTnBC,EAAK,2BA6BEC,EAAU,uCAAG,WAAMnC,GAAN,SAAAoC,EAAA,+EAETC,IAAMC,IAAIJ,EAAK,gBAAiB,CAAEK,iBAAiB,IAF1C,wEAKtBvC,EAAM,EAAD,IALiB,wDAAH,sDASVwC,EAAO,uCAAG,WAAOC,EAAKC,EAAU1C,EAAO2C,GAA7B,eAAAP,EAAA,6DACrBQ,QAAQC,IAAI,SAAUJ,EAAK,yCASXK,IAAbJ,GAA8C,oBAAbA,IAClCA,EAAW,SAACK,WACDD,IAAV9C,GAAwC,oBAAVA,IAC/BA,EAAQ,SAACgD,WACEF,IAAVH,GAAwC,oBAAVA,IAC/BA,EAAQ,cAfW,kBAkBIN,IAAMC,IAAIJ,EAAKO,EAAK,CAAEF,iBAAiB,IAlB3C,OAkBbU,EAlBa,OAmBnBP,EAASO,GAnBU,kDAsBnBjD,EAAM,EAAD,IAtBc,yBAyBnB2C,IAzBmB,6EAAH,4DA6BPO,EAAU,SAACT,EAAKU,EAAQT,EAAU1C,EAAO2C,GACpDC,QAAQC,IAAI,8CASEC,IAAXK,GAA0C,kBAAXA,IAChCA,EAAS,SACKL,IAAbJ,GAA8C,oBAAbA,IAClCA,EAAW,SAACK,WACDD,IAAV9C,GAAwC,oBAAVA,IAC/BA,EAAQ,SAACgD,WACEF,IAAVH,GAAwC,oBAAVA,IAC/BA,EAAQ,cAEVN,IAAMe,IAAIlB,EAAKO,EAAKU,EAAQ,CAAEZ,iBAAiB,IAC1Cc,MAAK,SAACN,GACLL,EAASK,MAEVO,OAAM,SAACN,GACNhD,EAAMgD,MAEPO,SAAQ,WACPZ,QAIKa,EAAa,SAACf,EAAKC,EAAU1C,EAAO2C,GAC/CC,QAAQC,IAAI,iDASIC,IAAbJ,GAA8C,oBAAbA,IAClCA,EAAW,SAACK,WACDD,IAAV9C,GAAwC,oBAAVA,IAC/BA,EAAQ,SAACgD,WACEF,IAAVH,GAAwC,oBAAVA,IAC/BA,EAAQ,cAEVN,IAAMoB,OAAOvB,EAAKO,EAAK,CAAEF,iBAAiB,IACrCc,MAAK,SAACN,GACLL,EAASK,MAEVO,OAAM,SAACN,GACNhD,EAAMgD,MAEPO,SAAQ,WACPZ,QAIKe,EAAW,SAACjB,EAAKU,EAAQT,EAAU1C,EAAO2C,GACrDC,QAAQC,IAAI,+CASEC,IAAXK,GAA0C,kBAAXA,IAChCA,EAAS,SACKL,IAAbJ,GAA8C,oBAAbA,IAClCA,EAAW,SAACK,WACDD,IAAV9C,GAAwC,oBAAVA,IAC/BA,EAAQ,SAACgD,WACEF,IAAVH,GAAwC,oBAAVA,IAC/BA,EAAQ,cAEVN,IAAMsB,KAAKzB,EAAKO,EAAKU,EAAQ,CAAEZ,iBAAiB,IAC7Cc,MAAK,SAACN,GACLL,EAASK,MAEVO,OAAM,SAACN,GACNhD,EAAMgD,MAEPO,SAAQ,WACPZ,QAIOiB,EAAY,SAACC,EAAaC,EAAMC,EAAUrB,EAAU1C,EAAO2C,GAChEmB,aAAgBE,MACpBhE,EAAM,wCAER,IAAIiE,EAAW,IAAIC,SACnBD,EAASE,OAAO,SAAUL,GAE1BJ,EAAS,gBAAD,OACUG,EADV,kBAC+BE,GACrCE,EACAvB,EACA1C,EACA2C,I,iCC7KW,G,OAAA,IAA0B,kCCoE1ByB,G,OA5DF,SAAA1C,GAAU,IA4BF2C,EA3BXC,EAAU5C,EAAV4C,MAGFC,EAAO,SAAA7C,GAAU,IACb8C,EAAS9C,EAAT8C,KACR,YAAkB1B,IAAf0B,EAAKC,YAAqC3B,IAAd0B,EAAKE,WAAmC5B,IAAb0B,EAAKG,IACtD,sBAAS,aAGhB,cAAC,IAAD,CAAMC,GAAIJ,EAAKE,KAAf,SACE,6BACE,+BAAQF,EAAKC,SADND,EAAKG,QAiCpB,OACE,sBAAKE,UAAW,YAAhB,UACE,qBAAKA,UAAW,0BAAhB,UACeP,EAAMG,MAvBrB,qBAAKI,UAAW,iBAAkBC,IAAMC,EAAQC,IAAK,QAyBrD,qBAAKH,UAAW,YAAhB,UArBeR,EAsBDC,EAAMD,UArBVvB,IAATuB,GAAsC,IAAhBA,EAAKY,OACrB,uBAGP,6BACGX,EAAMD,KAAKa,KAAI,SAACC,GACf,OACE,cAACZ,EAAD,CAAMC,KAAMW,iBCwCTC,G,OA3EI,SAAA1D,GAAU,IA2CR2C,EATCI,EAjCZH,EAAU5C,EAAV4C,MAGFC,EAAO,SAAA7C,GAAU,IAKjB2D,EAJIb,EAAS9C,EAAT8C,KACR,QAAiB1B,IAAd0B,EAAK/D,WAAoCqC,IAAd0B,EAAKE,WAAmC5B,IAAb0B,EAAKG,IAC5D,OAAO,sBAAS,aAGlB,OAAQH,EAAK/D,MACX,IAAK,6BACH4E,EAAWC,IAA4B,MACzC,IAAK,gBACHD,EAAWE,IAAe,MAC5B,IAAK,uBACHF,EAAWG,IAAsB,MACnC,QACE,OAAO,sBAAS,aAGpB,OACE,cAAC,IAAD,CAAMZ,GAAIJ,EAAKE,KAAf,SACE,6BACE,+BAAM,cAAC,IAAD,CAAMe,KAAMJ,EAAUK,KAAM,EAAGlE,MAAO,aADrCgD,EAAKG,QAoCpB,OACE,sBAAKE,UAAW,mBAAhB,UACE,qBAAKA,UAAW,MAAhB,UA3BgBJ,EA4BDH,EAAMG,WA3BV3B,IAAV2B,QAAsC3B,IAAf2B,EAAMhE,KACvB,yBAGP,+BAAQgE,EAAMhE,UAyBd,qBAAKoE,UAAW,YAAhB,UArBeR,EAsBDC,EAAMD,UArBVvB,IAATuB,GAAsC,IAAhBA,EAAKY,OACrB,uBAGP,6BACGX,EAAMD,KAAKa,KAAI,SAACC,GACf,OACE,cAACZ,EAAD,CAAMC,KAAMW,iBC5DXb,EAAQ,CACnBG,MAAO,CACLhE,KAAM,IAER4D,KAAM,CACJ,CACEM,IAAK,OACLF,MAAO,4BACPhE,KAAM,6BACNiE,KAAM,aAER,CACEC,IAAK,WACLF,MAAO,+CACPhE,KAAM,uBACNiE,KAAM,aAER,CACEC,IAAK,WACLF,MAAO,4BACPhE,KAAM,gBACNiE,KAAM,e,SCkDGiB,EA1DC,SAAAjE,GAAU,IAChBkE,EAAalE,EAAbkE,SADe,EAEiBC,oBAAS,GAF1B,mBAEfC,EAFe,KAEFC,EAFE,KAGPC,cAoBhB,OACE,sBAAKnB,UAAWiB,EAAc,iBAAmB,2BAAjD,UACE,qBAAKjB,UAAW,kBAAhB,SACE,cAAC,EAAD,CAAYP,MAAOA,MAErB,qBAAKO,UAAW,WAAhB,SACE,cAAC,EAAD,CAAMP,MAAOA,EAAO2B,IAAK,SAAAC,GAAK,OAAI,EAAKA,MAAQA,OAEjD,sBAAKrB,UAAW,6BAAhB,UACE,sBAAMA,UAAW,WAAjB,SACE,wBAAQsB,QA3BG,WACjBJ,GAAgBD,IA0BmBjB,UAAW,WAAxC,SAAoD,cAAC,IAAD,CAAMY,KAAOW,IAAUV,KAAM,EAAKlE,MAAO,cAE/F,sBAAMqD,UAAW,UAAjB,SACE,uCAEF,uBAAMA,UAAW,WAAjB,UACE,wBAAQA,UAAW,WAAnB,SAA+B,cAAC,IAAD,CAAMY,KAAOY,IAAqBX,KAAM,EAAGlE,MAAO,cACjF,wBAAQqD,UAAW,WAAnB,SAA+B,cAAC,IAAD,CAAMY,KAAOa,IAASZ,KAAM,EAAGlE,MAAO,cACrE,wBAAQ2E,QA3BD,WAEbI,OAAOC,SAAS9B,KAAO,gBAyBQG,UAAW,WAApC,SAAgD,cAAC,IAAD,CAAMY,KAAOgB,IAAYf,KAAM,EAAGlE,MAAO,oBAG7F,qBAAKqD,UAAW,gBAGhB,qBAAKA,UAAW,eAAhB,SACE,sBAAMA,UAAW,OAAjB,SAA0Be,U,oFC1CnBc,G,OCEGC,aAAW,SAAA/F,GAAK,MAAK,CACrCgG,KAAM,CACJC,UAAW,OACXvG,WAAYM,EAAMG,QAAQ9B,MAC1B6H,aAAa,aAAD,OAAerH,IAAOkB,KAAK,OAEzCoG,SAAU,CACRA,SAAU,GAEZC,oBAAqB,CACnBC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAEdC,QAAS,CACPC,SAAU,KACVC,MAAO,OACPC,OAAQ,SACRC,QAAS5G,EAAM6G,QAAQ,EAAG,IAE5BC,QAAS,CACPC,WAAY,IACZ,UAAW,CACTnG,MAAOZ,EAAMG,QAAQZ,QAAQX,OAGjCoI,SAAU,CACRC,OAAQ,UACR,oCAAqC,CACnCrG,MAAOZ,EAAMG,QAAQZ,QAAQX,OAGjCsI,eAAgB,CACd,gBAAiB,CACftG,MAAOZ,EAAMG,QAAQZ,QAAQX,OAGjCuI,aAAc,CACZC,KAAM,WACNC,YAAarH,EAAM6G,QAAQ,GAC3BS,WAAY,UAEdC,eAAgB,CACdD,WAAY,UAEdE,aAAc,CACZC,SAAU,QAEZC,QAAS,CACPd,QAAS5G,EAAM6G,QAAQ,GACvBc,OAAQ3H,EAAM6G,QAAQ,GACtBZ,UAAW,8CACXwB,SAAU,IACVG,UAAW5H,EAAM6G,QAAQ,IAE3BgB,WAAY,CACVjB,QAAS,EACT,UAAW,CACTlH,WAAY,gBAGhBoI,WAAY,CACVC,UAAW,iBACXnH,MAAOZ,EAAMG,QAAQZ,QAAQX,MAE/BoJ,cAAc,aACZtB,MAAO,IACPuB,OAAQ,IACPjI,EAAMkI,YAAYC,GAAG,MAAQ,CAC5BzB,MAAO,IACPuB,OAAQ,KAGZG,UAAW,CACT1B,MAAO,OACPuB,OAAQ,QAEVI,KAAM,CACJhC,QAAS,OACTC,eAAgB,iBAElBgC,SAAU,CACRjB,YAAarH,EAAM6G,QAAQ,GAC3B,eAAgB,CACdQ,YAAa,IAGjBkB,cAAe,CACbC,WAAY,GAEdC,eAAgB,CACdC,cAAe,iBCvGD3C,aAAW,SAAA/F,GAAK,MAAK,CACnCgG,KAAM,CACFiC,OAAQ,YFRA,SAAAnH,GAAU,IACdkE,EAAwBlE,EAAxBkE,SAAUf,EAAcnD,EAAdmD,UAElB,OACI,sBAAKA,UAAWA,EAAhB,0BAEI,+BAAOe,SGCJ2D,EARF,WACX,OACE,qBAAK1E,UAAW,YAAhB,wB,8JC2GqB8B,aAAW,SAAC/F,GAAD,MAAY,CAC9CgG,KAAM,CACJ4C,YAAa5I,EAAM6G,QAAQ,GAC3BgC,aAAc7I,EAAM6G,QAAQ,IAE9BiC,UACyB,UAAvB9I,EAAMG,QAAQ4I,KACV,CACAnI,MAAOZ,EAAMG,QAAQ3B,UAAUC,KAC/BuK,gBAAiBC,aAAQjJ,EAAMG,QAAQ3B,UAAUO,MAAO,MAExD,CACA6B,MAAOZ,EAAMG,QAAQb,KAAKC,QAC1ByJ,gBAAiBhJ,EAAMG,QAAQ3B,UAAUI,MAE/CiF,MAAO,CACLuD,KAAM,gBA8CQrB,aAAW,SAAC/F,GAAD,MAAY,CACvCgG,KAAM,CACJU,MAAO,QAET9G,MAAO,CACL8G,MAAO,OACPwC,aAAclJ,EAAM6G,QAAQ,IAE9BsC,MAAO,CACL1B,SAAU,KAEZ2B,eAAgB,CACdzB,OAAQ,EACR0B,KAAM,gBACNpB,OAAQ,EACRtB,QAAS,EACT2C,SAAU,SACV1C,QAAS,EACT2C,SAAU,WACVC,IAAK,GACL9C,MAAO,O,OAlFX,I,UCnGM+C,GAAgB,WAIpB,MAAO,CACLD,IAAI,GAAD,OAJO,GAIP,KACHE,KAAK,GAAD,OAJO,GAIP,KACJ3B,UAAU,cAAD,OANC,GAMD,eALE,GAKF,QAGP4B,GAAY5D,aAAW,SAAC/F,GAAD,MAAY,CACvCJ,MAAO,CACL2J,SAAU,WACV7C,MAAO,cACPsC,gBAAiBhJ,EAAMG,QAAQT,WAAWE,MAC1CqG,UAAWjG,EAAM4J,QAAQ,QA0CdC,GAtCK,SAAA/I,GAAS,IAEnB+C,EAA6B/C,EAA7B+C,MAAOiG,EAAsBhJ,EAAtBgJ,KAAMC,EAAgBjJ,EAAhBiJ,MAAOC,EAASlJ,EAATkJ,KAGtBC,EAAUN,KALW,EAMNO,IAAMjF,SAASwE,IAA7BU,EANoB,oBAY3B,OACE,cAACC,GAAA,EAAD,CACEN,KAAMA,EACNO,QAASN,EACTO,kBAAgB,qBAChBC,mBAAiB,2BAJnB,SAME,sBAAKC,MAAOL,EAAYlG,UAAWgG,EAAQrK,MAA3C,UACoB,kBAAViE,EAAqB,qBAAKI,UAAW,cAAhB,SACzBJ,IACK,KACT,qBAAKI,UAAW,aAAhB,SACI+F,U,iDCnCNS,GAAiBC,cAAW,SAAC1K,GAAD,MAAY,CAC5CgG,KAAM,CACJ,YAAa,CACX4B,UAAW5H,EAAM6G,QAAQ,KAG7B8D,MAAO,CACLC,aAAc,EACdrB,SAAU,WACVP,gBAAiBhJ,EAAMG,QAAQT,WAAWE,MAC1C+H,OAAQ,oBACRkD,SAAU,GACVjE,QAAS,YACTkE,WAAY9K,EAAM+K,YAAYC,OAAO,CAAC,eAAgB,eAEtD3K,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACA4K,KAAK,KACP,UAAW,CACTL,aAAc,EACdM,YAAa,UACbjF,UAAW,wCA9BMyE,CAiCnBS,MAEExB,GAAY5D,aAAW,SAAC/F,GAAD,MAAY,CACvC8E,KAAM,CACJ4B,MAAO,YAoDI0E,GA1CM,SAAAtK,GAE0BA,EAArC+C,MAFoB,IAEbwH,EAA8BvK,EAA9BuK,MAAOC,EAAuBxK,EAAvBwK,MAAOC,EAAgBzK,EAAhByK,YAGvBtB,EAAUN,KAehB,OACE,cAAC6B,GAAA,EAAD,CAAavH,UAAWgG,EAAQnF,KAAhC,SACE,cAAC2G,GAAA,EAAD,CACEC,QAAQ,+BACRC,GAAG,yBACHC,SAAUL,EACVM,MAAOP,EACPX,MAAO,cAACF,GAAD,IALT,SAXKY,EAAM/G,KAAI,SAACwH,GAChB,YAAkB5J,IAAf4J,EAAKD,OAA6C,kBAAfC,EAAKD,YAEpB3J,IAAf4J,EAAKC,OAA6C,kBAAfD,EAAKD,MADvC,KAGF,cAACG,GAAA,EAAD,CAAUH,MAAQC,EAAKD,MAAvB,SAAiCC,EAAKC,gBC3BpCE,I,cAjCH,SAAAnL,GAAU,IACZoL,EAAepL,EAAfoL,KAAMpH,EAAShE,EAATgE,KAmBd,OACE,sBAAMb,UAAW,MAAjB,SAjBiB,WACjB,OAAQiI,GACN,IAAK,SAAU,OAAO,cAAC,IAAD,CAAMjI,UAAU,OAAOY,KAAOsH,IAASrH,KAAMA,IACnE,IAAK,OAAQ,OAAO,cAAC,IAAD,CAAMb,UAAU,OAAOY,KAAOuH,IAAOtH,KAAMA,IAC/D,IAAK,KAAM,OAAO,cAAC,IAAD,CAAMb,UAAU,OAAOY,KAAOwH,IAAKvH,KAAMA,IAC3D,IAAK,OAAQ,OAAO,cAAC,IAAD,CAAMb,UAAU,OAAOY,KAAOyH,IAAOxH,KAAMA,IAC/D,IAAK,KAAM,OAAO,cAAC,IAAD,CAAMb,UAAU,OAAOY,KAAO0H,IAAKzH,KAAMA,IAC3D,IAAK,SAAU,OAAO,cAAC,IAAD,CAAMb,UAAU,OAAOY,KAAO2H,IAAS1H,KAAMA,IACnE,IAAK,QAAS,OAAO,cAAC,IAAD,CAAMb,UAAU,OAAOY,KAAO4H,IAAQ3H,KAAMA,IACjE,IAAK,IAAK,OAAO,cAAC,IAAD,CAAMb,UAAU,OAAOY,KAAO6H,IAAI5H,KAAMA,IACzD,IAAK,MAAO,OAAO,cAAC,IAAD,CAAMb,UAAU,OAAOY,KAAO8H,IAAM7H,KAAMA,IAC7D,IAAK,KAAM,OAAO,cAAC,IAAD,CAAMb,UAAU,OAAOY,KAAO+H,IAAK9H,KAAMA,IAC3D,QAAS,OAAO,cAAC,IAAD,CAAMb,UAAU,OAAOY,KAAOgI,IAAsB/H,KAAM,MAMzEgI,OC6DQC,I,OAxFK,SAAAjM,GAAS,IAEnBkM,EAAyElM,EAAzEkM,MAAOC,EAAkEnM,EAAlEmM,MAAOC,EAA2DpM,EAA3DoM,OAAQC,EAAmDrM,EAAnDqM,YAAaC,EAAsCtM,EAAtCsM,UAAWC,EAA2BvM,EAA3BuM,YAAaC,EAAcxM,EAAdwM,UA+B7DC,EAAY,SAACvD,EAAM2B,GACvB,MAAU,SAAPA,EACM6B,EAAUxD,EAAK2B,IAEhB,6BAAM3B,EAAK2B,MAEf6B,EAAY,SAACC,GACjB,OACE,kCACYvL,IAATuL,EAAqBA,EAAKnJ,KAAI,SAACoJ,GAC9B,OAAO,cAAC,GAAD,CAAKxB,KAAMwB,EAAK5I,KAAM,QAC1B,QAIL6I,EAAe,SAAC3D,GACpB,OACE,+BAC0B,oBAAhBmD,EAA6B,wBAAQ5H,QAAS,WAAQ4H,EAAYnD,IAAS/F,UAAW,WAAzD,SAAqE,cAAC,IAAD,CAAMA,UAAU,OAAOY,KAAO+I,IAAwB9I,KAAM,OAAkB,KAClK,oBAAdsI,EAA2B,wBAAQ7H,QAAS,WAAQ6H,EAAUpD,IAAS/F,UAAW,WAAvD,SAAmE,cAAC,IAAD,CAAMA,UAAU,OAAOY,KAAOgJ,IAAgB/I,KAAM,OAAkB,KACpJ,oBAAhBuI,EAA6B,wBAAQ9H,QAAS,WAAQ8H,EAAYrD,IAAS/F,UAAW,WAAzD,SAAqE,cAAC,IAAD,CAAMA,UAAU,OAAOY,KAAOiJ,IAAqBhJ,KAAM,OAAkB,SAO3L,OArDqB,WACnB,QAAc5C,IAAXgL,GAAmC,KAAXA,IAkD7Ba,GAGE,sBAAK9J,UAAW,eAAhB,UACE,kCACE,gCAlDF,+BACG+I,EAAM1I,KAAI,SAAC0J,GACV,OAAQ,oBAAIC,UAAUD,EAAKrC,GAAnB,SAA0BqC,EAAKjC,WAEzC,8CAiDA,gCA5CGkB,EAAM3I,KAAI,SAAC0F,GAChB,OACE,+BACGgD,EAAM1I,KAAI,SAAC0J,GACV,OAAOT,EAAUvD,EAAMgE,EAAKrC,OAE7BgC,EAAa3D,cA0ClB,8BACiB,cAAdsD,EAA4BA,EAAY,Y,2DC5BlCY,GAzCM,SAAApN,GAAS,IAEpBgJ,EAAwBhJ,EAAxBgJ,KAAMO,EAAkBvJ,EAAlBuJ,QAASzG,EAAS9C,EAAT8C,KAQvB,OACE,eAACuK,GAAA,EAAD,CACErE,KAAMA,EACNO,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAAC6D,GAAA,EAAD,CAAazC,GAAG,qBAAhB,SAAqD,cAAf/H,EAAKC,MAAwBD,EAAKC,MAAQ,OAChF,cAACwK,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmB3C,GAAG,2BAAtB,SACoB,cAAjB/H,EAAK2K,QAA0B3K,EAAK2K,QAAU,SAGnD,eAACC,GAAA,EAAD,WACE,cAAC,IAAD,CAAQjJ,QAAgC,cAAvB3B,EAAK6K,cAAgC7K,EAAK6K,cAAgBpE,IAAWzJ,MAAM,UAA5F,SACyB,cAAtBgD,EAAK8K,aAA+B9K,EAAK8K,aAAe,OAE3D,cAAC,IAAD,CAAQnJ,QAA6B,cAApB3B,EAAK+K,WAA6B/K,EAAK+K,WAAatE,IAAWzJ,MAAM,UAAUgO,WAAS,EAAzG,SACsB,cAAnBhL,EAAKiL,UAA4BjL,EAAKiL,UAAY,c,gDC3BvDlF,GAAY5D,YAAW,CAC3BC,KAAM,CACJU,MAAO,OACPsC,gBAAiB,QACjB7C,SAAU,KA4DC2I,GAxDO,SAAAhO,GAAS,IAErBiO,EAAyBjO,EAAzBiO,SAAUC,EAAelO,EAAfkO,KAAMC,EAASnO,EAATmO,KAGlBhF,EAAUN,KACV3J,EAAQkP,eANe,EAOOhF,IAAMjF,SAAS,GAPtB,mBAOtBkK,EAPsB,KAOVC,EAPU,KA2B7B,OACE,cAACC,GAAA,EAAD,CACEC,QAAQ,OACRC,MAAOR,EACPxF,SAAS,SACT4F,WAAYA,EACZlL,UAAWgG,EAAQjE,KACnBwJ,WACE,eAAC,IAAD,CAAQ1K,KAAK,QAAQS,QAhBR,WACE,oBAAT0J,GACRA,EAAKE,EAAa,GAEpBC,GAAc,SAACK,GAAD,OAAoBA,EAAiB,MAYLC,SAAUP,IAAeJ,EAAS,EAA5E,iBAEuB,QAApB/O,EAAM2P,UAAsB,cAACC,GAAA,EAAD,IAAwB,cAACC,GAAA,EAAD,OAGzDC,WACE,eAAC,IAAD,CAAQhL,KAAK,QAAQS,QA7BR,WACG,oBAATyJ,GACTA,EAAKG,EAAa,GAEpBC,GAAc,SAACK,GAAD,OAAoBA,EAAiB,MAyBLC,SAAyB,IAAfP,EAApD,UACuB,QAApBnP,EAAM2P,UAAsB,cAACE,GAAA,EAAD,IAAyB,cAACD,GAAA,EAAD,IADxD,aC1BFG,I,mNAEJC,MAAQ,CACNC,YAAa,GACbC,YAAa,GACbC,gBAAiB,GACjBC,KAAM,EACNC,qBAAqB,G,EAuBvBC,mB,sBAAqB,4BAAA9O,EAAA,6DACb+O,EAAc,EAAKzP,MAAMoL,KACpB,GAFQ,SAGbtK,EAAQ,gBAAD,OAAiB2O,EAAjB,aAAwC,SAACpO,GACpD,IAAMyB,EAAOzB,EAAIyB,KAAKlF,QACtB,EAAK8R,SAAS,CACZL,gBAAiBvM,OAElB,SAACxB,GACFJ,QAAQC,IAAI,uBATK,2C,EAarBwO,eAAiB,WAEf,IAAIC,EAAW,CACbC,KAAM,EAAKX,MAAMC,YACjBW,YAAa,EAAKZ,MAAME,aAG1BlO,QAAQC,IAAI,2BACZD,QAAQC,IAAIyO,GACZ1O,QAAQC,IAAI,2BAEZa,EAAS,eAAgB4N,GAAU,SAACvO,OAEjC,SAACC,OAIJ,EAAKtB,MAAMiJ,S,EAEb8G,kBAAoB,WAElB,IAAIH,EAAW,CACbC,KAAM,EAAKX,MAAMC,YACjBW,YAAa,EAAKZ,MAAME,aAG1BlO,QAAQC,IAAI,2BACZD,QAAQC,IAAIyO,GACZ1O,QAAQC,IAAI,2BAEZ,IAAMsO,EAAc,EAAKzP,MAAMoL,KAC/B5J,EAAQ,gBAAD,OAAiBiO,GAAeG,GAAU,SAACvO,GAChDH,QAAQC,IAAI,0BACX,SAACG,OAKJ,IAAI0O,EAAW,GACf,EAAKd,MAAMG,gBAAgB7L,KAAI,SAACyM,GAC9BD,EAASE,KAAKD,EAAQ7E,SAGxBwE,EAAW,CACTI,SAAUA,GAEZ9O,QAAQC,IAAI,2BACZD,QAAQC,IAAIyO,GACZ1O,QAAQC,IAAI,2BAEZa,EAAS,gBAAD,OAAiByN,EAAjB,YAAwCG,GAAU,SAACvO,OAUxD,SAACC,OAKJ,EAAKtB,MAAMiJ,S,EAGbkH,WAAa,SAACC,GACZ,EAAKV,SAAS,CAAEJ,KAAMc,K,EAGxBC,YAAc,WACZ,MAAkC,kBAApB,EAAKrQ,MAAMoL,M,EAG3BkF,wBAA0B,WACxB,EAAKZ,SAAS,CAAEH,qBAAqB,K,EAEvCgB,yBAA2B,WACzB,EAAKb,SAAS,CAAEH,qBAAqB,K,EAGvCiB,YAAc,SAACR,GACb,EAAKN,SAAS,CAAEL,gBAAiBW,K,EAGnCS,aAAe,SAACC,GACd,EAAKhB,SAAS,CAAEP,YAAauB,EAAEC,OAAO5F,S,EAExC6F,aAAe,SAACF,GACd,EAAKhB,SAAS,CAAEN,YAAasB,EAAEC,OAAO5F,S,EAGxC8F,iBAAoB,WAClB,OACE,sBAAK1N,UAAW,eAAhB,UACE,kCACuB,IAApB,EAAK+L,MAAMI,KAAa,EAAKwB,gBAAkB,KAC3B,IAApB,EAAK5B,MAAMI,KAAa,EAAKyB,gBAAkB,KAC3B,IAApB,EAAK7B,MAAMI,MAAc,EAAKe,cAAgB,EAAKW,yBAA2B,KAC9E,EAAK9B,MAAMI,QAAU,EAAKe,cAAgB,EAAI,GAAK,EAAKY,mBAAqB,QAEhF,qBAAK9N,UAAW,UAAhB,SACE,cAAC,GAAD,CAAe8K,SAAU,EAAKoC,cAAgB,EAAI,EAAGlC,KAAM,EAAKgC,WAAYjC,KAAM,EAAKiC,mB,EAM/FW,cAAgB,WACd,OACE,kCACA,6BACE,6BAAI,qEAEN,6BACE,6BACE,uBACE7I,KAAM,OACN9E,UAAW,qCACX+N,YAAa,OACbnG,MAAO,EAAKmE,MAAMC,YAClBrE,SAAU,EAAK2F,uB,EAOzBM,cAAgB,WACd,OACE,kCACA,6BACE,6BAAI,qEAEN,6BACE,6BACE,0BACE5N,UAAW,+CACX+N,YAAa,cACbnG,MAAO,EAAKmE,MAAME,YAClBtE,SAAU,EAAK8F,uB,EAOzBI,uBAAyB,WAAM,IAErB7H,EAAY,EAAKnJ,MAAjBmJ,QAER,OACE,kCACA,6BACE,6BACE,cAAC,IAAD,CACE1E,QAAS,EAAK6L,wBACdnH,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YAPR,SASE,iEAIN,6BACE,6BACG,EAAKoP,MAAMG,gBAAgB7L,KAAI,SAACyM,GAC/B,OAAO,sBAAM9M,UAAW,UAAjB,SAA8B8M,EAAQJ,cAInD,6BACE,6BACE,cAAC,GAAD,CACE7G,KAAM,EAAKkG,MAAMK,oBACjBtG,MAAO,EAAKsH,yBACZrH,KAAM,cAAC,GAAD,CAAgBD,MAAO,EAAKsH,yBAA0BC,YAAa,EAAKA,YAAapF,KAAM,EAAKpL,MAAMoL,iB,EAOtH6F,iBAAmB,WAAM,IAEf9H,EAAY,EAAKnJ,MAAjBmJ,QAER,OACE,gCACA,6BACE,6BACE,cAAC,IAAD,CACE1E,QAAS,EAAK4L,cAAgB,EAAKN,kBAAoB,EAAKJ,eAC5DxG,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YAPR,SASE,6BAAK,EAAKuQ,cAAgB,4BAAU,uC,6LA1OzCc,KAAKd,c,uBACAZ,EAAc0B,KAAKnR,MAAMoL,K,SACzBtK,EAAQ,gBAAD,OAAiB2O,IAAe,SAACpO,GAC5C,IAAMyB,EAAOzB,EAAIyB,KAAKlF,QACtB,EAAK8R,SAAS,CACZP,YAAarM,EAAK+M,KAClBT,YAAatM,EAAKgN,cAEpB,EAAKN,wBACJ,SAAClO,GACFJ,QAAQC,IAAI,uB,qIA0OhB,OACE,qBAAKgC,UAAW,+BAAhB,SACGgO,KAAKN,yB,GArQWzH,IAAMjJ,YAgRhByJ,iBA9RG,SAACwH,GAAD,MAAY,CAC5BlM,KAAM,CACJtG,WAAY,mDACZkL,aAAc,EACdjD,OAAQ,EACR/G,MAAO,QACPgG,QAAS,WACTX,UAAW,yCAEb8F,MAAO,CACLrD,cAAe,iBAoRkB,CAAEyJ,WAAW,GAAnCzH,CAA2CqF,ICrRpDqC,G,4MACJpC,MAAQ,CACNqC,aAAc,GACdC,iBAAiB,EACjBC,kBAAkB,EAClBC,qBAAqB,EACrBxF,MAAO,CACL,CAAErB,GAAI,OAAeI,MAAO,gBAC5B,CAAEJ,GAAI,cAAeI,MAAO,gBAC5B,CAAEJ,GAAI,QAAeI,MAAO,8BAE9BkB,MAAO,I,EAQTwF,S,sBAAW,sBAAAjR,EAAA,sEAEHI,EAAQ,gBAAgB,SAACO,GAC7B,EAAKqO,SAAS,CAAEvD,MAAO9K,EAAIyB,KAAKlF,aAC/B,SAAC0D,GACF,EAAKoO,SAAS,CAAEvD,MAAO,KACvBjL,QAAQC,IAAI,uBANL,2C,EAUXyQ,oBAAsB,WACpB,EAAKlC,SAAS,CAAE8B,iBAAiB,K,EAEnCK,qBAAuB,WACrB,EAAKnC,SAAS,CAAE8B,iBAAiB,IACjC,EAAKG,Y,EAGPG,qBAAuB,WACrB,EAAKpC,SAAS,CAAE+B,kBAAkB,K,EAEpCM,sBAAwB,WACtB,EAAKrC,SAAS,CAAE+B,kBAAkB,IAClC,EAAKE,Y,EAGPK,wBAA0B,WACxB,EAAKtC,SAAS,CAAEgC,qBAAqB,K,EAEvCO,yBAA2B,WACzB,EAAKvC,SAAS,CAAEgC,qBAAqB,K,EAGvCrF,YAAc,SAACnD,GACO,EAAKlJ,MAAjBkS,QACAhC,KAAK,aAAehH,EAAKkC,O,EAGnCmB,YAAc,SAACrD,GACb,EAAKwG,SAAS,CAAE6B,aAAcrI,EAAKkC,OACnC,EAAK4G,2B,EAGPG,YAAc,WAEZ,IAAM1C,EAAc,EAAKP,MAAMqC,aAC/BzP,EAAW,gBAAD,OAAiB2N,IAAe,SAACpO,GAEzC,EAAKsQ,WACL,EAAKM,8BACJ,SAAC3Q,Q,EAKN8Q,eAAiB,WACf,EAAKH,4B,EAGP3F,UAAY,SAACpD,GACX,EAAKwG,SAAS,CAAE6B,aAAcrI,EAAKkC,OACnC,EAAK0G,wB,kEAjELX,KAAKQ,a,+BAqEE,MAEsBR,KAAKnR,MAA1BmJ,EAFD,EAECA,QAFD,EAEU+I,QAEjB,OACE,sBAAK/O,UAAW,gBAAhB,UACE,sBAAKA,UAAW,UAAhB,UACE,qBAAKA,UAAW,eAGhB,qBAAKA,UAAW,UAAhB,SACE,cAAC,IAAD,CACEsB,QAAS0M,KAAKS,oBACdzI,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YACNuS,UAAW,cAACC,GAAA,EAAD,mBARb,kDAcJ,qBAAKnP,UAAW,wBAAhB,SACE,cAAC,GAAD,CACE+I,MAAOiF,KAAKjC,MAAMhD,MAClBC,MAAOgF,KAAKjC,MAAM/C,MAClBE,YAAa8E,KAAK9E,YAClBE,YAAa4E,KAAK5E,YAClBD,UAAW6E,KAAK7E,UAChBE,UACE,cAAC,GAAD,CACEzJ,MAAO,kCACPiG,KAAMmI,KAAKjC,MAAMuC,iBACjBxI,MAAOkI,KAAKY,sBACZ7I,KAAM,cAAC,GAAD,CAAYD,MAAOkI,KAAKY,sBAAuB3G,KAAM+F,KAAKjC,MAAMqC,qBAM9E,cAAC,GAAD,CACExO,MAAO,kCAAUiG,KAAMmI,KAAKjC,MAAMsC,gBAClCvI,MAAOkI,KAAKU,qBACZ3I,KAAM,cAAC,GAAD,CAAYD,MAAOkI,KAAKU,yBAEhC,cAAC,GAAD,CACE7I,KAAMmI,KAAKjC,MAAMwC,oBACjBnI,QAAS4H,KAAKc,yBACdnP,KAAM,CACJC,MAAO,kCACP0K,QAAS0D,KAAKjC,MAAMqC,aAAe,8EACnCxD,UAAW,MACXH,aAAc,KACdC,WAAYsD,KAAKgB,YACjBxE,cAAewD,KAAKiB,yB,GA7IThJ,IAAMjJ,WAqJdyJ,iBAnKG,SAACwH,GAAD,MAAY,CAC5BlM,KAAM,CACJtG,WAAY,mDACZkL,aAAc,EACdjD,OAAQ,EACR/G,MAAO,QACPgG,QAAS,WACTX,UAAW,yCAEb8F,MAAO,CACLrD,cAAe,iBAyJkB,CAAEyJ,WAAW,GAAnCzH,CAA2C0H,IChJpDiB,I,0NAEJrD,MAAQ,CACNsD,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,aAAc,GACdC,cAAe,GACfC,cAAe,GACfC,cAAe,GACfC,iBAAkB,GAClBC,YAAa,GACbC,eAAgB,GAChB5D,KAAM,EACN6D,iBAAiB,G,EAkCnBC,YAAc,SAACtQ,GACb,IAAIrB,EAAS,GACT4R,EAAaC,KAAKC,MAAMzQ,EAAKuQ,YAC7BG,EAAiBF,KAAKC,MAAMzQ,EAAK2Q,iBASrC,OAPAJ,EAAW7P,KAAI,SAACkQ,EAAGC,GACjBlS,EAAOyO,KAAK,CACVjI,KAAMoL,EAAWM,GACjB9D,KAAM2D,EAAeG,QAIlBlS,G,EAGTmS,a,uCAAe,WAAOzR,GAAP,eAAAzB,EAAA,6DACToC,EAAO,GADE,SAEPhC,EAAQ,gBAAD,OAAiBqB,EAAjB,UAAqC,SAACd,GACjDyB,EAAOzB,EAAIyB,KAAKlF,WACf,SAAC0D,OAJS,gCAONwB,GAPM,2C,wDAUf+Q,mBAAqB,WAEnB,IAWIpQ,EAXAmM,EAAW,CACb3H,KAAM,EAAKiH,MAAMsD,YACjB3C,KAAM,EAAKX,MAAMuD,YACjB3C,YAAa,GACbgE,iBAAa1S,EACb2S,WAAO3S,EACP4S,YAAQ5S,EACRiS,gBAAYjS,EACZqS,qBAAiBrS,GAInB,OAAO,EAAK8N,MAAMsD,aAChB,IAAK,cACH,IAAIa,EAAa,GACbG,EAAiB,GAErB/P,EAAM,CACJjF,KAAM,EAAK0Q,MAAMwD,aAGnB,EAAKxD,MAAM6D,cAAcvP,KAAI,SAACyQ,GAC5BZ,EAAWnD,KAAK+D,EAAMhM,MACtBuL,EAAetD,KAAK+D,EAAMpE,SAG5BD,EAASkE,YAAc,EAAK5E,MAAMyD,YAClC/C,EAASmE,MAAQ,EAAK7E,MAAM0D,aAC5BhD,EAASoE,OAASV,KAAKY,UAAU,EAAKhF,MAAM2D,eAC5CjD,EAASyD,WAAaC,KAAKY,UAAUb,GACrCzD,EAAS6D,gBAAkBH,KAAKY,UAAUV,GAC1C,MACF,IAAK,QACH/P,EAAM,CACJjF,KAAM,EAAK0Q,MAAMwD,YACjByB,OAAQ,EAAKjF,MAAM4D,eAErB,MACF,IAAK,WACHrP,EAAM,CACJjF,KAAM,EAAK0Q,MAAMwD,YACjB0B,QAAS,EAAKlF,MAAMgE,eACpBiB,OAAQ,EAAKjF,MAAM4D,eAIzBlD,EAASE,YAAcwD,KAAKY,UAAUzQ,GAEtCzB,EAAS,eAAgB4N,GAAU,SAACvO,GAClC,IAAIgT,EAAiBhT,EAAIyB,KAAKlF,QACA,gBAA3B,EAAKsR,MAAMsD,cAEZ,EAAK8B,eAAeD,GAEpB,EAAKnF,MAAM+D,YAAYzP,KAAI,SAACoJ,GAC1B,EAAK2H,WAAWF,EAAgBzH,OAGpC4H,YAAW,WACT,EAAKxU,MAAMiJ,UACV,QACF,SAAC3H,OAIJ,EAAKtB,MAAMiJ,S,EAEbqL,eAAiB,SAACD,GAEhB,IAAIzE,EAAW,CACb6E,MAAO,EAAKvF,MAAM8D,kBAIpBhR,EAAS,gBAAD,OAAiBqS,EAAjB,OAAsCzE,GAAU,SAACvO,OAEtD,SAACC,Q,EAINiT,WAAa,SAACF,EAAgBzH,GAE5BpL,EAAQ,gBAAD,OAAiB6S,EAAjB,gBAAuCzH,GAAO,IAAI,SAACvL,OAEvD,SAACC,Q,EAKNoT,sBAAwB,WAEtB,IAWIjR,EAXAmM,EAAW,CACb3H,KAAM,EAAKiH,MAAMsD,YACjB3C,KAAM,EAAKX,MAAMuD,YACjB3C,YAAa,GACbgE,iBAAa1S,EACb2S,WAAO3S,EACP4S,YAAQ5S,EACRiS,gBAAYjS,EACZqS,qBAAiBrS,GAInB,OAAO,EAAK8N,MAAMsD,aAChB,IAAK,cACH,IAAIa,EAAa,GACbG,EAAiB,GAErB/P,EAAM,CACJjF,KAAM,EAAK0Q,MAAMwD,aAGnB,EAAKxD,MAAM6D,cAAcvP,KAAI,SAACyQ,GAC5BZ,EAAWnD,KAAK+D,EAAMhM,MACtBuL,EAAetD,KAAK+D,EAAMpE,SAG5BD,EAASkE,YAAc,EAAK5E,MAAMyD,YAClC/C,EAASmE,MAAQ,EAAK7E,MAAM0D,aAC5BhD,EAASoE,OAASV,KAAKY,UAAU,EAAKhF,MAAM2D,eAC5CjD,EAASyD,WAAaC,KAAKY,UAAUb,GACrCzD,EAAS6D,gBAAkBH,KAAKY,UAAUV,GAC1C,MACF,IAAK,QACH/P,EAAM,CACJjF,KAAM,EAAK0Q,MAAMwD,YACjByB,OAAQ,EAAKjF,MAAM4D,eAErB,MACF,IAAK,WACHrP,EAAM,CACJjF,KAAM,EAAK0Q,MAAMwD,YACjB0B,QAAS,EAAKlF,MAAMgE,eACpBiB,OAAQ,EAAKjF,MAAM4D,eAIzBlD,EAASE,YAAcwD,KAAKY,UAAUzQ,GAGtC,IAAMtB,EAAc,EAAKnC,MAAMoL,KAC/B5J,EAAQ,gBAAD,OAAiBW,GAAeyN,GAAU,SAACvO,GAClB,gBAA3B,EAAK6N,MAAMsD,cAEZ,EAAK8B,eAAenS,GAEpBL,EAAW,gBAAD,OAAiBK,EAAjB,SAAoC,SAACd,GAC7C,EAAK6N,MAAM+D,YAAYzP,KAAI,SAACoJ,GAC1B,EAAK2H,WAAWpS,EAAayK,SAE9B,SAACtL,QAINkT,YAAW,WACT,EAAKxU,MAAMiJ,UACV,QACF,SAAC3H,Q,EAKNqT,iBAAmB,WAcjB,MAbc,CACZ,CAAE1J,MAAO,QAASF,MAAO,OACzB,CAAEE,MAAO,QAASF,MAAO,OACzB,CAAEE,MAAO,UAAWF,MAAO,OAC3B,CAAEE,MAAO,UAAWF,MAAO,OAC3B,CAAEE,MAAO,SAAUF,MAAO,OAE1B,CAAEE,MAAO,cAAeF,MAAO,SAC/B,CAAEE,MAAO,cAAeF,MAAO,SAC/B,CAAEE,MAAO,gBAAiBF,MAAO,SACjC,CAAEE,MAAO,gBAAiBF,MAAO,SACjC,CAAEE,MAAO,eAAgBF,MAAO,W,EAKpCoF,WAAa,SAACC,GACZ,EAAKV,SAAS,CAAEJ,KAAMc,K,EAGxBC,YAAc,WACZ,MAAkC,kBAApB,EAAKrQ,MAAMoL,M,EAE3BwJ,YAAc,WACZ,MAAkC,kBAApB,EAAK5U,MAAMiI,M,EAG3B4M,oBAAsB,WACpB,EAAKnF,SAAS,CAAEyD,iBAAiB,K,EAEnC2B,qBAAuB,WACrB,EAAKpF,SAAS,CAAEyD,iBAAiB,K,EAGnC4B,QAAU,SAACpI,GACT,EAAK+C,SAAS,CAAEuD,YAAatG,K,EAE/BqI,cAAgB,WACd,IAAIC,EAAa,EAAK/F,MAAM6D,cAC5BkC,EAAW/E,KAAK,CAAEjI,KAAM,EAAK0M,mBAAmB,GAAG5J,MAAO8E,KAAM,KAChE,EAAKH,SAAS,CAAEqD,cAAekC,K,EAEjCC,aAAe,WACb,IAAID,EAAa,EAAK/F,MAAM6D,cAC5BkC,EAAWE,MACX,EAAKzF,SAAS,CAAEqD,cAAekC,K,EAEjCG,gBAAkB,WAChB,IAAIC,EAAe,EAAKnG,MAAM8D,iBAC9BqC,EAAanF,KAAK,CAAErG,MAAO,GAAIyL,OAAQ,GAAIC,SAAS,IACpD,EAAK7F,SAAS,CAAEsD,iBAAkBqC,K,EAEpCG,eAAiB,WACf,IAAIH,EAAe,EAAKnG,MAAM8D,iBAC9BqC,EAAaF,MACb,EAAKzF,SAAS,CAAEsD,iBAAkBqC,K,EAEpCI,cAAgB,WACd,IAAIC,EAAc,EAAKxG,MAAMgE,eAC7BwC,EAAYxF,KAAK,IACjB,EAAKR,SAAS,CAAEwD,eAAgBwC,K,EAElCC,aAAe,WACb,IAAID,EAAc,EAAKxG,MAAMgE,eAC7BwC,EAAYP,MACZ,EAAKzF,SAAS,CAAEwD,eAAgBwC,K,EAGlCjF,aAAe,SAACC,GACd,EAAKhB,SAAS,CAAE+C,YAAa/B,EAAEC,OAAO5F,S,EAExC6F,aAAe,SAACF,GACd,EAAKhB,SAAS,CAAEgD,YAAahC,EAAEC,OAAO5F,S,EAExC6K,aAAe,SAAClF,GACd,EAAKhB,SAAS,CAAEiD,YAAajC,EAAEC,OAAO5F,S,EAExC8K,cAAgB,SAACnF,GACf,EAAKhB,SAAS,CAAEkD,aAAclC,EAAEC,OAAO5F,S,EAEzC+K,eAAiB,SAACpF,GAChB,EAAKhB,SAAS,CAAEoD,cAAepC,EAAEC,OAAO5F,S,EAG1CgL,oBAAsB,WAAM,IAElB5M,EAAY,EAAKnJ,MAAjBmJ,QAER,OACE,sBAAKhG,UAAW,cAAhB,UACE,cAAC,IAAD,CACEsB,QAAU,kBAAM,EAAKiL,SAAS,CAAE8C,YAAa,iBAC7CrJ,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBoH,UAAW,cAAC,IAAD,CAAMlP,UAAU,OAAOY,KAAOF,IAAgBG,KAAM,IAC/DwK,QAAQ,YACR1O,MAAM,YARR,SAUE,+EAEF,cAAC,IAAD,CACE2E,QAAU,kBAAM,EAAKiL,SAAS,CAAE8C,YAAa,WAC7CrJ,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBoH,UAAW,cAAC,IAAD,CAAMlP,UAAU,OAAOY,KAAOiS,IAAgBhS,KAAM,IAC/DwK,QAAQ,YACR1O,MAAM,YARR,SAUE,mEAEF,cAAC,IAAD,CACE2E,QAAU,kBAAM,EAAKiL,SAAS,CAAE8C,YAAa,cAC7CrJ,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBoH,UAAW,cAAC,IAAD,CAAMlP,UAAU,OAAOY,KAAOkS,IAAoBjS,KAAM,IACnEwK,QAAQ,YACR1O,MAAM,YARR,SAUE,uE,EAMRoW,iBAAoB,WAClB,OAAQ,EAAKhH,MAAMsD,aACjB,IAAK,cACH,OAAO,EAAK2D,uBACd,IAAK,QACH,OAAO,EAAKC,iBACd,IAAK,WACH,OAAO,EAAKC,oBACd,QAAS,OAAO,O,EAKpBF,qBAAuB,WACrB,OACE,sBAAKhT,UAAW,eAAhB,UACE,kCACuB,IAApB,EAAK+L,MAAMI,KAAa,EAAKwB,gBAAkB,KAC3B,IAApB,EAAK5B,MAAMI,KAAa,EAAKyB,gBAAkB,KAC3B,IAApB,EAAK7B,MAAMI,KAAa,EAAKgH,gBAAkB,KAC3B,IAApB,EAAKpH,MAAMI,KAAa,EAAKiH,iBAAmB,KAC5B,IAApB,EAAKrH,MAAMI,KAAa,EAAKkH,kBAAoB,KAC7B,IAApB,EAAKtH,MAAMI,KAAa,EAAKmH,iBAAmB,KAC5B,IAApB,EAAKvH,MAAMI,KAAa,EAAKoH,oBAAsB,KAC/B,IAApB,EAAKxH,MAAMI,KAAa,EAAKqH,qBAAuB,KAChC,IAApB,EAAKzH,MAAMI,KAAa,EAAK2B,mBAAqB,QAErD,qBAAK9N,UAAW,UAAhB,SACE,cAAC,GAAD,CAAe8K,SAAU,EAAGE,KAAM,EAAKgC,WAAYjC,KAAM,EAAKiC,mB,EAOtEiG,eAAiB,WAEK,EAAKpW,MAAjBmJ,QAER,OACE,sBAAKhG,UAAW,eAAhB,UACE,kCACuB,IAApB,EAAK+L,MAAMI,KAAa,EAAKwB,gBAAkB,KAC3B,IAApB,EAAK5B,MAAMI,KAAa,EAAKyB,gBAAkB,KAC3B,IAApB,EAAK7B,MAAMI,KAAa,EAAKsH,kBAAoB,KAC7B,IAApB,EAAK1H,MAAMI,KAAa,EAAK2B,mBAAqB,QAErD,qBAAK9N,UAAW,UAAhB,SACE,cAAC,GAAD,CAAe8K,SAAU,EAAGE,KAAM,EAAKgC,WAAYjC,KAAM,EAAKiC,mB,EAOtEkG,kBAAoB,WAClB,OACE,sBAAKlT,UAAW,eAAhB,UACE,kCACuB,IAApB,EAAK+L,MAAMI,KAAa,EAAKwB,gBAAkB,KAC3B,IAApB,EAAK5B,MAAMI,KAAa,EAAKyB,gBAAkB,KAC3B,IAApB,EAAK7B,MAAMI,KAAa,EAAKuH,kBAAoB,KAC7B,IAApB,EAAK3H,MAAMI,KAAa,EAAKsH,kBAAoB,KAC7B,IAApB,EAAK1H,MAAMI,KAAa,EAAK2B,mBAAqB,QAErD,qBAAK9N,UAAW,UAAhB,SACE,cAAC,GAAD,CAAe8K,SAAU,EAAGE,KAAM,EAAKgC,WAAYjC,KAAM,EAAKiC,mB,EAMtEW,cAAgB,WACd,OACE,kCACA,6BACE,6BAAI,+DAEN,6BACE,6BACE,uBACE7I,KAAM,OACN9E,UAAW,qCACX+N,YAAa,OACbnG,MAAO,EAAKmE,MAAMuD,YAClB3H,SAAU,EAAK2F,uB,EAOzBM,cAAgB,WACd,OACE,kCACA,6BACE,6BAAI,+DAEN,6BACE,6BACE,0BACE5N,UAAW,+CACX+N,YAAa,cACbnG,MAAO,EAAKmE,MAAMwD,YAClB5H,SAAU,EAAK8F,uB,EAOzB0F,cAAgB,WACd,OACE,kCACA,6BACE,6BAAI,8DAEN,6BACE,6BACE,0BACEnT,UAAW,+CACX+N,YAAa,cACbnG,MAAO,EAAKmE,MAAMyD,YAClB7H,SAAU,EAAK8K,uB,EAOzBW,eAAiB,WACf,OACE,kCACA,6BACE,6BAAI,2EAEN,6BACE,6BACE,uBACEtO,KAAM,OACN9E,UAAW,qCACX+N,YAAa,sBACbnG,MAAO,EAAKmE,MAAM0D,aAClB9H,SAAU,EAAK+K,wB,EAOzBW,gBAAkB,WAChB,OACI,kCACA,6BACE,6BAAI,2EAEN,6BACE,6BACI,EAAKM,6B,EAMjBA,mBAAqB,WACnB,IAAMvM,EAAQ,EAAKoK,mBACnB,OACI,uBAAOxR,UAAW,mBAAlB,SACE,gCACA,+BACE,6BAAI,wCACJ,6BACE,cAAC,GAAD,CACIqH,MAAO,EAAK0E,MAAM2D,cAClB9P,MAAO,OACPwH,MAAOA,EACPE,YAAa,SAACsM,GACZ,EAAKrH,SAAS,CAAEmD,cAAekE,EAAMpG,OAAO5F,qB,EAS9D0L,eAAiB,WACf,OACE,kCACA,6BACE,+BACE,mFACA,wBAAQtT,UAAW,WAAYsB,QAAS,EAAKuQ,cAA7C,SAA4D,cAAC,IAAD,CAAMjR,KAAOiT,IAAUhT,KAAM,OACzF,wBAAQb,UAAW,WAAYsB,QAAS,EAAKyQ,aAA7C,SAA2D,cAAC,IAAD,CAAMnR,KAAOkT,IAAWjT,KAAM,YAG7F,6BACE,6BACI,EAAKkT,4B,EAMfA,kBAAoB,WAClB,IAAM3M,EAAQ,EAAKoK,mBACnB,OACE,uBAAOxR,UAAW,mBAAlB,SACE,gCACC,EAAK+L,MAAM6D,cAAcvP,KAAI,SAACyQ,EAAON,GACpC,OACE,+BACE,6BAAI,wCACJ,6BACE,cAAC,GAAD,CACEnJ,MAAO,EAAK0E,MAAM6D,cAAcY,GAAO1L,KACvClF,MAAO,OACPwH,MAAOA,EACPE,YAAa,SAACsM,GACZ,IAAI9B,EAAa,EAAK/F,MAAM6D,cAC5BkB,EAAMhM,KAAO8O,EAAMpG,OAAO5F,MAC1BkK,EAAWtB,GAASM,EAEpB,EAAKvE,SAAS,CAAEqD,cAAekC,SAIrC,6BAAI,wCACJ,6BACE,uBACEhN,KAAM,OACN9E,UAAW,qCACX+N,YAAa,OACbnG,MAAO,EAAKmE,MAAM6D,cAAcY,GAAO9D,KACvC/E,SAAU,SAACiM,GACT,IAAI9B,EAAa,EAAK/F,MAAM6D,cAC5BkB,EAAMpE,KAAOkH,EAAMpG,OAAO5F,MAC1BkK,EAAWtB,GAASM,EAEpB,EAAKvE,SAAS,CAAEqD,cAAekC,oB,EAWjD0B,mBAAqB,WAAM,IAEjBxN,EAAY,EAAKnJ,MAAjBmJ,QAER,OACE,kCACA,6BACE,6BACE,cAAC,IAAD,CACE1E,QAAS,EAAKoQ,oBACd1L,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YAPR,SASE,iEAIN,6BACE,6BACG,EAAKoP,MAAM+D,YAAYzP,KAAI,SAAC2T,GAC3B,OAAO,cAAC,GAAD,CAAK/L,KAAM+L,EAASnT,KAAM,WAIvC,6BACE,6BACE,cAAC,GAAD,CACEgF,KAAM,EAAKkG,MAAMiE,gBACjBlK,MAAO,EAAK6L,qBACZ5L,KAAM,cAAC,GAAD,CAAYD,MAAO,EAAK6L,qBAAsBC,QAAS,EAAKA,oB,EAO5E2B,kBAAoB,WAClB,OACE,kCACA,6BACE,+BACE,uEACA,wBAAQvT,UAAW,WAAYsB,QAAS,EAAK2Q,gBAA7C,SAA8D,cAAC,IAAD,CAAMrR,KAAOiT,IAAUhT,KAAM,OAC3F,wBAAQb,UAAW,WAAYsB,QAAS,EAAK+Q,eAA7C,SAA6D,cAAC,IAAD,CAAMzR,KAAOkT,IAAWjT,KAAM,YAG/F,6BACE,6BACI,EAAKoT,+B,EAMfA,qBAAuB,WAErB,OADAlW,QAAQC,IAAI,EAAK+N,MAAM8D,kBAErB,uBAAO7P,UAAW,sBAAlB,SACE,gCACC,EAAK+L,MAAM8D,iBAAiBxP,KAAI,SAAC6T,EAAU1D,GAC1C,OACE,+BACE,6BAAI,yCACJ,6BACE,uBACE1L,KAAM,OACN9E,UAAW,qCACX+N,YAAa,QACbnG,MAAO,EAAKmE,MAAM8D,iBAAiBW,GAAO9J,MAC1CiB,SAAU,SAACiM,GACT,IAAI1B,EAAe,EAAKnG,MAAM8D,iBAC9BqE,EAASxN,MAAQkN,EAAMpG,OAAO5F,MAC9BsK,EAAa1B,GAAS0D,EAEtB,EAAK3H,SAAS,CAAEsD,iBAAkBqC,SAIxC,6BAAI,0CACJ,6BACE,uBACEpN,KAAM,OACN9E,UAAW,qCACX+N,YAAa,SACbnG,MAAO,EAAKmE,MAAM8D,iBAAiBW,GAAO2B,OAC1CxK,SAAU,SAACiM,GACT,IAAI1B,EAAe,EAAKnG,MAAM8D,iBAC9BqE,EAAS/B,OAASyB,EAAMpG,OAAO5F,MAC/BsK,EAAa1B,GAAS0D,EAEtB,EAAK3H,SAAS,CAAEsD,iBAAkBqC,SAIxC,6BAAI,2CACJ,6BACE,cAACiC,GAAA,EAAD,CACEC,WAAY,CAAE,aAAc,yBAC5BC,QAAS,EAAKtI,MAAM8D,iBAAiBW,GAAO4B,QAC5CzK,SAAU,SAACiM,GACT,IAAI1B,EAAe,EAAKnG,MAAM8D,iBAC9BqE,EAAS9B,QAAUwB,EAAMpG,OAAO6G,QAAU,EAAI,EAC9CnC,EAAa1B,GAAS0D,EAEtB,EAAK3H,SAAS,CAAEsD,iBAAkBqC,oB,EAWpDuB,gBAAkB,WAChB,OACE,kCACA,6BACE,6BAAI,kDAEN,6BACE,6BACE,uBACE3O,KAAM,OACN9E,UAAW,qCACX+N,YAAa,SACbnG,MAAO,EAAKmE,MAAM4D,cAClBhI,SAAU,EAAKgL,yB,EAOzBe,gBAAkB,WAChB,OACE,kCACA,6BACE,+BACE,8CACA,wBAAQ1T,UAAW,WAAYsB,QAAS,EAAKgR,cAA7C,SAA4D,cAAC,IAAD,CAAM1R,KAAOiT,IAAUhT,KAAM,OACzF,wBAAQb,UAAW,WAAYsB,QAAS,EAAKkR,aAA7C,SAA2D,cAAC,IAAD,CAAM5R,KAAOkT,IAAWjT,KAAM,YAG7F,6BACE,6BACI,EAAKyT,6B,EAMfA,mBAAqB,WACnB,OACE,uBAAOtU,UAAW,oBAAlB,SACE,gCACC,EAAK+L,MAAMgE,eAAe1P,KAAI,SAACkU,EAAQ/D,GACtC,OACE,+BACE,6BAAI,+CAAQA,EAAM,OAClB,6BACE,uBACE1L,KAAM,OACN9E,UAAW,qCACX+N,YAAa,SACbnG,MAAO,EAAKmE,MAAMgE,eAAeS,GACjC7I,SAAU,SAACiM,GACT,IAAIrB,EAAc,EAAKxG,MAAMgE,eAC7BwC,EAAY/B,GAASoD,EAAMpG,OAAO5F,MAElC,EAAK2E,SAAS,CAAEwD,eAAgBwC,oB,EAWlDzE,iBAAmB,WAAM,IAEf9H,EAAY,EAAKnJ,MAAjBmJ,QAER,OACE,gCACA,6BACE,6BACE,cAAC,IAAD,CACE1E,QAAS,EAAK4L,cAAgB,EAAKqE,sBAAwB,EAAKb,mBAChE1K,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YAPR,SASE,6BAAK,EAAKuQ,cAAgB,4BAAU,uC,6LA/xBzCc,KAAKd,c,uBACFlO,EAAcgP,KAAKnR,MAAMoL,K,SAEvBtK,EAAQ,gBAAD,OAAiBqB,GAAjB,uCAAgC,WAAOd,GAAP,iBAAAX,EAAA,6DACrCoC,EAAOzB,EAAIyB,KAAKlF,QAClB+Z,EAASrE,KAAKC,MAAMzQ,EAAKgN,aAFc,KAI3C,EAJ2C,KAK5BhN,EAAKmF,KALuB,KAM5BnF,EAAK+M,KANuB,KAO5B8H,EAAOnZ,KAPqB,KAQ5BsE,EAAKgR,YARuB,KAS3BhR,EAAKiR,MATsB,KAU1BT,KAAKC,MAAMzQ,EAAKkR,QAVU,KAWR,cAAlB2D,EAAOxD,OAAyBwD,EAAOxD,OAAS,GAXtB,KAY1B,EAAKf,YAAYtQ,GAZS,UAajB,EAAK8Q,aAAazR,GAbD,0BAc5BW,EAAK6J,KAduB,MAeN,cAAnBgL,EAAOvD,QAA0BuD,EAAOvD,QAAU,GAfzB,OAKzC5B,YALyC,KAMzCC,YANyC,KAOzCC,YAPyC,KAQzCC,YARyC,KASzCC,aATyC,KAUzCC,cAVyC,KAWzCC,cAXyC,KAYzCC,cAZyC,KAazCC,iBAbyC,KAczCC,YAdyC,MAezCC,eAfyC,YAItCxD,SAJsC,6DAAhC,uDAiBV,SAACpO,O,qIAoxBN,OACE,qBAAK6B,UAAW,+BAAhB,SAC+B,KAA3BgO,KAAKjC,MAAMsD,YAAqBrB,KAAK4E,sBAAwB5E,KAAK+E,yB,GAj0BnD9M,IAAMjJ,YA60BhByJ,iBA31BG,SAACwH,GAAD,MAAY,CAC5BlM,KAAM,CACJtG,WAAY,mDACZkL,aAAc,EACdjD,OAAQ,EACR/G,MAAO,QACPgG,QAAS,WACTX,UAAW,yCAEb8F,MAAO,CACLrD,cAAe,iBAi1BkB,CAAEyJ,WAAW,GAAnCzH,CAA2C2I,ICn1BpDqF,G,4MACJ1I,MAAQ,CACNqC,aAAc,GACdsG,aAAc,GACdC,iBAAiB,EACjBC,kBAAkB,EAClBC,qBAAqB,EACrB9L,MAAO,CACL,CAAErB,GAAI,OAAeI,MAAO,gBAC5B,CAAEJ,GAAI,cAAeI,MAAO,gBAC5B,CAAEJ,GAAI,OAAeI,MAAO,6BAC5B,CAAEJ,GAAI,OAAeI,MAAO,iBAE9BkB,MAAO,I,EAOTwF,S,sBAAW,8BAAAjR,EAAA,0DAEN,EAAKuX,qBAFC,uBAGCC,EAAU,EAAKlY,MAAfkY,MACFzI,EAAcyI,EAAMzW,OAAO0W,aAJ1B,SAMDrX,EAAQ,gBAAD,OAAiB2O,EAAjB,aAAwC,SAACpO,GACpD,IAAIyB,EAAOzB,EAAIyB,KAAKlF,QACpBkF,EAAKU,KAAI,SAAC4U,EAAGzE,GACX7Q,EAAK6Q,GAAS,EAAK0E,iBAAiBD,MAEtC,EAAK1I,SAAS,CAAEvD,MAAOrJ,OACtB,SAACxB,GACF,EAAKoO,SAAS,CAAEvD,MAAO,QAblB,6CAiBDrL,EAAQ,gBAAgB,SAACO,GAC7B,IAAIyB,EAAOzB,EAAIyB,KAAKlF,QACpBkF,EAAKU,KAAI,SAAC4U,EAAGzE,GACX7Q,EAAK6Q,GAAS,EAAK0E,iBAAiBD,MAEtC,EAAK1I,SAAS,CAAEvD,MAAOrJ,OACtB,SAACxB,GACF,EAAKoO,SAAS,CAAEvD,MAAO,QAxBlB,2C,EA6BXkM,iBAAmB,SAACvV,GAClB,IAAI6U,EAASrE,KAAKC,MAAMzQ,EAAKgN,aAM7B,OAJAhN,EAAKgN,YAAc6H,EAAOnZ,KAC1BsE,EAAKqR,OAASwD,EAAOxD,OACrBrR,EAAKsR,QAAUuD,EAAOvD,QAEftR,G,EAITmV,mBAAqB,WAEnB,MAA4C,kBAD1B,EAAKjY,MAAfkY,MACYzW,OAAO0W,c,EAE7BG,sBAAwB,WAEtB,MAA+C,kBAD7B,EAAKtY,MAAfkY,MACYzW,OAAO8W,iB,EAG7BC,oBAAsB,WACpB,EAAK9I,SAAS,CAAEoI,iBAAiB,K,EAEnCW,qBAAuB,WACrB,EAAK/I,SAAS,CAAEoI,iBAAiB,IACjC,EAAKnG,Y,EAGP+G,qBAAuB,WACrB,EAAKhJ,SAAS,CAAEqI,kBAAkB,K,EAEpCY,sBAAwB,WACtB,EAAKjJ,SAAS,CAAEqI,kBAAkB,IAClC,EAAKpG,Y,EAGPiH,wBAA0B,WACxB,EAAKlJ,SAAS,CAAEsI,qBAAqB,K,EAEvCa,yBAA2B,WACzB,EAAKnJ,SAAS,CAAEsI,qBAAqB,K,EAIvCc,aAAe,SAAC5P,GACd,EAAKwG,SAAS,CAAE6B,aAAcrI,EAAKkC,OACnC,EAAKwN,2B,EAIPG,aAAe,SAAC7P,GACd,EAAKwG,SAAS,CAAE6B,aAAcrI,EAAKkC,OACnC,EAAKwN,2B,EAGPI,aAAe,WAAM,IAIfvJ,EAFc,EAAKzP,MAAfkY,MAEgBzW,OAAO0W,aAC3BhW,EAAc,EAAK+M,MAAMqC,aAC7BzP,EAAW,iBAAD,OAAkB2N,EAAlB,oBAAyCtN,IAAe,SAACd,GAEjE,EAAKsQ,WACL,EAAKkH,8BACJ,SAACvX,Q,EAIN2X,aAAe,WAEb,IAAM9W,EAAc,EAAK+M,MAAMqC,aAC/BzP,EAAW,gBAAD,OAAiBK,IAAe,SAACd,GAEzC,EAAKsQ,WACL,EAAKkH,8BACJ,SAACvX,Q,EAKN8Q,eAAiB,WACf,EAAKyG,4B,EAGPxM,YAAc,SAACnD,GAAU,IAAD,EACK,EAAKlJ,MAAxBkS,EADc,EACdA,QAASgG,EADK,EACLA,MACjBhG,EAAQhC,KAAR,mBAAyBhH,EAAKkC,KAA9B,YAAsC8M,EAAMzW,OAAO8W,mB,EAGrDjM,UAAY,SAACpD,GACX,EAAKwG,SAAS,CAAE6B,aAAcrI,EAAKkC,OACnC,EAAKsE,SAAS,CAAEmI,aAAc3O,EAAKjB,OACnC,EAAKyQ,wB,kEA7HLvH,KAAKQ,a,+BAiIE,MAEoBR,KAAKnR,MAAxBmJ,EAFD,EAECA,QAAS+O,EAFV,EAEUA,MAGXgB,EAAiB/H,KAAK8G,qBAAuB,+CAAc,GAEjE,OACE,sBAAK9U,UAAW,gBAAhB,UACGgO,KAAK8G,qBACJ,qBAAK9U,UAAW,UAAhB,SAA4B,6BAAK+U,EAAMzW,OAAO0W,iBAA2B,sBAAKhV,UAAW,UAAhB,UACzE,qBAAKA,UAAW,eAGhB,qBAAKA,UAAW,UAAhB,SACE,cAAC,IAAD,CACEsB,QAAS0M,KAAKqH,oBACdrP,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YACNuS,UAAW,cAACC,GAAA,EAAD,mBARb,4CAcJ,qBAAKnP,UAAW,wBAAhB,SACE,cAAC,GAAD,CACE+I,MAAOiF,KAAKjC,MAAMhD,MAClBC,MAAOgF,KAAKjC,MAAM/C,MAClBE,YAAa8E,KAAKmH,wBAA0BnH,KAAK9E,YAAc,KAC/DC,UAAW6E,KAAK8G,qBAAuB,KAAO9G,KAAK7E,UACnDC,YAAa4E,KAAK8G,qBAAwB9G,KAAKmH,wBAA0B,KAAOnH,KAAK2H,aAAgB3H,KAAK4H,aAC1GvM,UACE,cAAC,GAAD,CACEzJ,MAAO,4BACPiG,KAAMmI,KAAKjC,MAAM6I,iBACjB9O,MAAOkI,KAAKwH,sBACZzP,KAAM,cAAC,GAAD,CAAYD,MAAOkI,KAAKwH,sBAAuBvN,KAAM+F,KAAKjC,MAAMqC,aAActJ,KAAMkJ,KAAKjC,MAAM2I,qBAM7G,cAAC,GAAD,CACE9U,MAAO,4BAASiG,KAAMmI,KAAKjC,MAAM4I,gBACjC7O,MAAOkI,KAAKsH,qBACZvP,KAAM,cAAC,GAAD,CAAYD,MAAOkI,KAAKsH,yBAEhC,cAAC,GAAD,CACEzP,KAAMmI,KAAKjC,MAAM8I,oBACjBzO,QAAS4H,KAAK0H,yBACd/V,KAAM,CACJC,MAAO,4BACP0K,QAASyL,EAAgB/H,KAAKjC,MAAMqC,aAAe,wEACnDxD,UAAW,MACXH,aAAc,KACdC,WAAYsD,KAAK8G,qBAAuB9G,KAAK6H,aAAe7H,KAAK8H,aACjEtL,cAAewD,KAAKiB,yB,GA/MThJ,IAAMjJ,WAuNdyJ,iBArOG,SAACwH,GAAD,MAAY,CAC5BlM,KAAM,CACJtG,WAAY,mDACZkL,aAAc,EACdjD,OAAQ,EACR/G,MAAO,QACPgG,QAAS,WACTX,UAAW,yCAEb8F,MAAO,CACLrD,cAAe,iBA2NkB,CAAEyJ,WAAW,GAAnCzH,CAA2CgO,IC3NpDuB,I,mNAEFjK,MAAQ,CACJsD,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,aAAc,GACdE,cAAe,GACfG,YAAa,GACbC,eAAgB,GAChBkG,iBAAkB,SAClBhO,KAAM,GACNiO,cAAe,I,EA+BnBC,UAAY,WAAO,IACPpB,EAAU,EAAKlY,MAAfkY,MACJ9M,EAAO,EAAK8D,MAAM9D,KAAKmO,MAAM,MAC7BC,EAAU,IAAIlX,KAAK8I,EAAM,YAC7BlJ,EAAUgW,EAAMzW,OAAOgY,aAAcD,EAAS,EAAKtK,MAAMkK,kBAAkB,SAAC/X,GACxE,IAAMoT,EAAQpT,EAAIyB,KAAKlF,QAAQ6W,MAC3BjW,EAAO,GAEXiW,EAAMjR,KAAI,SAACnC,EAAKsS,GACZnV,GAAQ,cAAgBmV,EAAM,GAAK,OAAStS,EAAIqY,OAAS,eAAO,mBAEpE,EAAKhK,SAAS,CAAE2J,cAAe7a,OAChC,SAAC8C,Q,EAMRqY,WAAa,WAAO,IACRzB,EAAU,EAAKlY,MAAfkY,MACF0B,EAAiB1B,EAAMzW,OAAO8W,gBAC9BpW,EAAc+V,EAAMzW,OAAOgY,aAMjCzX,EAAS,eAAD,OAAgB4X,EAAhB,uBAA6CzX,GAJtC,IAI+D,SAACd,OAE5E,SAACC,Q,EAKRuY,iBAAmB,WAIf,MAHY,CACR,CAAE5O,MAAO,SAAUF,MAAO,Y,EAKlC+O,mBAAqB,WAAO,IAChB5B,EAAU,EAAKlY,MAAfkY,MACRpX,EAAQ,gBAAD,OAAiBoX,EAAMzW,OAAOgY,aAA9B,sBAAwD,EAAKvK,MAAMkK,mBAAoB,SAAC/X,GAC3F,EAAKqO,SAAS,CAAEtE,KAAM/J,EAAIyB,KAAKlF,aAChC,SAAC0D,GACA,EAAKoO,SAAS,CAAEtE,KAAM,S,EAI9B2O,aAAe,SAAChD,GACZ,EAAKrH,SAAS,CAAEtE,KAAM2L,EAAMpG,OAAO5F,S,EAEvCiP,eAAiB,SAACjD,GACd,EAAKrH,SAAS,CAAE2J,cAAetC,EAAMpG,OAAO5F,S,EAGhDkP,iBAAmB,WACf,OAAO,EAAK/K,MAAMsD,aACd,IAAK,cACD,OAAO,EAAK0H,8BAChB,IAAK,QACD,OAAO,EAAKC,wBAChB,IAAK,WACD,OAAO,EAAKC,2BAChB,QACI,OAAO,O,EAInBF,4BAA8B,WAAM,IAExB/Q,EAAY,EAAKnJ,MAAjBmJ,QAEFoB,EAAQ,EAAKsP,mBAEnB,OACI,sBAAK1W,UAAU,2BAAf,UACI,sBAAKA,UAAU,sCAAf,UACI,6BAAM,EAAK+L,MAAMuD,cACjB,sBAAMtP,UAAW,kBAAjB,SACI,cAAC,GAAD,CACIJ,MAAO,WACPwH,MAAOA,EACPC,MAAO,EAAK0E,MAAMkK,iBAClB3O,YAAa,SAACsM,GACV,EAAKrH,SAAS,CAAE0J,iBAAkBrC,EAAMpG,OAAO5F,gBAK/D,sBAAK5H,UAAU,mBAAf,UACI,oBAAIA,UAAU,QAAd,uCACA,qBAAKA,UAAU,cAAf,SACI,6BAAM,EAAK+L,MAAMwD,gBAErB,oBAAIvP,UAAU,QAAd,sCACA,qBAAKA,UAAU,cAAf,SACI,6BAAM,EAAK+L,MAAMyD,mBAGzB,qBAAKxP,UAAU,mCAAf,SAAkD,4CAClD,qBAAKA,UAAU,WAAf,SACI,0BACI+N,YAAa,UACbnG,MAAO,EAAKmE,MAAM9D,KAClBN,SAAU,EAAKiP,iBAGvB,qBAAK5W,UAAU,sCAAf,SAAqD,kDACrD,qBAAKA,UAAU,aAAf,SACI,0BACI+N,YAAa,UACbnG,MAAO,EAAKmE,MAAMmK,cAClBvO,SAAU,EAAKkP,mBAGvB,sBAAK7W,UAAU,gCAAf,UACI,cAAC,IAAD,CACIsB,QAAS,EAAK6U,UACdnQ,QAAS,CACLjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEnBuD,QAAQ,YACR1O,MAAM,YACNuS,UAAW,cAACC,GAAA,EAAD,mBARf,6CAYA,cAAC,IAAD,CACI7N,QAAS,EAAKkV,WACdxQ,QAAS,CACLjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEnBuD,QAAQ,YACR1O,MAAM,YACNuS,UAAW,cAACC,GAAA,EAAD,mBARf,qD,EAiBhB6H,sBAAwB,WACpB,OACI,qBAAKhX,UAAU,8B,EAMvBiX,yBAA2B,WACvB,OACI,qBAAKjX,UAAU,8B,kMArLX+U,EAAU/G,KAAKnR,MAAfkY,MACJ/V,EAAc+V,EAAMzW,OAAOgY,a,SAEzB3Y,EAAQ,gBAAD,OAAiBqB,GAAjB,uCAAgC,WAAOd,GAAP,iBAAAX,EAAA,sDACnCoC,EAAOzB,EAAIyB,KAAKlF,QAClB+Z,EAASrE,KAAKC,MAAMzQ,EAAKgN,aAE7B,EAAKJ,SAAS,CACV8C,YAAa1P,EAAKmF,KAClBwK,YAAa3P,EAAK+M,KAClB6C,YAAaiF,EAAOnZ,KACpBmU,YAAa7P,EAAKgR,YAClBlB,aAAc9P,EAAKiR,MACnBjB,cAAiC,cAAlB6E,EAAOxD,OAAyBwD,EAAOxD,OAAS,GAC/DlB,YAAanQ,EAAK6J,KAClBuG,eAAmC,cAAnByE,EAAOvD,QAA0BuD,EAAOvD,QAAU,KAEtE,EAAK0F,qBAdoC,2CAAhC,uDAeV,SAACxY,O,qIA0KJ,OAAO6P,KAAK8I,uB,GAhNE7Q,IAAMjJ,YAoNbyJ,iBAlOG,SAACwH,GAAD,MAAY,CAC1BlM,KAAM,CACFtG,WAAY,mDACZkL,aAAc,EACdjD,OAAQ,EACR/G,MAAO,QACPgG,QAAS,WACTX,UAAW,yCAEf8F,MAAO,CACHrD,cAAe,iBAwNc,CAAEyJ,WAAW,GAAnCzH,CAA2CuP,ICjO3CkB,I,OAAAA,aAhBO,SAAAra,GAAU,IACtBkS,EAAYlS,EAAZkS,QAMR,OACE,qBAAK/O,UAAW,kBAAhB,SACE,wBAAQsB,QANQ,WAClByN,EAAQoI,UAKN,2B,SCgBAC,I,mNAEJrL,MAAQ,CACNsL,WAAY,I,EAUdC,UAAY,SAACtD,GACP,EAAKjI,MAAMsL,WAAWE,SAASvD,IACjC,EAAKzH,SAAS,CAAE8K,WAAW,GAAD,oBAAM,EAAKtL,MAAMsL,YAAjB,CAA6BrD,O,EAG3DwD,eAAiB,WACf,EAAK3a,MAAM+U,QAAQ,EAAK7F,MAAMsL,YAC9B,EAAKxa,MAAMiJ,S,oGAGF,IAAD,OACAE,EAAYgI,KAAKnR,MAAjBmJ,QAER,OACE,sBAAKhG,UAAW,cAAhB,UACE,qBAAKA,UAAW,YAAhB,SAHY,CAAC,SAAU,OAAQ,KAAM,OAAQ,KAAM,SAAU,QAAS,IAAK,MAAO,MAIvEK,KAAI,SAAC2T,GACZ,OAAO,wBAAQ1S,QAAS,WAAQ,EAAKgW,UAAUtD,IAAYhU,UAAW,EAAK+L,MAAMsL,WAAWE,SAASvD,GAAW,eAAiB,MAA1H,SACL,cAAC,GAAD,CAAK/L,KAAM+L,EAASnT,KAAM,WAIhC,qBAAKb,UAAW,UAAhB,SACE,cAAC,IAAD,CACEsB,QAAS0M,KAAKwJ,eACdxR,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YAPR,SASE,sE,GA7CasJ,IAAMjJ,YA0DhByJ,iBAxEG,SAACwH,GAAD,MAAY,CAC5BlM,KAAM,CACJtG,WAAY,mDACZkL,aAAc,EACdjD,OAAQ,EACR/G,MAAO,QACPgG,QAAS,WACTX,UAAW,yCAEb8F,MAAO,CACLrD,cAAe,iBA8DkB,CAAEyJ,WAAW,GAAnCzH,CAA2C2Q,IC1DpDK,I,mNAEJ1L,MAAQ,CACNsL,WAAY,I,EAUdK,e,sBAAiB,4BAAAna,EAAA,6DACXsP,EAAW,GADA,SAETlP,EAAQ,gBAAgB,SAACO,GACdA,EAAIyB,KAAKlF,WACvB,SAAC0D,OAJW,gCAOR0O,GAPQ,2C,EAUjB8K,WAAa,SAAC7K,GACZ,IAAI8K,GAAU,EAKd,OAJA,EAAK7L,MAAMsL,WAAWhX,KAAI,SAACkQ,GACtBzD,EAAQ7E,OAASsI,EAAEtI,MAAQ6E,EAAQJ,OAAS6D,EAAE7D,OAC/CkL,GAAU,MAEPA,G,EAGTC,cAAgB,SAAC/K,GACX,EAAK6K,WAAW7K,IAClB,EAAKP,SAAS,CAAE8K,WAAW,GAAD,oBAAM,EAAKtL,MAAMsL,YAAjB,CAA6BvK,O,EAG3D0K,eAAiB,WACf,EAAK3a,MAAMwQ,YAAY,EAAKtB,MAAMsL,YAClC,EAAKxa,MAAMiJ,S,oGAGF,IAAD,OACAE,EAAYgI,KAAKnR,MAAjBmJ,QACF8R,EAAc9J,KAAK0J,iBACzB,OACE,sBAAK1X,UAAW,kBAAhB,UACE,qBAAKA,UAAW,gBAAhB,SACG8X,EAAYzX,KAAI,SAACyM,GAChB,OAAO,wBAAQxL,QAAS,WAAQ,EAAKuW,cAAc/K,IAAY9M,UAAW,EAAK2X,WAAW7K,GAAW,mBAAqB,UAAnH,SACL,6BAAKA,EAAQJ,cAInB,qBAAK1M,UAAW,UAAhB,SACE,cAAC,IAAD,CACEsB,QAAS0M,KAAKwJ,eACdxR,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YAPR,SASE,sE,GAhEiBsJ,IAAMjJ,YA8EpByJ,iBA5FG,SAACwH,GAAD,MAAY,CAC5BlM,KAAM,CACJtG,WAAY,mDACZkL,aAAc,EACdjD,OAAQ,EACR/G,MAAO,QACPgG,QAAS,WACTX,UAAW,yCAEb8F,MAAO,CACLrD,cAAe,iBAkFkB,CAAEyJ,WAAW,GAAnCzH,CAA2CgR,ICzEpDM,I,mNACFhM,MAAQ,CACJqC,aAAc,GACdsG,aAAc,GACdC,iBAAiB,EACjBC,kBAAkB,EAClBC,qBAAqB,EACrB9L,MAAO,CACH,CAAErB,GAAI,OAAeI,MAAO,gBAC5B,CAAEJ,GAAI,cAAeI,MAAO,gBAC5B,CAAEJ,GAAI,OAAeI,MAAO,6BAC5B,CAAEJ,GAAI,OAAeI,MAAO,iBAEhCkB,MAAO,I,EAOXwF,S,sBAAW,8BAAAjR,EAAA,0DAEJ,EAAKuX,qBAFD,uBAGKC,EAAU,EAAKlY,MAAfkY,MACFzI,EAAcyI,EAAMzW,OAAO0W,aAJ9B,SAMGrX,EAAQ,gBAAD,OAAiB2O,EAAjB,aAAwC,SAACpO,GAClD,IAAIyB,EAAOzB,EAAIyB,KAAKlF,QACpBkF,EAAKU,KAAI,SAAC4U,EAAGzE,GACT7Q,EAAK6Q,GAAS,EAAK0E,iBAAiBD,MAExC,EAAK1I,SAAS,CAAEvD,MAAOrJ,OACxB,SAACxB,GACA,EAAKoO,SAAS,CAAEvD,MAAO,QAbxB,6CAiBGrL,EAAQ,gBAAgB,SAACO,GAC3B,IAAIyB,EAAOzB,EAAIyB,KAAKlF,QACpBkF,EAAKU,KAAI,SAAC4U,EAAGzE,GACT7Q,EAAK6Q,GAAS,EAAK0E,iBAAiBD,MAExC,EAAK1I,SAAS,CAAEvD,MAAOrJ,OACxB,SAACxB,GACA,EAAKoO,SAAS,CAAEvD,MAAO,QAxBxB,2C,EA6BXkM,iBAAmB,SAACvV,GAChB,IAAI6U,EAASrE,KAAKC,MAAMzQ,EAAKgN,aAM7B,OAJAhN,EAAKgN,YAAc6H,EAAOnZ,KAC1BsE,EAAKqR,OAASwD,EAAOxD,OACrBrR,EAAKsR,QAAUuD,EAAOvD,QAEftR,G,EAIXmV,mBAAqB,WAEjB,MAA4C,kBAD1B,EAAKjY,MAAfkY,MACYzW,OAAO0W,c,EAG/BK,oBAAsB,WAClB,EAAK9I,SAAS,CAAEoI,iBAAiB,K,EAErCW,qBAAuB,WACnB,EAAK/I,SAAS,CAAEoI,iBAAiB,IACjC,EAAKnG,Y,EAGT+G,qBAAuB,WACnB,EAAKhJ,SAAS,CAAEqI,kBAAkB,K,EAEtCY,sBAAwB,WACpB,EAAKjJ,SAAS,CAAEqI,kBAAkB,IAClC,EAAKpG,Y,EAGTiH,wBAA0B,WACtB,EAAKlJ,SAAS,CAAEsI,qBAAqB,K,EAEzCa,yBAA2B,WACvB,EAAKnJ,SAAS,CAAEsI,qBAAqB,K,EAIzCc,aAAe,SAAC5P,GACZ,EAAKwG,SAAS,CAAE6B,aAAcrI,EAAKkC,OACnC,EAAKwN,2B,EAITG,aAAe,SAAC7P,GACZ,EAAKwG,SAAS,CAAE6B,aAAcrI,EAAKkC,OACnC,EAAKwN,2B,EAGTI,aAAe,WAAM,IAIbvJ,EAFc,EAAKzP,MAAfkY,MAEgBzW,OAAO0W,aAC3BhW,EAAc,EAAK+M,MAAMqC,aAC7BzP,EAAW,iBAAD,OAAkB2N,EAAlB,oBAAyCtN,IAAe,SAACd,GAE/D,EAAKsQ,WACL,EAAKkH,8BACN,SAACvX,Q,EAIR2X,aAAe,WAEX,IAAM9W,EAAc,EAAK+M,MAAMqC,aAC/BzP,EAAW,gBAAD,OAAiBK,IAAe,SAACd,GAEvC,EAAKsQ,WACL,EAAKkH,8BACN,SAACvX,Q,EAKR8Q,eAAiB,WACb,EAAKyG,4B,EAGTvM,UAAY,SAACpD,GACT,EAAKwG,SAAS,CAAE6B,aAAcrI,EAAKkC,OACnC,EAAKsE,SAAS,CAAEmI,aAAc3O,EAAKjB,OACnC,EAAKyQ,wB,kEApHLvH,KAAKQ,a,+BAwHA,MAEsBR,KAAKnR,MAAxBmJ,EAFH,EAEGA,QAAS+O,EAFZ,EAEYA,MAGM/G,KAAK8G,qBAE5B,OACI,sBAAK9U,UAAW,gBAAhB,UACKgO,KAAK8G,qBACF,qBAAK9U,UAAW,UAAhB,SAA4B,6BAAK+U,EAAMzW,OAAO0W,iBAA2B,sBAAKhV,UAAW,UAAhB,UACrE,qBAAKA,UAAW,eAGhB,qBAAKA,UAAW,UAAhB,SACI,cAAC,IAAD,CACIsB,QAAS0M,KAAKqH,oBACdrP,QAAS,CACLjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEnBuD,QAAQ,YACR1O,MAAM,YACNuS,UAAW,cAACC,GAAA,EAAD,mBARf,4CAcZ,qBAAKnP,UAAW,wBAAhB,SACI,cAAC,GAAD,CACI+I,MAAOiF,KAAKjC,MAAMhD,MAClBC,MAAOgF,KAAKjC,MAAM/C,MAClBI,YAAa4E,KAAK8G,qBAAuB9G,KAAK2H,aAAe3H,KAAK4H,aAClEzM,UAAW6E,KAAK8G,qBAAuB,KAAO9G,KAAK7E,UACnDE,UACI,cAAC,GAAD,CACIzJ,MAAO,4BACPiG,KAAMmI,KAAKjC,MAAM6I,iBACjB9O,MAAOkI,KAAKwH,sBACZzP,KAAM,cAAC,GAAD,CAAYD,MAAOkI,KAAKwH,sBAAuBvN,KAAM+F,KAAKjC,MAAMqC,aAActJ,KAAMkJ,KAAKjC,MAAM2I,4B,GAjL/GzO,IAAMjJ,YA2LbyJ,iBAzMG,SAACwH,GAAD,MAAY,CAC1BlM,KAAM,CACFtG,WAAY,mDACZkL,aAAc,EACdjD,OAAQ,EACR/G,MAAO,QACPgG,QAAS,WACTX,UAAW,yCAEf8F,MAAO,CACHrD,cAAe,iBA+Lc,CAAEyJ,WAAW,GAAnCzH,CAA2CsR,ICrLpDC,I,mNACJjM,MAAQ,CACNkM,QAAS,GACTrY,MAAO,GACP+M,YAAa,GACbR,KAAM,EACN+L,WAAW,G,EAObC,iBAAmB,WACjB,IAAI1L,EAAW,CACbwL,QAAS,EAAKlM,MAAMkM,QACpBrY,MAAO,EAAKmM,MAAMnM,MAClB+M,YAAa,EAAKZ,MAAMY,aAGpByL,EAAa,EAAKvb,MAAMwb,OAC9BxZ,EAAS,eAAD,OAAgBuZ,EAAhB,eAAyC3L,GAAU,SAACvO,GAC1DmT,YAAW,WACT,EAAKxU,MAAMiJ,UACV,QACF,SAAC3H,Q,EAKNma,UAAY,WACV,EAAK/L,SAAS,CAAE2L,WAAW,K,EAE7BK,WAAa,WACX,EAAKhM,SAAS,CAAE2L,WAAW,K,EAG7BvK,cAAgB,WACd,OACI,kCACA,6BACE,6BAAI,+DAEN,6BACE,6BACE,uBACI7I,KAAM,OACN9E,UAAW,qCACX+N,YAAa,eACbnG,MAAO,EAAKmE,MAAMnM,MAClB+H,SAAU,SAAC4F,GACT,EAAKhB,SAAS,CAAE3M,MAAO2N,EAAEC,OAAO5F,mB,EAShDgG,cAAgB,WACd,OACI,kCACA,6BACE,6BAAI,+DAEN,6BACE,6BACE,0BACI5N,UAAW,+CACX+N,YAAa,eACbnG,MAAO,EAAKmE,MAAMY,YAClBhF,SAAU,SAAC4F,GACT,EAAKhB,SAAS,CAAEI,YAAaY,EAAEC,OAAO5F,mB,EAStD4Q,gBAAkB,WAAO,IACfxS,EAAY,EAAKnJ,MAAjBmJ,QAER,OACI,kCACA,6BACE,6BACE,cAAC,IAAD,CACI1E,QAAS,EAAKgX,UACdtS,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YAPV,SASE,uEAIN,6BACE,6BACE,6BAAM,EAAKoP,MAAMkM,cAGrB,6BACE,6BACE,cAAC,GAAD,CACIpS,KAAM,EAAKkG,MAAMmM,UACjBpS,MAAO,EAAKyS,WACZxS,KAAM,cAAC,GAAD,CAAeD,MAAO,EAAKyS,WAAYE,WAAY,SAACnM,GACxD,EAAKP,MAAMkM,QAAU3L,e,EASrCoM,kBAAoB,WAAO,IACjB1S,EAAY,EAAKnJ,MAAjBmJ,QAER,OACI,gCACA,6BACE,6BACE,cAAC,IAAD,CACI1E,QAAS,EAAK6W,iBACdnS,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YAPV,SASE,6BAAK,uC,EAQjBqQ,WAAa,SAACC,GACZ,EAAKV,SAAS,CAAEJ,KAAMc,K,oGAMtB,OACI,sBAAKjN,UAAW,qCAAhB,UACE,kCACuB,IAApBgO,KAAKjC,MAAMI,KAAa6B,KAAKL,gBAAkB,KAC3B,IAApBK,KAAKjC,MAAMI,KAAa6B,KAAKJ,gBAAkB,KAC3B,IAApBI,KAAKjC,MAAMI,KAAa6B,KAAKwK,kBAAoB,KAC7B,IAApBxK,KAAKjC,MAAMI,KAAa6B,KAAK0K,oBAAsB,QAEtD,qBAAK1Y,UAAW,UAAhB,SACE,cAAC,GAAD,CAAe8K,SAAU,EAAGE,KAAMgD,KAAKhB,WAAYjC,KAAMiD,KAAKhB,sB,GAlK9C/G,IAAMjJ,YA+K5B2b,G,4MACJ5M,MAAQ,CACN6M,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,mBAAoB,GACpBhQ,MAAO,CACL,CAAErB,GAAI,QAAeI,MAAO,gBAC5B,CAAEJ,GAAI,cAAeI,MAAO,iBAE9BkB,MAAO,I,EAOTgQ,Q,sBAAU,8BAAAzb,EAAA,6DACAwX,EAAU,EAAKlY,MAAfkY,MACFqD,EAAarD,EAAMzW,OAAO2a,YAFxB,SAIFtb,EAAQ,eAAD,OAAgBya,EAAhB,gBAAyC,SAACla,GACrD,EAAKqO,SAAS,CAAEvD,MAAO9K,EAAIyB,KAAKlF,aAC/B,SAAC0D,GACF,EAAKoO,SAAS,CAAEvD,MAAO,QAPjB,2C,EAWVkQ,UAAY,WACV,OAAO,G,EAGTC,WAAa,WACX,EAAK5M,SAAS,CAAEqM,YAAY,K,EAE9BQ,YAAc,WACZ,EAAK7M,SAAS,CAAEqM,YAAY,IAC5B,EAAKI,W,EAGPK,WAAa,SAAC5C,GACZ,EAAKlK,SAAS,CACZwM,mBAAoBtC,EACpBoC,YAAY,K,EAGhBS,YAAc,WACZ,EAAK/M,SAAS,CAAEsM,YAAY,IAC5B,EAAKG,W,EAGPO,WAAa,SAAC9C,GACZ,EAAKlK,SAAS,CACZwM,mBAAoBtC,EACpB+C,aAAa,K,EAGjBC,YAAc,WACZ,EAAKlN,SAAS,CAAEmN,aAAa,IAC7B,EAAKV,W,EAGP9P,YAAc,SAACnD,GACO,EAAKlJ,MAAjBkS,QACAhC,KAAR,oBAA0BhH,EAAKkS,QAA/B,YAA0ClS,EAAKkC,Q,EAGjDkB,UAAY,SAACpD,GAEX,EAAKsT,WAAWtT,EAAKkC,O,EAGvBmB,YAAc,SAACrD,GACb,EAAKwG,SAAS,CACZuM,YAAY,K,EAGhBpO,WAAa,a,EAGbF,cAAgB,a,kEAlEdwD,KAAKgL,Y,+BAuEE,MAEoBhL,KAAKnR,MAAxBmJ,EAFD,EAECA,QAFD,EAEU+O,MAIjB,OACI,sBAAK/U,UAAW,gBAAhB,UACGgO,KAAKkL,YAAc,KAAO,qBAAKlZ,UAAW,UAAhB,SACrB,qBAAKA,UAAW,UAAhB,SACE,cAAC,IAAD,CACIsB,QAAS0M,KAAKmL,WACdnT,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YACNuS,UAAW,cAACC,GAAA,EAAD,mBARf,2CAcR,qBAAKnP,UAAW,wBAAhB,SACE,cAAC,GAAD,CACI+I,MAAOiF,KAAKjC,MAAMhD,MAClBC,MAAOgF,KAAKjC,MAAM/C,MAClBE,YAAa8E,KAAKkL,YAAclL,KAAK9E,YAAc,KACnDE,YAAa4E,KAAKkL,YAAc,KAAOlL,KAAK5E,YAC5CD,UAAW6E,KAAKkL,YAAc,KAAOlL,KAAK7E,UAC1CE,UACE,cAAC,GAAD,CACIzJ,MAAO,4BACPiG,KAAMmI,KAAKjC,MAAM8M,WACjB/S,MAAOkI,KAAKsL,YACZvT,KACE,cAAC,GAAD,CACIC,QAASA,EACTF,MAAOkI,KAAKsL,YACZjB,OAAQrK,KAAKnR,MAAMkY,MAAMzW,OAAO2a,YAChChR,KAAM+F,KAAKjC,MAAMgN,2BAOnC,cAAC,GAAD,CACInZ,MAAO,4BAASiG,KAAMmI,KAAKjC,MAAM6M,WACjC9S,MAAOkI,KAAKoL,YACZrT,KACE,cAAC,GAAD,CACIC,QAASA,EACTF,MAAOkI,KAAKoL,YACZf,OAAQrK,KAAKnR,MAAMkY,MAAMzW,OAAO2a,gBAG1C,cAAC,GAAD,CACIpT,KAAMmI,KAAKjC,MAAM+M,WACjB1S,QAAS4H,KAAKyL,YACd9Z,KAAM,CACJC,MAAO,4BACP0K,QAAS,0FACTM,UAAW,MACXH,aAAc,KACdC,WAAYsD,KAAKtD,WACjBF,cAAewD,KAAKxD,wB,GAxJVvE,IAAMjJ,WAgKjByJ,iBA7VG,SAACwH,GAAD,MAAY,CAC5BlM,KAAM,CACJtG,WAAY,mDACZkL,aAAc,EACdjD,OAAQ,EACR/G,MAAO,QACPgG,QAAS,WACTX,UAAW,yCAEb8F,MAAO,CACLrD,cAAe,iBAmVkB,CAAEyJ,WAAW,GAAnCzH,CAA2CkS,IClUpDgB,I,mNACF5N,MAAQ,CACJW,KAAM,GACNkN,KAAM,I,EASVC,aAAe,WACX,EAAKhd,MAAMiJ,S,kEANRkI,KAAKnR,MAAMoL,O,+BASR,IAAD,OACGjC,EAAYgI,KAAKnR,MAAjBmJ,QAER,OACI,qBAAKhG,UAAW,qCAAhB,SACI,kCACI,6BACI,6BAAI,+DAER,6BACI,6BACI,uBACI8E,KAAM,OACN9E,UAAW,qCACX+N,YAAa,eACbnG,MAAOoG,KAAKjC,MAAMW,KAClB/E,SAAU,SAAC4F,GACP,EAAKhB,SAAS,CAAEG,KAAMa,EAAEC,OAAO5F,eAK/C,6BACI,6BAAI,+DAER,6BACI,6BACI,0BACI5H,UAAW,+CACX+N,YAAa,eACbnG,MAAOoG,KAAKjC,MAAM6N,KAClBjS,SAAU,SAAC4F,GACP,EAAKhB,SAAS,CAAEqN,KAAMrM,EAAEC,OAAO5F,eAK/C,6BACI,6BACI,cAAC,IAAD,CACItG,QAAS0M,KAAK6L,aACd7T,QAAS,CACLjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEnBuD,QAAQ,YACR1O,MAAM,YAPV,SASI,6BAAMqR,KAAKnR,MAAMoL,KAAO,4BAAU,6C,GAhE1ChC,IAAMjJ,YAuIxB8c,IAxD2B7T,IAAMjJ,U,4MA0DrC+O,MAAQ,CACJgO,QAAS,GACTC,WAAY,GACZpB,YAAY,EACZC,YAAY,EACZC,YAAY,EACZmB,mBAAqB,I,EAkBzBd,WAAa,WACT,EAAK5M,SAAS,CAAEqM,YAAY,K,EAEhCQ,YAAc,WACV,EAAK7M,SAAS,CAAEqM,YAAY,K,EAGhCS,WAAa,SAACjB,GACV,EAAK7L,SAAS,CACV0N,mBAAoB7B,EACpBS,YAAY,K,EAGpBS,YAAc,WACV,EAAK/M,SAAS,CAAEsM,YAAY,K,EAGhCU,WAAa,SAACnB,GACV,EAAK7L,SAAS,CACV0N,mBAAoB7B,EACpBU,YAAY,K,EAGpBW,YAAc,WACV,EAAKlN,SAAS,CAAEuM,YAAY,K,EAEhCpO,WAAa,WACQ,EAAKqB,MAAMkO,oB,EAIhCzP,cAAgB,WACZ,EAAKiP,e,EAGTS,gBAAkB,SAAC7B,GACf,OACI,sBAAMrY,UAAW,kBAAjB,SACI,uBAAMA,UAAW,cAAjB,UACA,sBAAKA,UAAW,QAAhB,UACI,6BAAMqY,EAAO3L,OACb,iCACI,wBAAQ1M,UAAW,WAAYsB,QAAS,WAAQ,EAAK+X,WAAWhB,EAAOpQ,OAAvE,SACI,cAAC,IAAD,CAAMjI,UAAU,OAAOY,KAAOgJ,IAAe/I,KAAM,OAEvD,wBAAQb,UAAW,WAAYsB,QAAS,WAAQ,EAAKiY,WAAWlB,EAAOpQ,OAAvE,SACI,cAAC,IAAD,CAAMjI,UAAU,OAAOY,KAAOiJ,IAAqBhJ,KAAM,aAIrE,qBAAKb,UAAW,cAAhB,SAAiCqY,EAAO1L,cAClC,EAAKwN,iBAAiB9B,EAAOpQ,Y,EAK/CkS,iBAAmB,SAAC/B,GAKhBra,QAAQC,IAAI,EAAK+N,MAAMgO,SACvB,IAAMK,EAAW,EAAKrO,MAAMgO,QAAQtf,QAAQ4f,KAAKpS,KAC3CqS,EAAW,EAAKvO,MAAMgO,QAAQtf,QAAQ8f,KAAKtS,KAGjD,OACI,sBAAKjI,UAAW,eAAhB,UACI,yBAAQA,UAAW,WAAnB,UACI,cAAC,IAAD,CAAMA,UAAU,OAAOY,KAAOF,IAAgBG,KALzC,IAML,8DAEJ,yBAAQb,UAAW,WAAnB,UACI,cAAC,IAAD,CAAMA,UAAU,OAAOY,KAAOF,IAAgBG,KATzC,IAUL,0EAEJ,cAAC,IAAD,CAAMd,GAAE,oBAAeqY,EAAf,YAA6BgC,EAA7B,YAAyCE,GAAjD,SACI,yBAAQta,UAAW,WAAnB,UACI,cAAC,IAAD,CAAMA,UAAU,OAAOY,KAAOF,IAAgBG,KAd7C,IAeD,0DAGR,cAAC,IAAD,CAAMd,GAAE,uBAAkBqY,GAA1B,SACI,yBAAQpY,UAAW,WAAnB,UACI,cAAC,IAAD,CAAMA,UAAU,OAAOY,KAAOF,IAAgBG,KApB7C,IAqBD,oE,yMAhGAvD,GAAW,e,cAAvBkd,E,OACJzc,QAAQC,IAAIwc,GACZxM,KAAKzB,SAAS,CAAEwN,QAASS,EAAI7a,O,SACvBhC,EAAQ,kBAAkB,SAACO,GAC7B,EAAKqO,SAAS,CAAEyN,WAAY9b,EAAIyB,KAAKlF,aACtC,SAAC0D,GACA,EAAKoO,SAAS,CAAEkO,SAAU,KAC1B1c,QAAQC,IAAI,uB,qIAgGV,IAAD,SAEoBgQ,KAAKnR,MAAxBmJ,EAFD,EAECA,QAFD,EAEU+O,MAIjB,OACI,sBAAK/U,UAAW,iBAAhB,UACE,qBAAKA,UAAW,UAAhB,SACE,qBAAKA,UAAW,UAAhB,SACE,cAAC,IAAD,CACIsB,QAAS0M,KAAKmL,WACdnT,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YACNuS,UAAW,cAACC,GAAA,EAAD,mBARf,2CAcJ,qBAAKnP,UAAW,sBAAhB,SACKgO,KAAKjC,MAAMiO,WAAW3Z,KAAI,SAACgY,GACxB,OAAO,EAAK6B,gBAAgB7B,QAIpC,cAAC,GAAD,CACIzY,MAAO,4BAASiG,KAAMmI,KAAKjC,MAAM6M,WACjC9S,MAAOkI,KAAKoL,YACZrT,KAAM,cAAC,GAAD,CAAWC,QAASA,EAASF,MAAOkI,KAAKoL,gBAEnD,cAAC,GAAD,CACIxZ,MAAO,4BAASiG,KAAMmI,KAAKjC,MAAM8M,WACjC/S,MAAOkI,KAAKsL,YACZvT,KAAM,cAAC,GAAD,CAAWC,QAASA,EAASF,MAAOkI,KAAKsL,YAAarR,KAAM+F,KAAKjC,MAAMkO,uBAEjF,cAAC,GAAD,CACIpU,KAAMmI,KAAKjC,MAAM+M,WACjB1S,QAAS4H,KAAKyL,YACd9Z,KAAM,CACFC,MAAO,4BACP0K,QAAS,0FACTM,UAAW,MACXH,aAAc,KACdC,WAAYsD,KAAKtD,WACjBF,cAAewD,KAAKxD,wB,GAvKfvE,IAAMjJ,YA+KdyJ,iBArUG,SAACwH,GAAD,MAAY,CAC5BlM,KAAM,CACJtG,WAAY,mDACZkL,aAAc,EACdjD,OAAQ,EACR/G,MAAO,QACPgG,QAAS,WACTX,UAAW,yCAEb8F,MAAO,CACLrD,cAAe,iBA2TkB,CAAEyJ,WAAW,GAAnCzH,CAA2CqT,IC9UpDY,I,mNAEJ3O,MAAQ,CACN0O,SAAU,I,EAeZE,OAAS,SAACrO,GACR,EAAKzP,MAAM4b,WAAWnM,GACtB,EAAKzP,MAAMiJ,S,uMAVLnI,EAAQ,gBAAgB,SAACO,GAC7B,EAAKqO,SAAS,CAAEkO,SAAUvc,EAAIyB,KAAKlF,aAClC,SAAC0D,GACF,EAAKoO,SAAS,CAAEkO,SAAU,KAC1B1c,QAAQC,IAAI,uB,gIASL,IAAD,OACAgI,EAAYgI,KAAKnR,MAAjBmJ,QACFyU,EAAWzM,KAAKjC,MAAM0O,SAC5B,OACE,sBAAKza,UAAW,cAAhB,UACE,qBAAKA,UAAW,YAAhB,SACGya,EAASpa,KAAI,SAACua,GACb,OAAO,wBAAQtZ,QAAS,WAAQ,EAAKqZ,OAAOC,EAAK3S,OAASjI,UAAW,MAA9D,SACL,6BAAM4a,EAAKlO,cAIjB,qBAAK1M,UAAW,UAAhB,SACE,cAAC,IAAD,CACEsB,QAAS0M,KAAKwJ,eACdxR,QAAS,CACPjE,KAAMiE,EAAQjE,KACd+F,MAAO9B,EAAQ8B,OAEjBuD,QAAQ,YACR1O,MAAM,YAPR,SASE,sE,GA7CgBsJ,IAAMjJ,YA0DnByJ,iBAxEG,SAACwH,GAAD,MAAY,CAC5BlM,KAAM,CACJtG,WAAY,mDACZkL,aAAc,EACdjD,OAAQ,EACR/G,MAAO,QACPgG,QAAS,WACTX,UAAW,yCAEb8F,MAAO,CACLrD,cAAe,iBA8DkB,CAAEyJ,WAAW,GAAnCzH,CAA2CiU,I,kBC9D3CG,GAxBArd,IAAMuJ,SCAf1J,GAAK,wBAkBEyd,GAAa,uCAAG,WAAOC,GAAP,SAAAxd,EAAA,sEACrBsd,GAAOpd,IAAIJ,GAAK,mBAAqB0d,GADhB,mFAAH,sDAQbC,GAAa,SAACD,EAAWE,EAAYtO,GAAxB,OACxBkO,GAAO/b,KAAKzB,GAAK,kBAAmB,CAAE0d,YAAWE,aAAYtO,iBAElDuO,GAAe,SAACjC,EAAatM,EAAaoO,GAA3B,OAC1BF,GAAOtc,IAAIlB,GAAK,kBAAmB,CAAE4b,cAAatM,cAAaoO,eAQpDI,GAAc,SAAClC,GAAD,OACzB4B,GAAOpd,IAAIJ,GAAK,SAAW4b,IAEhBmC,GAAa,SAACnC,EAAaoC,GAAd,OACxBR,GAAO/b,KAAKzB,GAAK,QAAS,CAAE4b,cAAaoC,iBAe9BC,GAAU,SAACrC,GAAD,OACrB4B,GAAOpd,IAAIJ,GAAK,eAAiB4b,IAEtBsC,GAAgB,SAACtC,EAAa8B,GAAd,OAC3BF,GAAOpd,IAAIJ,GAAK,uBAAyB0d,EAAY,IAAM9B,IAKhDuC,GAAY,SAACvC,GAAD,OACvB4B,GAAOpd,IAAIJ,GAAK,eAAiB4b,IAKtBwC,GAAgB,SAACV,GAAD,OAC3BF,GAAOpd,IAAIJ,GAAK,gBAAkB0d,IAkCvBW,GAAe,SAC1BC,EACAZ,EACAnb,EACA+M,EACA1E,GAL0B,OAO1B4S,GAAO/b,KAAKzB,GAAK,UAAW,CAC1Bse,gBACAZ,YACAnb,QACA+M,cACA1E,U,uMC1GJ,IAAM2T,GAAsBC,KAAOC,IAAV,MAiMVC,GA1LQ,WAAO,IAAD,EACS/a,mBAAS,IADlB,mBACpBgb,EADoB,KACRC,EADQ,OAEPjb,mBAAS,IAFF,mBAEpB0G,EAFoB,KAEhBwU,EAFgB,OAGHlb,mBAAS,IAHN,mBAGpBuZ,EAHoB,KAGd4B,EAHc,OAIGnb,oBAAS,GAJZ,mBAIpBob,EAJoB,KAIXC,EAJW,KAM3BC,qBAAU,YACO,uCAAG,4BAAA/e,EAAA,6DAChB8e,GAAW,GADK,SAQdH,EAAM,cACNC,EAAQ,cATM,SAUErB,GAAc,cAVhB,OAUV5c,EAVU,OAWd+d,EAAc/d,EAAIyB,MAXJ,kDAad0c,GAAW,GAbG,0DAAH,qDAgBfE,KACC,CAAC7U,IACJ,IAAM8U,EAAe,SAACvU,GACpBlK,QAAQC,IAAIiK,EAAO,IAAMP,GACzB,IDfyBuR,EAAa8B,ECelC7c,GDfqB+a,ECeFhR,EDfe8S,ECeTrT,EDd/BmT,GAAOjc,OAAOvB,GAAK,kBAAmB,CAAEsC,KAAM,CAAEsZ,cAAa8B,gBCiB3D7c,EAAMA,EAAIyB,MAUN8c,EAAiB,SAACxU,GACtB,GAAa,eAATsS,EAAuB,CAEzB,IAAMmC,EAAO,oBAAsBzU,EAAO,IAAMP,EAAK,IAAM6S,EACrDoC,EAAO,cAAgB1U,EAAO,IAAMP,EAAK,IAAM6S,EAC/CqC,EAAO,eAAiB3U,EAAO,IAAMP,EAAK,IAAM6S,EAChDsC,EAAO,iBAAmB5U,EAAO,IAAMP,EACvCoV,EAAO,iBAAmB7U,EAAO,IAAMP,EAC7C,OACE,gCACE,eAAC,IAAD,CAAM3H,GAAI2c,EAAV,UACE,cAAC,KAAD,CAAQ3c,GAAG,IAAIpD,MAAM,UAArB,0BAEU,OAEZ,eAAC,IAAD,CAAMoD,GAAI4c,EAAV,UACE,cAAC,KAAD,CAAQhgB,MAAM,UAAd,kBAAsC,OAExC,eAAC,IAAD,CAAMoD,GAAI6c,EAAV,UACE,cAAC,KAAD,CAAQjgB,MAAM,UAAd,mDAAyC,OAE3C,eAAC,IAAD,CAAMoD,GAAI8c,EAAV,UACE,cAAC,KAAD,CAAQlgB,MAAM,OAAd,mDAAsC,OAExC,eAAC,IAAD,CAAMoD,GAAI+c,EAAV,UAEE,cAAC,KAAD,CAAQngB,MAAM,YAAd,0BAAsC,OAExC,cAAC,KAAD,CAAQ2E,QAAS,kBAAMkb,EAAavU,IAAOtL,MAAM,SAAjD,uCAEU,OAGT,GAAa,eAAT4d,EAAuB,CAEhC,IAAM3c,EAAM,cAAgBqK,EAAO,IAAMP,EAAK,IAAM6S,EAC9CoC,EAAO,eAAiB1U,EAAO,IAAMP,EAAK,IAAM6S,EAChDmC,EAAO,oBAAsBzU,EAAO,IAAMP,EAAK,IAAM6S,EAC3D,OACE,gCACE,eAAC,IAAD,CAAMxa,GAAI2c,EAAV,UACE,cAAC,KAAD,CAAQ3c,GAAG,IAAIpD,MAAM,UAArB,0BAEU,OAEZ,eAAC,IAAD,CAAMoD,GAAInC,EAAV,UACE,cAAC,KAAD,CAAQjB,MAAM,UAAd,kBAAsC,OAGxC,eAAC,IAAD,CAAMoD,GAAI4c,EAAV,UACE,cAAC,KAAD,CAAQhgB,MAAM,UAAd,0BAAoC,OAEtC,eAAC,IAAD,CAAMoD,GAAI4c,EAAV,UAEE,cAAC,KAAD,CAAQhgB,MAAM,OAAd,0BAAiC,YAMrCogB,EAAe,WACnB,IAAMnf,EAAM,eAAiB8J,EACvBiV,EAAO,mBAAqBjV,EAElC,MAAa,eAAT6S,EAGA,8BACE,cAAC,IAAD,CAAMxa,GAAInC,EAAV,SACE,cAAC,KAAD,CAAQjB,MAAM,YAAY4J,MAAO,CAAE9D,MAAO,SAA1C,8BAMY,eAAT8X,EAGP,8BACE,cAAC,IAAD,CAAMxa,GAAI4c,EAAV,SACE,cAAC,KAAD,CAAQhgB,MAAM,YAAY4J,MAAO,CAAE9D,MAAO,SAA1C,mCALD,GAaT,OAAK2Z,EAIA7B,EAMAyB,GAAoC,IAAtBA,EAAW5b,OAiB5B,eAACwb,GAAD,WACE,sBAAKrV,MAAO,CAAE5C,UAAW,OAAQqZ,WAAY,SAA7C,UACE,oDACCD,OAGH,cAACE,GAAA,EAAD,CACE1W,MAAO,CAAE7D,OAAQ,QAASsa,WAAY,QAASva,MAAO,SADxD,SAGE,8BACE,cAACya,GAAA,EAAD,UACGlB,GACCA,EAAW3b,KAAI,SAAC8c,GACd,OACE,eAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAW5T,IAAI,KAAf,cAAsB0T,EAAEzQ,QACxB,cAAC4Q,GAAA,EAAD,CAAc7T,IAAI,KAAKzJ,UAAU,kBAAjC,SACG,MAEH,cAACud,GAAA,EAAD,UAAWJ,EAAExQ,cAEZ8P,EAAeU,EAAElV,QAPLkV,EAAElV,kBA7B7B,gCACE,sBAAK1B,MAAO,CAAE5C,UAAW,OAAQqZ,WAAY,SAA7C,UACE,oDACCD,OAGH,cAACE,GAAA,EAAD,CACE1W,MAAO,CAAE7D,OAAQ,QAASsa,WAAY,QAASva,MAAO,WAExD,cAACya,GAAA,EAAD,UACE,mBAAG3W,MAAO,CAAEyW,WAAY,SAAxB,iFAhBJ,8BACE,mBAAGzW,MAAO,CAAEyW,WAAY,SAAxB,oEANG,cAACpB,GAAD,oC,wEClJX,IAAM4B,GAAoB3B,KAAOC,IAAV,MASR2B,GAPM,WACnB,OACE,cAACD,GAAD,UACE,cAAC,GAAD,O,2qBCDN,I,GAAME,GAAoB7B,KAAOC,IAAV,MAejB6B,GAAW9B,KAAOC,IAAV,MA4BC8B,GAbM,SAAC,GAAkB,IAAhB7c,EAAe,EAAfA,SACtB,OACE,cAAC2c,GAAD,UACE,eAACC,GAAD,WACE,qBAAK3d,UAAU,YAAf,SACE,cAAC,IAAD,CAAMD,GAAG,IAAT,yBAEDgB,Q,gDC5CH8c,GAAgB,wBAChBC,GAAiB,yBAEVC,GAAeC,aAC1BH,IACA,SAACI,GAAD,OAAiBA,KAGNC,GAAgBF,aAC3BF,IACA,SAACG,GAAD,OAAiBA,KAmBJ7B,GAdC+B,cAAa,qBAExBN,IAAgB,SAAC9R,EAAOqS,GAAR,mBAAC,eACbrS,GADY,kBAEdqS,EAAOC,SAAU,OAJK,eAMxBP,IAAiB,SAAC/R,EAAOqS,GAAR,mBAAC,eACdrS,GADa,kBAEfqS,EAAOC,SAAU,OARK,IAFR,ICZRC,GAA2B,SAAAxZ,GAGtC,MAAO,CAACA,EAFK,UAAMA,EAAN,YACA,UAAMA,EAAN,cAIA,SAASyZ,GAAkBzZ,EAAM0Z,GAC9C,IAAMC,EAAO,UAAM3Z,EAAN,YACP4Z,EAAO,UAAM5Z,EAAN,YAEb,iBAAO,WAAUsZ,GAAV,uEACL,OADK,SACC7f,aAAIwf,GAAajZ,IADlB,OAGc,OAHd,kBAGoB6Z,aAAKH,EAASJ,EAAOC,SAHzC,OAIH,OADMjgB,EAHH,gBAIGG,aAAI,CACRuG,KAAM2Z,EACNJ,QAASjgB,EAASuB,KAClBif,KAAMxgB,IAPL,+BAUH,OAVG,oCAUGG,aAAI,CACRuG,KAAM4Z,EACNL,QAAQ,EAAD,GACPljB,OAAO,IAbN,QAgBL,OAhBK,UAgBCoD,aAAI2f,GAAcpZ,IAhBnB,yDCVF,I,GAWM+Z,GAAS,kBAAOnd,OAAOC,SAAS9B,KAAO,gB,YC8BnCif,IApCXC,GAAe,oBACfC,GAAkB,uB,GAE+BV,GACrD,iB,qBADKW,G,MAAUC,G,MAAkBC,G,SAIWb,GAC5C,c,qBADKc,G,MAAOC,G,MAAeC,G,MAIhBC,GAAcvB,aACzBe,IACA,kBAA2B,CACzBS,KADF,EAAGA,KAED1f,IAFF,EAASA,IAGP8H,MAHF,EAAcA,UAMH6X,GAAiBzB,aAAagB,IAAiB,SAACQ,GAAD,OAAUA,KACzDE,GAAW1B,aACtBiB,IACA,kBAAmC,CACjCU,SADF,EAAGA,SAEDC,SAFF,EAAaA,SAGXlT,KAHF,EAAuBA,SAMZmT,GAAQ7B,aAAaoB,IAAO,kBAA6B,CACpEO,SADuC,EAAGA,SAE1CC,SAFuC,EAAaA,aAMhDE,GAAevB,GAAkBU,IDnCf,SAAC,GAAD,IAAGU,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAUlT,EAAvB,EAAuBA,KAAvB,OACtBmO,GAAO/b,KAAK,iBAAkB,CAAE6gB,WAAUC,WAAUlT,YCmChDqT,GAAYxB,GAAkBa,IDxCf,SAAC,GAAD,IAAGO,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACnB/E,GAAOpd,IAAI,gBAAiB,CAAEkiB,WAAUC,gBCwCnC,SAAUd,KAAV,iEACL,OADK,SACCkB,aAAWf,GAAUa,IADtB,OAEL,OAFK,SAECE,aAAWZ,GAAOW,IAFnB,wCAKP,IAAME,GAAe,CACnBP,SAAU,CACRC,SAAU,GACVC,SAAU,GACVM,gBAAiB,GACjBxT,KAAM,IAERmT,MAAO,CACLF,SAAU,GACVC,SAAU,IAEZrF,KAAM,KACN4F,UAAW,MAwCE5F,GArCF4D,cAAa,kBAAC,GAEtBY,IAAe,SAAChT,EAAD,WAAUsS,QAAWmB,EAArB,EAAqBA,KAAM1f,EAA3B,EAA2BA,IAAK8H,EAAhC,EAAgCA,MAAhC,OACdwY,aAAQrU,GAAO,SAACsU,GACdA,EAAMb,GAAM1f,GAAO8H,QAJD,YAAC,GAMtBoX,IAAkB,SAACjT,EAAD,SAAmByT,EAAnB,EAAUnB,QAAV,mBAAC,eACftS,GADc,uBAEhByT,EAAOS,GAAaT,IAFJ,0BAGN,MAHM,OANG,YAAC,GAYtBN,IAAmB,SAACnT,EAAD,OAAmBwO,EAAnB,EAAU8D,QAAV,mBAAC,eAChBtS,GADe,IAElBoU,UAAW,KACX5F,YAfoB,YAAC,GAkBtB4E,IAAmB,SAACpT,EAAD,OAAmB5Q,EAAnB,EAAUkjB,QAAV,mBAAC,eAChBtS,GADe,IAElBoU,UAAWhlB,OApBS,YAAC,GAuBtBkkB,IAAgB,SAACtT,EAAD,OAAmBwO,EAAnB,EAAU8D,QAAV,mBAAC,eACbtS,GADY,IAEfoU,UAAW,KACX5F,YA1BoB,YAAC,GA6BtB+E,IAAgB,SAACvT,EAAD,OAAmB5Q,EAAnB,EAAUkjB,QAAV,mBAAC,eACbtS,GADY,IAEfoU,UAAWhlB,OA/BS,IAkCxB8kB,ICvEa/jB,GA3BC,CACdokB,KAAM,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,KAAM,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,Y,i5BClBJ,IAAMC,GAAcC,aAAH,KAUDvkB,GAAQokB,KAAK,GAEXpkB,GAAQokB,KAAK,IAG3B,SAAAzjB,GAAK,OACLA,EAAM6jB,WACND,aADA,SAQA,SAAA5jB,GAAK,OACLA,EAAM0jB,MACNE,aADA,KAIkBvkB,GAAQokB,KAAK,MAKjBpkB,GAAQokB,KAAK,GAClBpkB,GAAQokB,KAAK,IAKpBK,GAAe9E,KAAO+E,OAAV,KACdJ,IAGEK,GAAahF,aAAOiF,IAAPjF,CAAH,KACZ2E,IAWWO,GARA,SAAAlkB,GACb,OAAOA,EAAMkD,GACX,cAAC8gB,GAAD,2BAAgBhkB,GAAhB,IAAuB0jB,KAAM1jB,EAAM0jB,KAAO,EAAI,KAE9C,cAACI,GAAD,eAAkB9jB,K,o4BC/CtB,I,GAAMmkB,GAAgBnF,KAAOC,IAAV,KAGN5f,GAAQokB,KAAK,IAQpBW,GAAcpF,KAAOnV,MAAV,KAGYxK,GAAQokB,KAAK,GAMXpkB,GAAQokB,KAAK,IAOtCY,GAASrF,KAAOC,IAAV,KAIC5f,GAAQokB,KAAK,GAGXpkB,GAAQokB,KAAK,IAKtBa,GAAsBtF,aAAOkF,GAAPlF,CAAH,MAInBuF,GAAU,CACdvB,MAAO,qBACPH,SAAU,2BACV2B,OAAQ,kCAMJC,GAAezF,KAAOC,IAAV,MAiEHyF,GA1DE,SAAC,GAA+C,IAA7Czc,EAA4C,EAA5CA,KAAM0a,EAAsC,EAAtCA,KAAM7X,EAAgC,EAAhCA,SAAU6Z,EAAsB,EAAtBA,SAAUrmB,EAAY,EAAZA,MAC5CE,EAAO+lB,GAAQtc,GACrB,OACE,eAACkc,GAAD,WACE,6BAAK3lB,IACL,uBAAMmmB,SAAUA,EAAhB,UACE,cAACP,GAAD,CACEQ,aAAa,WACb/U,KAAK,WACLqB,YAAY,qBACZpG,SAAUA,EACVC,MAAO4X,EAAKG,WAEd,cAACsB,GAAD,CACEQ,aAAa,eACb/U,KAAK,WACLqB,YAAY,2BACZjJ,KAAK,WACL6C,SAAUA,EACVC,MAAO4X,EAAKI,WAEJ,aAAT9a,GACC,gCACE,cAACmc,GAAD,CACEQ,aAAa,eACb/U,KAAK,kBACLqB,YAAY,wCACZjJ,KAAK,WACL6C,SAAUA,EACVC,MAAO4X,EAAKU,kBAEd,cAACe,GAAD,CACEQ,aAAa,OACb/U,KAAK,OACLqB,YAAY,qDACZjJ,KAAK,OACL6C,SAAUA,EACVC,MAAO4X,EAAK9S,UAKjBvR,GAAS,cAACmmB,GAAD,UAAenmB,IACzB,cAACgmB,GAAD,CAAqBZ,MAAI,EAACG,WAAS,EAACna,MAAO,CAAE5C,UAAW,QAAxD,SACGtI,OAGL,cAAC6lB,GAAD,UACY,UAATpc,EACC,cAAC,IAAD,CAAM/E,GAAG,YAAT,sCAEA,cAAC,IAAD,CAAMA,GAAG,SAAT,sC,YC5FA2hB,I,YASOC,IA9BXC,GAAgB,qB,GAEwBtD,GAC5C,c,qBADKuD,G,MAAOC,G,MAAeC,G,MAGvBC,GAAS,cAGFC,IADcjE,aAAa4D,IAAe,SAAAvH,GAAI,OAAIA,KAC1C2D,aAAa6D,KACrBhD,GAASb,aAAagE,IAE7BE,GAAY3D,GAAkBsD,ILPf,kBAAMhH,GAAOpd,IAAI,oBKStC,SAAS0kB,KACP,IACEC,aAAaC,WAAW,QACxB,MAAO9U,GACPxP,QAAQC,IAAI,gCAIhB,SAAU0jB,KAAV,iEAEI,OAFJ,kBAEU/C,aAAK2D,IAFf,OAGIF,aAAaC,WAAW,QAH5B,+CAKItkB,QAAQC,IAAR,MALJ,qDASO,SAAU2jB,KAAV,iEACL,OADK,SACC3B,aAAW6B,GAAOK,IADnB,OAEL,OAFK,SAEClC,aAAW+B,GAAeI,IAF3B,OAGL,OAHK,SAGCnC,aAAWgC,GAAQN,IAHpB,wCAMP,IAKevD,iBAAa,kBAAC,GAExByD,IAAgB,SAAC7V,EAAD,OAAmBsO,EAAnB,EAAUgE,QAAV,mBAAC,eACbtS,GADY,IAEfsO,YAJsB,YAAC,GAMxByH,IAAgB,SAAC/V,EAAD,OAAmBsO,EAAnB,EAAUgE,QAAV,mBAAC,eACbtS,GADY,IAEfsO,OACAkI,WAAY,UATU,YAAC,GAWxBR,IAAgB,SAAChW,EAAD,OAAmB5Q,EAAnB,EAAUkjB,QAAV,mBAAC,eACbtS,GADY,IAEfsO,KAAM,KACNkI,WAAYpnB,OAdU,YAAC,GAgBxB6mB,IAAS,SAAAjW,GAAK,kCACVA,GADU,IAEbsO,KAAM,UAlBgB,IALP,CACnBA,KAAM,KACNkI,WAAY,OC8BCrL,gBApEG,SAAC,GAAiB,IAAfnI,EAAc,EAAdA,QAAc,EACP/N,mBAAS,MADF,mBAC1B7F,EAD0B,KACnBqnB,EADmB,KAE3BC,EAAWC,eAFgB,EAGOC,cAAY,gBAAGpI,EAAH,EAAGA,KAAMF,EAAT,EAASA,KAAT,MAAqB,CACvEmF,KAAMjF,EAAKsF,MACXtF,KAAMA,EAAKA,KACX4F,UAAW5F,EAAK4F,UAChB9F,KAAMA,EAAKA,SAJLmF,EAHyB,EAGzBA,KAAMjF,EAHmB,EAGnBA,KAAM4F,EAHa,EAGbA,UAAW9F,EAHE,EAGFA,KAsD/B,OA5BAiC,qBAAU,WACRmG,EAAShD,GAAe,YACvB,CAACgD,IAEJnG,qBAAU,WACR,GAAI6D,EAIF,OAHApiB,QAAQC,IAAI,6BACZD,QAAQC,IAAImiB,QACZqC,EAAS,yIAGPjI,IACFxc,QAAQC,IAAI,mCACZykB,EAASR,SAEV,CAAC1H,EAAM4F,EAAWsC,IAErBnG,qBAAU,WACR,GAAIjC,EAAM,CACRtL,EAAQhC,KAAK,KACb,IACEqV,aAAaQ,QAAQ,OAAQzS,KAAKY,UAAUsJ,IAC5C,MAAO9M,GACPxP,QAAQC,IAAI,mCAGf,CAAC+Q,EAASsL,IAGX,cAAC,GAAD,CACEvV,KAAK,QACL0a,KAAMA,EACN7X,SAnDa,SAAC4F,GAAO,IAAD,EACEA,EAAEC,OAAlB5F,EADc,EACdA,MAAO8E,EADO,EACPA,KACf+V,EACElD,GAAY,CACVC,KAAM,QACN1f,IAAK4M,EACL9E,YA8CF4Z,SAxCa,SAACjU,GAChBA,EAAEsV,iBADoB,IAEdlD,EAAuBH,EAAvBG,SAAUC,EAAaJ,EAAbI,SAClB6C,EAAS5C,GAAM,CAAEF,WAAUC,eAsCzBzkB,MAAOA,OC1DE2nB,GARG,WAChB,OACE,cAAC,GAAD,UACE,cAAC,GAAD,O,6ZCJN,IAAMC,GAAkBlH,KAAOC,IAAV,MAqBNkH,GANI,SAAC,GAA2B,IAAzBjiB,EAAwB,EAAxBA,SAAa7D,EAAW,4BAG5C,OAAO,cAAC6lB,GAAD,2BAAqB7lB,GAArB,aAA4B6D,M,yzBCfrC,IAAMkiB,GAAcpH,KAAOC,IAAV,MAUXoH,GAAUrH,aAAOmH,GAAPnH,CAAH,MAmBPsH,GAAStH,KAAOC,IAAV,MAINsH,GAAWvH,KAAOC,IAAV,MA8BCuH,GAzBA,SAAC,GAAwB,IAAtBhJ,EAAqB,EAArBA,KAAMiJ,EAAe,EAAfA,SACtB,OACE,qCACE,cAACL,GAAD,UACE,eAACC,GAAD,WACE,cAAC,IAAD,CAAMnjB,GAAG,IAAIC,UAAU,OAAvB,uBAGCqa,EACC,sBAAKra,UAAU,QAAf,UACE,cAAC,GAAD,UAAWqa,EAAKsF,WAChB,cAAC,GAAD,CAAQre,QAASgiB,EAAjB,yCAGF,qBAAKtjB,UAAU,QAAf,SACE,cAAC,GAAD,CAAQD,GAAG,SAAX,uCAKR,cAACojB,GAAD,QClDSI,GATS,WAAO,IACrBlJ,EAASsI,cAAY,kBAAe,CAAEtI,KAAjB,EAAGA,KAAyBA,SAAjDA,KACFoI,EAAWC,eAIjB,OAAO,cAAC,GAAD,CAAQrI,KAAMA,EAAMiJ,SAHV,WACfb,EAAS5D,U,2LCNb,IAAM2E,GAAoB3H,KAAOC,IAAV,MAgCR2H,GAxBM,WACnB,OACE,gCACE,cAAC,GAAD,IACA,cAACD,GAAD,UACE,qBAAKE,MAAM,SAAX,SACE,sBACEA,MAAM,uCACNC,iBAAe,QAFjB,UAIE,qBAAK1jB,IAAI,oBAAoBE,IAAI,GAAGsC,MAAM,MAAMuB,OAAO,QAEvD,sBAAK0f,MAAM,eAAX,UACE,0FAEA,8F,kyBCtBRE,G,4MACJ7X,MAAQ,CAAE8X,OAAQ,I,EAClBC,aAAe,SAACvW,GAAO,IAAD,EACIA,EAAEC,OAAlBd,EADY,EACZA,KAAM9E,EADM,EACNA,MACd,EAAK2E,SAAL,eACGG,EAAO9E,K,EAGZmc,Y,sBAAc,4BAAAxmB,EAAA,+EAEaC,IAAMC,IAAI,aAFvB,OAEJW,EAFI,OAGV,EAAKmO,SAAS,CAEZsX,OAAQzlB,EAASuB,OALT,gDAQV5B,QAAQC,IAAR,MARU,yD,mEAaZ+lB,EADwB/V,KAAhB+V,iB,+BAGA,IACAF,EAAW7V,KAAKjC,MAAhB8X,OACAC,EAAiB9V,KAAjB8V,aACR,OACE,eAACE,GAAD,WACE,sCACA,8BACGH,GACC,0BACEnX,KAAK,aACL/E,SAAUmc,EACVG,KAAM,EACNrc,MAAOuI,KAAKY,UAAU8S,EAAQ,KAAM,OAMzCA,EAAOxjB,KAAI,SAACwH,GACX,OACE,cAAC,GAAD,UACE,eAAC,IAAD,CAAM9H,GAAE,kBAAa8H,EAAKH,IAA1B,UACE,6BAAKG,EAAKjI,QACV,4BAAIiI,EAAKyC,cAHEzC,EAAKH,OAQxB,cAAC,GAAD,UAEE,cAAC,IAAD,CAAM3H,GAAE,WAAR,yC,GArDe/C,aA4DnBgnB,GAAOnI,KAAOC,IAAV,MAGJoI,GAAWrI,KAAOC,IAAV,MAwBRiF,GAASlF,KAAOC,IAAV,MAYG8H,M,o3BCjGf,IAAMO,GAAwBtI,KAAOC,IAAV,MAErBsI,GAAwBvI,KAAOC,IAAV,MAcrBuI,GAAuBxI,KAAOC,IAAV,MAapBwI,GAAYzI,KAAOC,IAAV,MAuFAyI,GA9EU,SAAC,GAAe,IAAbxP,EAAY,EAAZA,MACpBkE,EAAclE,EAAMzW,OAAO2a,YAC3B8B,EAAYhG,EAAMzW,OAAOyc,UAFO,EAGA/Z,mBAAS,IAHT,mBAG/B2L,EAH+B,KAGlB6X,EAHkB,KAIhCC,EAAsB,SAAClX,GAAD,OAAOiX,EAAejX,EAAEC,OAAO5F,QAErDtG,EAAO,uCAAG,WAAOqL,GAAP,SAAApP,EAAA,6DACdQ,QAAQC,IAAI,YAAcib,GAC1Blb,QAAQC,IAAI,YAAc2O,GAC1B5O,QAAQC,IAAI,YAAc+c,GAHZ,SAIEG,GAAajC,EAAatM,EAAaoO,GAJzC,cAKJpb,KAAKlF,QALD,2CAAH,sDA2Cb,OACE,cAAC0pB,GAAD,UACE,cAACE,GAAD,UACE,cAACC,GAAD,UACE,cAACF,GAAD,UACE,gCACE,uEAEA,sBACEM,IAAI,aACJ7kB,KAAK,qDAEP,sBACE6kB,IAAI,aACJ7kB,KAAK,gFAGP,sBACE6kB,IAAI,aACJ7kB,KAAK,uGA9Cf,8BACE,uBAAM6H,GAAG,QAAQgc,MAAM,8BAA8BtF,OAAO,GAA5D,UACE,2BAAUsF,MAAM,aAAhB,UACE,uBAAOiB,IAAI,cAAX,wCACA,0BACEjd,GAAG,cACHgF,KAAK,cACLuX,KAAK,KACLW,KAAK,MACL7W,YAAY,GACZpG,SAAU8c,EACV7c,MAAO+E,OAIX,cAAC,GAAD,CACErL,QAAS,kBAAMA,EAAQqL,IACvB+W,MAAM,KACNnD,MAAI,EACJ9d,MAAM,OAJR,2C,8rDCzEV,IAAMoiB,GAAsBhJ,KAAOC,IAAV,MAanBgJ,GAAWjJ,KAAOC,IAAV,MAORiJ,GAAkBlJ,KAAOC,IAAV,MAqQNkJ,GArMS,SAAC,GAAe,IAAbjQ,EAAY,EAAZA,MACnBkE,EAAclE,EAAMzW,OAAO2a,YAC3B8B,EAAYhG,EAAMzW,OAAOyc,UACzBR,EAAOxF,EAAMzW,OAAOic,KAC1Bxc,QAAQC,IAAIib,GACZlb,QAAQC,IAAI+c,GACZhd,QAAQC,IAAIuc,GANyB,MAOXvZ,mBAAS,IAPE,mBAO9BikB,EAP8B,KAOvBC,EAPuB,OAQRlkB,mBAAS,IARD,mBAQ9BmkB,EAR8B,KAQrBC,EARqB,OASXpkB,qBATW,mBAS9BpB,EAT8B,KASvBylB,EATuB,OAUjBrkB,mBAAS,IAVQ,mBAU9B0G,EAV8B,KAU1B4d,EAV0B,OAWLtkB,mBAAS,IAXJ,mBAW9BukB,EAX8B,KAWlBC,EAXkB,OAYPxkB,oBAAS,GAZF,mBAY9Bob,EAZ8B,KAYrBC,EAZqB,KAcrCC,qBAAU,YACO,uCAAG,8BAAA/e,EAAA,6DAChB8e,GAAW,GADK,kBAGOf,GAAQrC,GAHf,cAId7a,GADIA,EAHU,QAIMuB,KACpBulB,EAAS9mB,GALK,SAMQmd,GAActC,EAAa8B,GANnC,OAMV0K,EANU,OAOdL,EAAUK,EAAU9lB,MAPN,kDASd0c,GAAW,GATG,0DAAH,qDAYfE,KACC,CAACtD,EAAa8B,IAEjB,IAAM2K,EAAY,SAACnY,GACjB+X,EAAM/X,EAAEC,OAAO5F,QAEX+d,EAAe,SAACpY,GACpB8X,EAAS9X,EAAEC,OAAO5F,QAEdge,EAAgB,SAACrY,GACrBiY,EAAUjY,EAAEC,OAAO5F,QAGfie,EAAO,SAACtY,GACZA,EAAEsV,iBACF,IAAMxH,EAAc,CAClBzb,MAAOA,EACP8H,GAAIA,EACJ6d,WAAYA,GAEdxnB,QAAQC,IAAI4B,EAAQ,IAAM8H,EAAK,IAAM6d,IpB1Eb,SAACtM,EAAaoC,GACxCR,GAAOtc,IAAIlB,GAAK,cAAe,CAAE4b,cAAaoC,gBoB0ElCyK,CAAa7M,EAAaoC,IAOtC,IAAKe,EACH,OAAO,cAACyI,GAAD,mCAET,IAAKI,EACH,OACE,8BACE,mBAAG1e,MAAO,CAAEyW,WAAY,SAAxB,oEAkHN,OACE,cAAC6H,GAAD,UACE,cAACC,GAAD,UACE,cAACC,GAAD,CAAiBxe,MAAO,CAAE5C,UAAW,SAArC,SACE,qCACE,sBAAK4C,MAAO,CAAE7D,OAAQ,SAAtB,UACE,oBAAI6D,MAAO,CAAEzD,WAAY,QAAzB,0BACA,wBAAO4E,GAAG,OAAV,UACE,gCACE,oBAAInB,MAAO,CAAE5C,UAAW,SAAxB,SArDD,eAAT4W,EARgB,CAClB,eACA,qBACA,uCACA,kCACA,4BAIqBla,KAAI,SAACP,EAAK0Q,GAC7B,OAAO,6BAAiB1Q,EAAIimB,eAAZvV,MAEA,eAAT+J,EALU,CAAC,eAAM,uCAAU,kCAAU,4BAMxBla,KAAI,SAACP,EAAK0Q,GAC9B,OAAO,6BAAiB1Q,EAAIimB,eAAZvV,WAFb,MAmDK,gCA3CC,eAAT+J,EAEA0K,GACAA,EAAM5kB,KAAI,YAA2D,IAAxD4H,EAAuD,EAAvDA,KAAM8S,EAAiD,EAAjDA,UAAWiL,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OACrD,OACE,+BACE,6BAAKje,IACL,6BAAK8S,IACL,6BAAKiL,IACL,6BAAKC,IACL,6BAAKC,EAAS,IAAM,QALbje,MAUG,eAATsS,EAEP4K,GACAA,EAAQ9kB,KAAI,YAAgD,IAA7C4H,EAA4C,EAA5CA,KAAM+d,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAC5C,OACE,+BACE,6BAAKje,IACL,6BAAK+d,IACL,6BAAKC,IACL,6BAAKC,EAAS,IAAM,QAJbje,WALV,UA7FM,eAATsS,EAEA,gCACE,oBAAIhU,MAAO,CAAEzD,WAAY,QAAzB,kDACA,uBACE0e,SAAUqE,EACVtf,MAAO,CAAE5C,UAAW,MAAOqZ,WAAY,SAFzC,UAIE,cAACmJ,GAAA,EAAD,CAAWC,QAAQ,QAAnB,0BACA,eAACC,GAAA,EAAD,CAAc3e,GAAG,QAAQgF,KAAK,QAAQ/E,SAAUge,EAAhD,UACE,wBAAQ/d,MAAOhI,IACf,wBAAQgI,MAAM,aAAd,2BACA,wBAAQA,MAAM,aAAd,2BACA,wBAAQA,MAAM,aAAd,2BACA,wBAAQA,MAAM,aAAd,2BACA,wBAAQA,MAAM,aAAd,2BACA,wBAAQA,MAAM,aAAd,2BACA,wBAAQA,MAAM,aAAd,2BACA,wBAAQA,MAAM,aAAd,2BACA,wBAAQA,MAAM,aAAd,8BAEF,uBACA,cAACue,GAAA,EAAD,CAAWC,QAAQ,KAAnB,gCACA,cAACE,GAAA,EAAD,CACE5Z,KAAK,aACLhF,GAAG,cACHqG,YAAY,GACZpG,SAAU+d,IAEZ,uBACA,cAACS,GAAA,EAAD,CAAWC,QAAQ,WAAnB,sCACA,eAACC,GAAA,EAAD,CACE3e,GAAG,WACHgF,KAAK,WACL/E,SAAUie,EAHZ,UAKE,wBAAQhe,MAAO2d,IACf,wBAAQ3d,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,6BAEF,uBACA,uBACA,cAAC,GAAD,CACE9C,KAAK,SACL8C,MAAM,eACNrB,MAAO,CAAExB,gBAAiB,UAAWpI,MAAO,SAH9C,4CAWC,kCCjGEua,gBA3GM,SAAC,GAAiB,IAAfnI,EAAc,EAAdA,QAAc,EACV/N,mBAAS,MADC,mBAC7B7F,EAD6B,KACtBqnB,EADsB,KAE9BC,EAAWC,eAFmB,EAGIC,cAAY,gBAAGpI,EAAH,EAAGA,KAAMF,EAAT,EAASA,KAAT,MAAqB,CACvEmF,KAAMjF,EAAKmF,SACXnF,KAAMA,EAAKA,KACX4F,UAAW5F,EAAK4F,UAChB9F,KAAMA,EAAKA,SAJLmF,EAH4B,EAG5BA,KAAMjF,EAHsB,EAGtBA,KAAM4F,EAHgB,EAGhBA,UAAW9F,EAHK,EAGLA,KA6F/B,OApCAiC,qBAAU,WACRmG,EAAShD,GAAe,eACvB,CAACgD,IAGJnG,qBAAU,WACR,GAAI6D,EAEF,OAAkC,MAA9BA,EAAU/hB,SAASmoB,YACrB/D,EAAS,wBAIXA,EAAS,0CAIPjI,IACFxc,QAAQC,IAAI,8DACZD,QAAQC,IAAIuc,GACZkI,EAASR,SAEV,CAAC1H,EAAM4F,EAAWsC,IAGrBnG,qBAAU,WACR,GAAIjC,EAAM,CACRtL,EAAQhC,KAAK,KACb,IACEqV,aAAaQ,QAAQ,OAAQzS,KAAKY,UAAUsJ,IAC5C,MAAO9M,GACPxP,QAAQC,IAAI,mCAGf,CAAC+Q,EAASsL,IAGX,cAAC,GAAD,CACEvV,KAAK,WACL0a,KAAMA,EACN7X,SA1Fa,SAAC4F,GAAO,IAAD,EACEA,EAAEC,OAAlB5F,EADc,EACdA,MAAO8E,EADO,EACPA,KACf+V,EACElD,GAAY,CACVC,KAAM,WACN1f,IAAK4M,EACL9E,YAqFF4Z,SA/Ea,SAACjU,GAChBA,EAAEsV,iBADoB,IAEdlD,EAA8CH,EAA9CG,SAAUC,EAAoCJ,EAApCI,SAAUM,EAA0BV,EAA1BU,gBAAiBxT,EAAS8S,EAAT9S,KAE7C,IAAI,CAACiT,EAAUC,EAAUM,EAAiBxT,GAAM6K,SAAS,IAMzD,OAAIqI,IAAaM,GACfsC,EAAS,qFACTC,EAASlD,GAAY,CAAEC,KAAM,WAAY1f,IAAK,WAAY8H,MAAO,WACjE6a,EACElD,GAAY,CAAEC,KAAM,WAAY1f,IAAK,kBAAmB8H,MAAO,OAK7DgY,EAASxf,OAAS,GAAKwf,EAASxf,OAAS,GAQlC,YAATsM,GAA+B,cAATA,GACxB8V,EAAS,8EACTC,EAASlD,GAAY,CAAEC,KAAM,WAAY1f,IAAK,OAAQ8H,MAAO,YAK/D6a,EAAS/C,GAAS,CAAEC,WAAUC,WAAUlT,WAdtC8V,EAAS,mHACTC,EAASlD,GAAY,CAAEC,KAAM,WAAY1f,IAAK,WAAY8H,MAAO,WACjE6a,EACElD,GAAY,CAAEC,KAAM,WAAY1f,IAAK,kBAAmB8H,MAAO,OAlBjE4a,EAAS,qEA2ETrnB,MAAOA,OChGEqrB,GARM,WACnB,OACE,cAAC,GAAD,UACE,cAAC,GAAD,O,soCCDN,IAAMC,GAAoB5K,KAAOC,IAAV,MAsIR4K,GAtEU,WAAO,IAAD,EACC1lB,mBAAS,IADV,mBACtB2lB,EADsB,KACVC,EADU,OAEG5lB,mBAAS,IAFZ,mBAEtB6lB,EAFsB,KAEZC,EAFY,OAGH9lB,qBAHG,mBAGtBpB,EAHsB,KAGfylB,EAHe,KAK7B/I,qBAAU,WACR3e,IACAopB,OAGF,IAIMppB,EAAU,WACd,IAAMS,EAAWZ,IAAMC,IAAI,iBAC3BqpB,EAAY1oB,EAASic,OAEjB0M,EAAY,WAChB,IAAMC,EAAM,UAAY,CAAEH,YACpBzoB,EAAWZ,IAAMC,IAAIupB,GAC3BJ,EAAQxoB,EAASic,KAAKpS,OAexB,OACE,cAACwe,GAAD,UACE,qCACE,uBACA,uBACA,oBAAI/e,GAAG,QAAP,0BACA,qBAAKnB,MAAO,CAAE7D,OAAQ,SAAtB,SACE,uBACE8e,SArBG,SAACjU,GACZA,EAAEsV,iBACF,IAAMxH,EAAc,CAClBzb,MAAOA,GAGTpC,IAAMoB,OAAO,UAAW,CAAEioB,WAAUxL,gBAAe7c,MAAK,SAACN,GACnC,SAAhBA,EAAIzD,SACNwsB,MAAM,6CAcF1gB,MAAO,CAAE5C,UAAW,MAAOqZ,WAAY,SAFzC,UAIE,cAACmJ,GAAA,EAAD,CAAWC,QAAQ,QAAnB,0BACA,eAACC,GAAA,EAAD,CAAc3e,GAAG,QAAQgF,KAAK,QAAQ/E,SAtC3B,SAAC4F,GACpB8X,EAAS9X,EAAEC,OAAO5F,QAqCV,UACE,wBAAQA,MAAOhI,IAEd+mB,EAAWtmB,KAAI,SAACgY,GAAD,OACd,wBAAQzQ,MAAOyQ,EAAOpQ,KAAtB,SAA6BoQ,EAAO3L,aAGxC,uBAEA,wBACE5H,KAAK,SACL8C,MAAM,eACNrB,MAAO,CAAExB,gBAAiB,UAAWpI,MAAO,SAH9C,iD,otDCzHZ,IAAMuqB,GAA0BrL,KAAOC,IAAV,MACvB+I,GAAsBhJ,KAAOC,IAAV,MAanBgJ,GAAWjJ,KAAOC,IAAV,MAORqL,GAA6BtL,KAAOC,IAAV,MAyKjBsL,GA1GY,SAAC,GAAe,IACnCrM,EADkC,EAAZhG,MACJzW,OAAOyc,UADS,EAEhB/Z,mBAAS,IAFO,mBAEjC0L,EAFiC,KAE3B2a,EAF2B,OAGJrmB,mBAAS,IAHL,mBAGjCsmB,EAHiC,KAGrBC,EAHqB,OAIVvmB,oBAAS,GAJC,mBAIxBqb,GAJwB,WAKxCC,qBAAU,YACO,uCAAG,4BAAA/e,EAAA,6DAChB8e,GAAW,GADK,kBxBtEYxB,GAAOpd,IAAIJ,GAAK,uBwBsE5B,OAIde,GADIA,EAHU,QAIMuB,KACpB4nB,EAAcnpB,GALA,gDAOdL,QAAQC,IAAR,MACAqe,GAAW,GARG,yDAAH,qDAWfE,KACC,IAsCH,OACE,cAAC2K,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAACC,GAAD,UACE,qCACE,sBAAK5gB,MAAO,CAAE5C,UAAW,SAAzB,UACE,oBAAI4C,MAAO,CAAEzD,WAAY,QAAzB,uCACA,uBACA,uBACE0e,SA1CH,SAACjU,GACZA,EAAEsV,iBACF,IAAMxH,EAAc,CAClB3O,KAAMA,GAER3O,QAAQC,IAAI0O,GACZ3O,QAAQC,IAAI+c,GxBnFc,SAACM,EAAaN,GAAd,OAC5BF,GAAO/b,KAAKzB,GAAK,4BAA6B,CAAEge,cAAaN,cwBmF3DyM,CAAenM,EAAaN,GAAWvc,MAAK,SAAUmB,QAoCxC4G,MAAO,CAAE5C,UAAW,MAAOqZ,WAAY,SAFzC,UAIE,cAACmJ,GAAA,EAAD,CAAWC,QAAQ,OAAnB,gCACA,cAACC,GAAA,EAAD,CAAc3e,GAAG,OAAOgF,KAAK,QAAQ/E,SAlDjC,SAAC4F,GACnB8Z,EAAQ9Z,EAAEC,OAAO5F,QAiDH,SACG0f,EAAWjnB,KAAI,SAACwH,GAAD,OACd,wBAAQD,MAAOC,EAAKI,KAApB,SAA2BJ,EAAK6E,YAGpC,uBACA,cAAC,GAAD,CACE5H,KAAK,SACLyB,MAAO,CACLxB,gBAAiB,UACjBpI,MAAO,QACPgH,UAAW,OACXlB,MAAO,SANX,4CAaJ,uBACA,oBAAI8D,MAAO,CAAEzD,WAAY,QAAzB,mDACA,8BACE,wBAAO4E,GAAG,OAAV,UACE,gCACE,6BApDI,CAAC,qBAAO,4BAEPrH,KAAI,SAACP,EAAK0Q,GAC7B,OAAO,6BAAiB1Q,EAAIimB,eAAZvV,UAmDJ,gCA/CP8W,EAAWjnB,KAAI,SAACwH,GAAD,OACpB,+BACE,6BAAKA,EAAK6E,OACV,6BAAK7E,EAAK8E,gBAFH9E,EAAKI,4B,o3BCxIpB,IAAMwf,GAAsB5L,KAAOC,IAAV,MACnBuI,GAAuBxI,KAAOC,IAAV,MAapBwI,GAAYzI,KAAOC,IAAV,MAQT4L,GAAkB7L,KAAOC,IAAV,MAiGN6L,GAnFQ,SAAC,GAAe,IAC/B5M,EAD8B,EAAZhG,MACAzW,OAAOyc,UADK,EAEZ/Z,mBAAS,IAFG,mBAE7B0L,EAF6B,KAEvB2a,EAFuB,OAGLrmB,mBAAS,IAHJ,mBAG7B2L,EAH6B,KAGhBib,EAHgB,KAW9BtmB,EAAO,uCAAG,WAAOiM,GAAP,SAAAhQ,EAAA,6DACdgQ,EAAEsa,iBADY,SAEE7M,GAAWD,EAAWrO,EAAMC,GAF9B,cAGJhN,KAAK4W,OAAOuR,aAHR,2CAAH,sDAUb,OAAK/M,EAEH,cAAC0M,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAACC,GAAD,UACE,gCACE,2DAEA,sBACEhD,IAAI,aACJ7kB,KAAK,qDAEP,sBACE6kB,IAAI,aACJ7kB,KAAK,gFAGP,sBACE6kB,IAAI,aACJ7kB,KAAK,uGAGP,uBAAM6H,GAAG,QAAQgc,MAAM,8BAA8BtF,OAAO,GAA5D,UACE,2BAAUsF,MAAM,aAAhB,UACE,uBAAOiB,IAAI,OAAX,uCACA,uBACE7f,KAAK,QACL4C,GAAG,OACHgF,KAAK,OACLqB,YAAY,kCACZkW,KAAK,KACLW,KAAK,MACLjd,SAjDG,SAAC4F,GACpB8Z,EAAQ9Z,EAAEC,OAAO5F,QAiDDA,MAAO8E,OAIX,2BAAUgX,MAAM,aAAhB,UACE,uBAAOiB,IAAI,aAAX,wCACA,0BACEjd,GAAG,cACHgF,KAAK,cACLuX,KAAK,KACLW,KAAK,MACL7W,YAAY,kCACZpG,SA3DG,SAAC4F,GACpBqa,EAAQra,EAAEC,OAAO5F,QA2DDA,MAAO+E,OAIX,cAAC,GAAD,CAAQ+W,MAAM,KAAKnD,MAAI,EAAC9d,MAAM,OAAOnB,QAASA,EAA9C,wCAnDS,qF,oKCvDzB,IAAMymB,GAAclM,KAAOC,IAAV,MACXkM,GAAcnM,KAAOC,IAAV,MAwIFmM,GAvIA,SAAC,GAAe,IAAblT,EAAY,EAAZA,MACVkE,EAAclE,EAAMzW,OAAO2a,YAC3B8B,EAAYhG,EAAMzW,OAAOyc,UACzBR,EAAOxF,EAAMzW,OAAOic,KAHE,EAIUvZ,mBAAS,IAJnB,mBAIrB8W,EAJqB,KAIRoQ,EAJQ,OAKElnB,oBAAS,GALX,mBAKrBob,EALqB,KAKZC,EALY,KAoB5B,OAdAC,qBAAU,YACO,uCAAG,4BAAA/e,EAAA,6DAChB8e,GAAW,GADK,kBAGOb,GAAUvC,GAHjB,OAGV7a,EAHU,OAIdL,QAAQC,IAAI,OAASib,GACrB7a,EAAWA,EAASuB,KACpBuoB,EAAe9pB,GAND,kDAQdie,GAAW,GARG,0DAAH,qDAWfE,KACC,CAACtD,IACCmD,EAGAtE,GAAsC,IAAvBA,EAAY1X,OAMnB,eAATma,EAEA,8BACE,cAACyN,GAAD,UACE,gCACE,4BACE,iCACE,oBAAIzhB,MAAO,CAAE5C,UAAW,OAAQqZ,WAAY,SAA5C,0CAKJ,8BACGlF,GACCA,EAAYzX,KAAI,SAAC8c,GACf,IAAIvf,EACF,WACAqb,EACA,IACA8B,EACA,IACAoC,EAAElV,KACF,IACAsS,EACF,OACE,cAAC4N,GAAA,EAAD,CAAW5hB,MAAO,CAAE9D,MAAO,QAASC,OAAQ,SAA5C,SACE,cAAC,IAAD,CAAM3C,GAAInC,EAAV,SACE,cAACwqB,GAAA,EAAD,CAAeC,QAAM,EAAC5e,IAAI,IAAI5J,KAAK,IAAIue,QAAM,EAA7C,SACGjB,EAAElV,uBAWP,eAATsS,EAEP,8BACE,cAACyN,GAAD,UACE,gCACE,4BACE,iCACE,oBAAIzhB,MAAO,CAAE5C,UAAW,OAAQqZ,WAAY,SAA5C,8BAGJ,8BACGlF,GACCA,EAAYzX,KAAI,SAAC8c,GACf,IAAIvf,EACF,YACAqb,EACA,IACA8B,EACA,IACAoC,EAAElV,KACF,IACAsS,EACE+N,EACF,WACArP,EACA,IACA8B,EACA,IACAoC,EAAElV,KACF,IACAsS,EACF,OACE,gCACE,cAAC4N,GAAA,EAAD,CAAW5hB,MAAO,CAAE9D,MAAO,QAASC,OAAQ,SAA5C,SACE,eAAC0lB,GAAA,EAAD,CAAeC,QAAM,EAAC5e,IAAI,IAAI5J,KAAK,IAAIue,QAAM,EAA7C,UACGjB,EAAElV,KACH,eAAC,IAAD,CAAMlI,GAAInC,EAAV,UACG,IACD,cAAC,GAAD,CACE2I,MAAO,CACLxB,gBAAiB,QACjBpI,MAAO,QACPqgB,WAAY,OAJhB,sCAQU,OACJ,SAGZ,8BACE,eAAC,IAAD,CAAMjd,GAAIuoB,EAAV,UACE,cAAC,GAAD,CAAQ/hB,MAAO,CAAE9D,MAAO,QAASC,OAAQ,SAAzC,8CAEU,6BAtD3B,EA3CH,8BACE,mBAAG6D,MAAO,CAAEyW,WAAY,SAAxB,+EALG,cAAC+K,GAAD,oC,iKC1BX,IAAMQ,GAAgB1M,KAAOC,IAAV,MAOE0M,G,kDACnB,WAAY3rB,GAAQ,IAAD,8BACjB,cAAMA,IAMRinB,aAAe,SAACvW,GACd,EAAKhB,SAAS,CAAEkc,SAAUlb,EAAEC,OAAO5F,SARlB,EAsBnB8gB,aAAe,SAACnb,GACdA,EAAEob,gBAEF,IAAMC,EAAiB,CACrBH,SAAU,EAAK1c,MAAM0c,UAEvBjrB,IAAMsB,KAAN,YAAwB,CAAE8pB,mBAAkBpqB,MAAK,SAACN,GAChDH,QAAQC,IAAIE,GACZH,QAAQC,IAAIE,EAAIyB,WACY1B,IAAxBC,EAAIyB,KAAJ,SAEFsnB,MAAM,kFA/BV,EAAKlb,MAAQ,CACX0c,SAAU,GACV/gB,GAAI,IAJW,E,gEAUE,IAAD,OAClBlK,IAAMC,IAAN,iBAA2Be,MAAK,SAACN,GAC/B,EAAKqO,SAAS,CAAE7E,GAAIxJ,EAAImc,KAAKpS,UAE/BzK,IAAMC,IAAN,YAAsBe,MAAK,SAACN,GAC1B,IAAI2qB,EAAO,GACX,IAAK,IAAIC,KAAK5qB,EAAIyB,KAChBkpB,EAAK9b,KAAK,CAAEyD,MAAOsY,EAAGlhB,MAAO1J,EAAIyB,KAAKmpB,KAExC,EAAKvc,SAAS,CAAEkc,SAAUI,S,+BAqBpB,IACAJ,EAAaza,KAAKjC,MAAlB0c,SACR,OACE,eAACF,GAAD,WACE,qBAAKvoB,UAAU,aAAf,SACE,uBAAMwhB,SAAUxT,KAAK0a,aAArB,UACE,gDACA,0BACE1oB,UAAU,eACV0M,KAAK,WACL/E,SAAUqG,KAAK8V,eAEjB,qBAAK9jB,UAAU,aAAf,SACE,wBAAQ8E,KAAK,SAAb,kCAKL2jB,EAASpoB,KAAI,SAAC0oB,GACb,OACE,qBAAyB/oB,UAAU,UAAnC,SACG+oB,EAAQnhB,OADDmhB,EAAQvY,iB,GA7DQvK,IAAMjJ,W,8jBCL5C,IAAMgnB,GAAOnI,KAAOC,IAAV,MAUJiF,GAASlF,KAAOC,IAAV,MAgGGkN,G,4MA7Ebjd,MAAQ,CAAErE,GAAI,GAAIuhB,MAAO,I,EAIzBC,M,sBAAQ,4BAAA3rB,EAAA,+EAGmBC,IAAMC,IAAN,iBAHnB,OAGEW,EAHF,OAIJ,EAAKmO,SAAS,CACZ7E,GAAItJ,EAASic,KAAKpS,OAEpBlK,QAAQC,IAAII,EAASic,KAAKpS,MAPtB,gDASJlK,QAAQC,IAAR,MATI,yD,EAYR+lB,Y,sBAAc,8BAAAxmB,EAAA,sEAGFmK,EAAO,EAAK7K,MAAMkY,MAAMzW,OAAxBoJ,GACR3J,QAAQC,IAAI0J,GAJF,SAKalK,IAAMC,IAAN,mBAAsBiK,IALnC,OAKJtJ,EALI,OAMV,EAAKmO,SAAS,CAEZ0c,MAAO7qB,EAASuB,OAElB5B,QAAQC,IAAII,EAASuB,MAVX,kDAYV5B,QAAQC,IAAR,MAZU,0D,6DAdZ,OAAOR,IAAMC,IAAI,e,0CA6BE,IACXyrB,EAAuBlb,KAAvBkb,MAAOnF,EAAgB/V,KAAhB+V,YACfmF,IACAnF,M,mCAGAvmB,IACGsB,KAAK,SAAWkP,KAAKib,OACrBzqB,MAAK,SAAUJ,GACdL,QAAQC,IAAII,MAEbK,OAAM,SAAUtD,GACf4C,QAAQC,IAAI7C,Q,mCAIhBqC,IACGoB,OADH,UAjDQ,YAiDR,YACoBoP,KAAKtG,KACtBlJ,MAAK,SAAUJ,GAEdL,QAAQC,IAAII,MAEbK,OAAM,SAAUtD,GAEf4C,QAAQC,IAAI7C,MAEbqD,MAAK,iB,+BAIA,IAAD,OACCyqB,EAAUjb,KAAKjC,MAAfkd,MACR,OACE,eAAC,GAAD,WACE,6BAAKA,EAAMrpB,QACX,4BAAIqpB,EAAM3e,UACV,eAAC,GAAD,WACE,cAAC,IAAD,CAAMvK,GAAG,UAAT,0BACA,mBAAGuB,QAAS,kBAAM,EAAK6nB,cAAvB,0BACA,mBAAG7nB,QAAS,kBAAM,EAAK8nB,cAAvB,oC,GAvEiBpsB,a,wEC3B3B,IAAMqsB,GAAkBxN,KAAOC,IAAV,MAUNwN,GARI,WACjB,OACE,eAACD,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,Q,o3BCRN,IAAME,GAAmB1N,KAAOC,IAAV,MAChBwI,GAAYzI,KAAOC,IAAV,MAQTuI,GAAuBxI,KAAOC,IAAV,MAapB4L,GAAkB7L,KAAOC,IAAV,MAuGN0N,GAxFK,SAAC,GAAe,IAAbzU,EAAY,EAAZA,MACfkE,EAAclE,EAAMzW,OAAO2a,YAC3B8B,EAAYhG,EAAMzW,OAAOyc,UACzB9S,EAAO8M,EAAMzW,OAAO2J,KAHO,GAIpB8M,EAAMzW,OAAOic,KACAvZ,mBAAS,KALF,mBAK1BpB,EAL0B,KAKnBylB,EALmB,OAMFrkB,mBAAS,IANP,mBAM1B2L,EAN0B,KAMbib,EANa,KAwBjC,OAAK7M,EACA9B,EACAhR,EAEH,cAACshB,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,gCACE,2DAEA,sBACE7E,IAAI,aACJ7kB,KAAK,qDAEP,sBACE6kB,IAAI,aACJ7kB,KAAK,gFAGP,sBACE6kB,IAAI,aACJ7kB,KAAK,uGAGP,uBAAM6H,GAAG,QAAQgc,MAAM,8BAAvB,UACE,2BAAUA,MAAM,aAAhB,UACE,uBAAOiB,IAAI,OAAX,uCACA,uBACE7f,KAAK,QACL4C,GAAG,QACHgF,KAAK,QACLqB,YAAY,kCACZkW,KAAK,KACLW,KAAK,MACLjd,SAnDI,SAAC4F,GACrB8X,EAAS9X,EAAEC,OAAO5F,QAmDFA,MAAOhI,OAIX,2BAAU8jB,MAAM,aAAhB,UACE,uBAAOiB,IAAI,aAAX,wCACA,0BACEjd,GAAG,cACHgF,KAAK,cACLuX,KAAK,KACLW,KAAK,MACL7W,YAAY,kCACZpG,SA7DG,SAAC4F,GACpBqa,EAAQra,EAAEC,OAAO5F,QA6DDA,MAAO+E,OAIX,cAAC,GAAD,CAAQ+W,MAAM,KAAKnD,MAAI,EAAC9d,MAAM,OAAOnB,QA/DnC,WACd,IAAK1B,IAAU+M,EAAa,OAAOsa,MAAM,+EACzC,IAAI/oB,E9BoBsB,SAC5BkX,EACA2F,EACAnb,EACA+M,GAJ4B,OAM5BkO,GAAO/b,KAAKzB,GAAK,YAAa,CAC5B+X,kBACA2F,YACAnb,QACA+M,gB8B9BU8c,CAAexhB,EAAM8S,EAAWnb,EAAO+M,GACjDzO,EAAMA,EAAIqY,OAAOA,OAAOuR,cA4DZ,wCAnDI,qFADO,oFADF,qF,qBCMVrhB,iBAlEA,SAAC1K,GAAD,MAAY,CACzB2tB,WAAY,CACVtnB,QAAS,cACT2C,gBAAiB,QACjBpI,MAAO,QACPgG,QAAS,EACTD,OAAQ,EACRU,YAAa,GACbM,OAAQ,kBACRjB,MAAO,IACPuB,OAAQ,IACRqB,SAAU,SACVrD,UAAW,uCAEb1F,OAAQ,CACNqG,QAAS5G,EAAM6G,QAAQ,GACvBmC,gBAAiB,WAEnBkE,OAAQ,CACNtC,aAAc5K,EAAM4tB,MAAMhjB,aAC1BhK,MAAO,QACPoI,gBAAiB6kB,aAAK7tB,EAAMG,QAAQ2tB,OAAOzvB,MAAO,IAClD,UAAW,CACT2K,gBAAiB,SAEnB,UAAW,CACTA,gBAAiB,SAEnB3B,YAAarH,EAAM6G,QAAQ,GAC3Boa,WAAY,EACZva,MAAO,KAETqnB,YAAa,CACXrnB,MAAO,KAETme,OAAQ,CACNnlB,WAAY,UACZiI,OAAQ,kBACR1B,UAAW,wCACXrF,MAAO,QACPmG,WAAY,IACZkB,OAAQ,OAyBGyC,EArBI,SAAC,GAOd,EANJsjB,SAMI,EALJC,UAKI,EAJJC,aAIK,IAHLhF,EAGI,EAHJA,MAEAjf,GACI,EAFJkkB,aAEI,EADJlkB,SACI,EACwBhF,mBAAS,IADjC,mBACGiI,EADH,UAUyBgc,EAFXkF,QAAO,SAACC,GAAD,OAAUA,EAAKC,SAASC,QAAQrhB,IAAW,KAGpE,OAAO,cAACshB,GAAA,EAAD,CAAOvqB,UAAWgG,EAAQ0jB,gB,qBC1CpBjjB,QAtBA,CACb+jB,SAAU,CACR9mB,OAAQ,qBACRjI,WAAY,QACZiH,OAAQ,EACRuC,aAAc,GAEdxC,MAAO,IACPuB,OAAQ,IACRhC,UAAW,gDAaAyE,EATE,SAAC,GAAuB,IAArBgkB,EAAoB,EAApBA,KAAMzkB,EAAc,EAAdA,QACxB,OACE,eAACukB,GAAA,EAAD,CAAOvqB,UAAWgG,EAAQwkB,SAA1B,UACE,qEAAeC,KACf,wE,UCwIShkB,SAxJA,iBAAO,CACpBikB,aAAc,CACZ1oB,UAAW,8CACXI,QAAS,eACT2C,gBAAiB,QACjBrC,OAAQ,EACRC,QAAS,GACTe,OAAQ,qBACRjB,MAAO,IACPuB,OAAQ,KAEV2mB,gBAAiB,CACftlB,SAAU,OACVulB,cAAe,OACf5mB,OAAQ,IACRvB,MAAO,OACPC,OAAQ,EACRC,QAAS,EACTsC,aAAc,GACdvB,OAAQ,sBAEVmnB,QAAS,CACPpoB,MAAO,OACPuB,OAAQ,GACR4C,SAAU,QAEZkkB,UAAW,CACTpnB,OAAQ,qBACRf,QAAS,EACTD,OAAQ,GACRqoB,UAAW,SACXhmB,gBAAiB,WACjBpI,MAAO,QACPqgB,WAAY,MACZ5Z,YAAa,MACbpB,UAAW,+CAEbgpB,MAAO,CACLtnB,OAAQ,qBACRf,QAAS,MACTD,OAAQ,OACRqoB,UAAW,OACXpkB,aAAc,GACdqW,WAAY,MACZ5Z,YAAa,EACbpB,UAAW,uCAEbipB,UAAW,CACTvnB,OAAQ,qBACRf,QAAS,EACTD,OAAQ,GACRqoB,UAAW,OACXpkB,aAAc,GACdqW,WAAY,EACZ5Z,YAAa,MACbpB,UAAW,+CAEbkpB,IAAK,CACHtkB,SAAU,OA8FCH,EA1FF,SAAC,GAAgD,IAA9C0kB,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,iBAAkBplB,EAAc,EAAdA,QAEzCqlB,EAAM,EAFiD,EAG7BrqB,mBAAS,IAHoB,mBAGpD6pB,EAHoD,KAG3CS,EAH2C,KAIvDC,EAActlB,IAAMulB,YAalBC,EAAoB,WACxBN,EAAYN,GACZS,EAAW,KAObhP,qBAAU,WAHRiP,EAAYG,eAAe,CAAEC,SAAU,cAQzC,IAAMC,EAAeR,EAAiB/qB,KAAI,SAACwrB,GACzC,MAAqB,WAAjBA,EAASC,IAGT,oBAAgB9rB,UAAWgG,EAAQ8kB,UAAnC,SACE,cAACP,GAAA,EAAD,UAAQsB,EAAShB,WADVQ,KAIe,OAAjBQ,EAASC,IAGhB,oBAAgB9rB,UAAWgG,EAAQglB,MAAnC,SACE,eAACe,GAAA,EAAD,WACGF,EAASC,IADZ,IACkBD,EAASG,KACzB,uBACA,cAACD,GAAA,EAAD,CAAK/rB,UAAWgG,EAAQklB,IAAxB,SAA8BW,EAAShB,cAJlCQ,KAWT,aADA,CACA,MAAgBrrB,UAAWgG,EAAQilB,UAAnC,SACE,eAACc,GAAA,EAAD,WACGF,EAASC,IADZ,IACkBD,EAASG,KACzB,uBACA,cAACD,GAAA,EAAD,CAAK/rB,UAAWgG,EAAQklB,IAAxB,SAA8BW,EAAShB,cAJlCQ,QAWf,OACE,eAACU,GAAA,EAAD,CAAK/rB,UAAWgG,EAAQ0kB,aAAxB,UACE,qBAAI1qB,UAAWgG,EAAQ2kB,gBAAvB,UACGiB,EACD,qBACErlB,MAAO,CAAE0lB,MAAO,OAAQC,MAAO,QAC/B9qB,IAAK,SAAC+qB,GACJZ,EAAcY,QAIpB,8BACE,uBACEnsB,UAAWgG,EAAQ6kB,QACnBne,KAAK,UACL+U,aAAa,MACb1T,YAAY,eACZnG,MAAOijB,EACPljB,SA5EmB,SAAC4F,GAC1B+d,EAAW/d,EAAEC,OAAO5F,QA4EdwkB,WAzEe,SAAC7e,GACH,KAAfA,EAAE8e,UACJZ,eC8JSa,G,kDAtOb,WAAYzvB,GAAQ,IAAD,8BACjB,cAAMA,IAgBR0vB,oBAAsB,WAAO,IAAD,EACI,EAAKxgB,MAA3BygB,EADkB,EAClBA,OAAQzR,EADU,EACVA,UAChByR,EAAOC,GAAG,WAAW,WACnB1uB,QAAQC,IAAI,qCACZwuB,EAAOC,GAAG,MAAM,SAACC,GAEf,EAAKC,2BAA2BD,GAAK,MAEvCF,EAAOC,GAAG,QAAQ,SAACC,GAEjB,EAAKC,2BAA2BD,GAAK,MAEvCF,EAAOI,KAAK,WAAY7R,MAE1ByR,EAAOC,GAAG,SAAS,SAACtxB,GAClB,EAAKwxB,2BAA2B,qFAAoB,OAhCrC,EAoCnBE,0BAA4B,SAAChC,GAAa,IAChC2B,EAAW,EAAKzgB,MAAhBygB,OACFR,GAAO,IAAIc,MAAOC,qBACxBP,EAAOI,KACL,OACAzc,KAAKY,UAAU,CAAEic,MAAO,EAAKnwB,MAAMmwB,MAAOnC,UAASmB,WAzCpC,EA6CnBW,2BAA6B,SAACD,EAAKO,GAAY,IACrC7B,EAAqB,EAAKrf,MAA1Bqf,iBACJ8B,EAAa,CAAEpB,IAAK,GAAIjB,QAAS,IAErC,GAAIoC,EAOF,OALAC,EAAWpB,IAAM,SACjBoB,EAAWrC,QAAU6B,OACrB,EAAKngB,SAAS,CACZ6e,iBAAkBA,EAAiB+B,OAAOD,KATF,MAcb/c,KAAKC,MAAMsc,GAApCM,EAdsC,EActCA,MAAOnC,EAd+B,EAc/BA,QAASmB,EAdsB,EActBA,KAClBgB,IAAU,EAAKnwB,MAAMmwB,MACvBE,EAAWpB,IAAM,KAEjBoB,EAAWpB,IAAMkB,EAEnBE,EAAWrC,QAAUA,EACrBqC,EAAWlB,KAAOA,EAClB,EAAKzf,SAAS,CACZ6e,iBAAkBA,EAAiB+B,OAAOD,MAlE5C,EAAKnhB,MAAQ,CACXkZ,MAAO,GACPiF,cAAc,EACdF,WAAW,EACXoD,aAAc,EACdnU,YAAa,GACboU,UAAW,GACXtS,UAAW,GACXqQ,iBAAkB,CAChB,CAAEU,IAAK,SAAUjB,QAAS,0EAE5B2B,OAAQ,MAbO,E,gEAyEE,IAAD,OACZ5uB,EAAMoQ,KAAKnR,MAAM8E,SAAS2rB,SAASlX,MAAM,KACzC6C,EAAcrb,EAAI,GAClByvB,EAAYzvB,EAAI,GAChBmd,EAAYnd,EAAI,GAChB4uB,EAASe,KAAG,IAAD,OAAKtU,EAAL,YAAoBoU,GAAa,CAChDG,WAAY,CAAC,WACbC,UAAU,IAEZzf,KAAKzB,SACH,CACEigB,SACAvT,cACAoU,YACAtS,cAEF,kBAAM,EAAKwR,2B,+BAIL,IAAD,EACsDve,KAAKjC,MAA1DkZ,EADD,EACCA,MAAOmG,EADR,EACQA,iBAAkBlB,EAD1B,EAC0BA,aAAcnP,EADxC,EACwCA,UAC/C,OACE,sBAAKrT,GAAG,YAAYnB,MAAO,CAAEnE,QAAS,QAAtC,UACE,cAAC,GAAD,CAAY6iB,MAAOA,EAAOiF,aAAcA,IAExC,sBAAKxiB,GAAG,YAAR,UACE,cAAC,GAAD,CAAU+iB,KAAM1P,IAChB,cAAC,GAAD,CACEoQ,YAAand,KAAK6e,0BAClBzB,iBAAkBA,c,GAxGPnlB,IAAMjJ,W,wECA7B,IAAM0wB,GAA0B7R,KAAOC,IAAV,MA0Hd6R,GAxHY,SAAC,GAAe,IAAb5Y,EAAY,EAAZA,MACtBkE,EAAclE,EAAMzW,OAAO2a,YAC3B8B,EAAYhG,EAAMzW,OAAOyc,UACzB9S,EAAO8M,EAAMzW,OAAO2J,KACpBsS,EAAOxF,EAAMzW,OAAOic,KAC1Bxc,QAAQC,IAAIib,GACZlb,QAAQC,IAAI+c,GACZhd,QAAQC,IAAIuc,GACZxc,QAAQC,IAAIiK,GAR4B,MASAjH,mBAAS,IATT,mBASjC4sB,EATiC,KASnBC,EATmB,OAUV7sB,oBAAS,GAVC,mBAUxBqb,GAVwB,WAiCxC,GAtBAC,qBAAU,YACO,uCAAG,8BAAA/e,EAAA,yDAChB8e,GAAW,GADK,SAGD,eAAT9B,EAHU,iCnCmDMnF,EmC/CenN,EnCgDzC4S,GAAOpd,IAAIJ,GAAK,aAAe+X,GmCpDX,OAKZhX,GADIA,EAJQ,QAKQuB,KACpBkuB,EAAgBzvB,GANJ,2BAOM,eAATmc,EAPG,kCAQSkB,GAAcV,GARvB,QASZ3c,GADIA,EARQ,QASQuB,KACpBkuB,EAAgBzvB,GAVJ,0DAadie,GAAW,GAbG,kCnCmDK,IAACjH,ImCnDN,qBAAH,qDAgBfmH,KACC,CAACtU,KAIC2lB,GAAiC,IAAjBA,EACnB,OACE,8BACE,mBAAGrnB,MAAO,CAAEyW,WAAY,SAAxB,sDAGN,IAAMR,EAAe,SAACsR,EAAYC,GAChChwB,QAAQC,IAAI8vB,EAAa,IAAMC,GAC/B,InCsD2B3Y,EAAiBuG,EmCtDxCzd,GnCsDuBkX,EmCtDF0Y,EnCsDmBnS,EmCtDPoS,EnCuDvClT,GAAOjc,OAAOvB,GAAK,YAAa,CAAEsC,KAAM,CAAEyV,kBAAiBuG,oBmCpDzDzd,EAAMA,EAAIyB,KACV5B,QAAQC,IAAIE,IAWd,OACE,cAACwvB,GAAD,UACE,gCACE,4BACE,iCACE,oBAAInnB,MAAO,CAAE5C,UAAW,OAAQqZ,WAAY,SAA5C,0CAGJ,8BACG4Q,GACCA,EAAavtB,KAAI,SAAC8c,GAChB,IAAIR,EAAO,WAAaQ,EAAElV,KAAO,IAAM8S,EAAY,IAAM9S,EACrD2U,EACF,mBAAqBO,EAAElV,KAAO,IAAM8S,EAAY,IAAM9S,EACxD,MAAa,eAATsS,EAEA,cAAC4N,GAAA,EAAD,CAAW5hB,MAAO,CAAE9D,MAAO,QAASC,OAAQ,SAA5C,SACE,cAAC,IAAD,CAAM3C,GAAI4c,EAAV,SACE,cAACyL,GAAA,EAAD,CAAeC,QAAM,EAAC5e,IAAI,IAAI5J,KAAK,IAAIue,QAAM,EAA7C,SACE,+CAEE,+BACGjB,EAAEvd,MACH,0BAJJ,gBAMK,6BAAKud,EAAExQ,uBAMF,eAAT4N,EAEP,cAAC4N,GAAA,EAAD,CAAW5hB,MAAO,CAAE9D,MAAO,QAASC,OAAQ,SAA5C,SACE,cAAC0lB,GAAA,EAAD,CAAeC,QAAM,EAAC5e,IAAI,IAAI5J,KAAK,IAAIue,QAAM,EAA7C,SACE,+CACK,6BAAKjB,EAAEvd,QADZ,gBAEK,6BAAKud,EAAExQ,cACV,6BACE,cAAC,IAAD,CAAM5M,GAAI6c,EAAV,SACE,cAAC,GAAD,CAAQrW,MAAO,CAAEyW,WAAY,QAA7B,8BAGJ,6BACE,cAAC,GAAD,CACEzW,MAAO,CAAEyW,WAAY,QACrB1b,QAAS,kBACPkb,EAAaW,EAAE/H,gBAAiB+H,EAAElV,OAHtC,wCAbL,a,o3BC3FrB,IAAMoc,GAAuBxI,KAAOC,IAAV,MAapBwI,GAAYzI,KAAOC,IAAV,MAQT4L,GAAkB7L,KAAOC,IAAV,MAefkS,GAAkBnS,KAAOC,IAAV,MAiGNmS,GA/FI,SAAC,GAAe,IAAblZ,EAAY,EAAZA,MACdgZ,EAAehZ,EAAMzW,OAAOyvB,aAC5BhT,EAAYhG,EAAMzW,OAAOyc,UACzB9S,EAAO8M,EAAMzW,OAAO4vB,WAHM,EAINltB,mBAAS,IAJH,mBAIzBpB,EAJyB,KAIlBylB,EAJkB,OAKDrkB,mBAAS,IALR,mBAKzB2L,EALyB,KAKZib,EALY,KAe1BtmB,EAAO,uCAAG,sBAAA/D,EAAA,yDACTqC,GAAU+M,EADD,yCACqBsa,MAAM,gFAD3B,uBAEEvL,GACdqS,EACAhT,EACAnb,EACA+M,EACA1E,GAPY,yDAAH,qDAgBb,OAAK8S,EACAgT,EACA9lB,EAEH,cAAC+lB,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,gCACE,2DAEA,sBACEtJ,IAAI,aACJ7kB,KAAK,qDAEP,sBACE6kB,IAAI,aACJ7kB,KAAK,gFAGP,sBACE6kB,IAAI,aACJ7kB,KAAK,uGAGP,uBAAM6H,GAAG,QAAQgc,MAAM,8BAAvB,UACE,2BAAUA,MAAM,aAAhB,UACE,uBAAOiB,IAAI,OAAX,uCACA,uBACE7f,KAAK,QACL4C,GAAG,QACHgF,KAAK,QACLqB,YAAY,kCACZkW,KAAK,KACLW,KAAK,MACLjd,SA3DI,SAAC4F,GACrB8X,EAAS9X,EAAEC,OAAO5F,OAClB7J,QAAQC,IAAI4B,IA0DIgI,MAAOhI,OAIX,2BAAU8jB,MAAM,aAAhB,UACE,uBAAOiB,IAAI,aAAX,wCACA,0BACEjd,GAAG,cACHgF,KAAK,cACLuX,KAAK,KACLW,KAAK,MACL7W,YAAY,kCACZpG,SApEG,SAAC4F,GACpBqa,EAAQra,EAAEC,OAAO5F,OACjB7J,QAAQC,IAAI2O,IAmEI/E,MAAO+E,OAIX,cAAC,GAAD,CAAQ+W,MAAM,KAAKnD,MAAI,EAAC9d,MAAM,OAAOnB,QAASA,EAA9C,wCAnDI,qFADQ,oFADH,qF,soCChEzB,IAAM6sB,GAAiBtS,KAAOC,IAAV,MA8QLsS,GA9MG,SAAC,GAAe,IAAbrZ,EAAY,EAAZA,MACbkE,EAAclE,EAAMzW,OAAO2a,YAC3B8B,EAAYhG,EAAMzW,OAAOyc,UACzBR,EAAOxF,EAAMzW,OAAO+vB,UAHK,EAILrtB,mBAAS,IAJJ,mBAIxBikB,EAJwB,KAIjBC,EAJiB,OAKLlkB,mBAAS,IALJ,mBAKxBpB,EALwB,KAKjBylB,EALiB,OAMOrkB,mBAAS,IANhB,mBAMxB2L,EANwB,KAMX6X,EANW,OAOPxjB,mBAAS,IAPF,mBAOxBstB,EAPwB,KAOlBC,EAPkB,OAQTvtB,mBAAS,IARA,mBAQxBwtB,EARwB,KAQnBC,EARmB,OASDztB,oBAAS,GATR,mBASxBob,EATwB,KASfC,EATe,KAW/BC,qBAAU,YACO,uCAAG,4BAAA/e,EAAA,6DAChB8e,GAAW,GADK,kBAGOlB,GAAYlC,GAHnB,OAId7a,GADIA,EAHU,QAIMuB,KACpBulB,EAAS9mB,GALK,gDAOdie,GAAW,GAPG,yDAAH,qDAUfE,KACC,CAACtD,IAEJ,IAaM4M,EAAI,uCAAG,WAAOtY,GAAP,eAAAhQ,EAAA,6DACXgQ,EAAEsV,iBACIxH,EAAc,CAClBzb,MAAOA,EACP+M,YAAaA,EACb2hB,KAAMA,EACNE,IAAKA,GAEPzwB,QAAQC,IAAI4B,EAAQ,IAAM+M,EAAc,IAAM2hB,EAAO,IAAME,GARhD,SASKpT,GAAWnC,EAAaoC,GAT7B,cAUD1b,KAVC,2CAAH,sDAyBV,IAAKyc,EACH,OAAO,cAAC+R,GAAD,mCAGT,IAAMO,EAAa,WACjB,OAAKzJ,GAA0B,IAAjBA,EAAM7kB,OAQhB6kB,GACAA,EAAM5kB,KAAI,SAAC8c,GACT,IAAMvf,EACJ,cAAgBuf,EAAElE,YAAc,IAAMkE,EAAElV,KAAO,IAAM8S,EAEvD,OACE,+BACE,6BAAKoC,EAAElV,OACP,6BAAKkV,EAAEzQ,OACP,6BAAKyQ,EAAEwR,YACP,6BAAKxR,EAAEyR,aACP,6BACE,cAAC,IAAD,CAAM7uB,GAAInC,EAAV,SACE,cAAC,GAAD,qCAPGuf,EAAElV,SAZf,8BACE,mBAAG1B,MAAO,CAAEyW,WAAY,SAAxB,uDA2BR,MAAa,eAATzC,EAEA,cAAC4T,GAAD,UACE,qCACE,uBACA,uBACA,oBAAIzmB,GAAG,QAAP,kBACA,qBAAKnB,MAAO,CAAE7D,OAAQ,SAAtB,SACE,uBAAOgF,GAAG,OAAV,SACE,gCACE,+BACG,IACD,gCAAQgnB,eAMhB,uBACElN,SAAUqE,EACVtf,MAAO,CAAE5C,UAAW,MAAOqZ,WAAY,SAFzC,UAIE,cAACmJ,GAAA,EAAD,CAAWC,QAAQ,QAAnB,+BACA,cAACE,GAAA,EAAD,CACE5Z,KAAK,QACLhF,GAAG,QACHqG,YAAY,GACZpG,SApGS,SAAC4F,GACpB8X,EAAS9X,EAAEC,OAAO5F,UAqGV,uBACA,cAACue,GAAA,EAAD,CAAWC,QAAQ,cAAnB,+BACA,cAACE,GAAA,EAAD,CACE5Z,KAAK,aACLhF,GAAG,cACHqG,YAAY,GACZpG,SAzGe,SAAC4F,GAC1BiX,EAAejX,EAAEC,OAAO5F,UA0GhB,uBACA,cAACue,GAAA,EAAD,CAAWC,QAAQ,OAAnB,oBACA,eAACC,GAAA,EAAD,CAAc3e,GAAG,OAAOgF,KAAK,OAAO/E,SA1G1B,SAAC4F,GACnBghB,EAAQhhB,EAAEC,OAAO5F,QAyGT,UACE,wBAAQA,MAAO0mB,IACf,wBAAQ1mB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,mBAEF,uBACA,cAACue,GAAA,EAAD,CAAWC,QAAQ,MAAnB,oBACA,eAACC,GAAA,EAAD,CAAc3e,GAAG,MAAMgF,KAAK,MAAM/E,SAxHzB,SAAC4F,GAClBkhB,EAAOlhB,EAAEC,OAAO5F,QAuHR,UACE,wBAAQA,MAAO4mB,IACf,wBAAQ5mB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,mBAEF,uBACA,uBACA,cAAC,GAAD,CACE9C,KAAK,SACLyB,MAAO,CAAExB,gBAAiB,UAAWpI,MAAO,SAF9C,8CAUU,eAAT4d,EAEP,cAAC4T,GAAD,UACE,qCACE,uBACA,uBACA,oBAAIzmB,GAAG,QAAP,kBACA,qBAAKnB,MAAO,CAAE7D,OAAQ,SAAtB,SACE,uBAAOgF,GAAG,OAAV,SACE,gCACE,+BACG,IACD,kCAxIM,CAAC,eAAM,eAAM,2BAAQ,2BAAQ,sBAE5BrH,KAAI,SAACP,EAAK0Q,GAC7B,OAAO,6BAAiB1Q,EAAIimB,eAAZvV,MAuIDke,0BAdZ,G,o3BC1PT,IAAMnF,GAAmB1N,KAAOC,IAAV,MAChBuI,GAAuBxI,KAAOC,IAAV,MAapBwI,GAAYzI,KAAOC,IAAV,MAQT4L,GAAkB7L,KAAOC,IAAV,MAsGN+S,GAvFQ,SAAC,GAAe,IAAb9Z,EAAY,EAAZA,MAClBgZ,EAAehZ,EAAMzW,OAAOyvB,aAC5BhT,EAAYhG,EAAMzW,OAAOyc,UACzBmT,EAAanZ,EAAMzW,OAAO4vB,WAHI,EAIVltB,mBAAS,IAJC,mBAI7BpB,EAJ6B,KAItBylB,EAJsB,OAKLrkB,mBAAS,IALJ,mBAK7B2L,EAL6B,KAKhBib,EALgB,KAuBpC,OAAK7M,EACAgT,EACAG,EAEH,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,gCACE,2DAEA,sBACExJ,IAAI,aACJ7kB,KAAK,qDAEP,sBACE6kB,IAAI,aACJ7kB,KAAK,gFAGP,sBACE6kB,IAAI,aACJ7kB,KAAK,uGAGP,uBAAM6H,GAAG,QAAQgc,MAAM,8BAAvB,UACE,2BAAUA,MAAM,aAAhB,UACE,uBAAOiB,IAAI,OAAX,uCACA,uBACE7f,KAAK,QACL4C,GAAG,QACHgF,KAAK,QACLqB,YAAY,kCACZkW,KAAK,KACLW,KAAK,MACLjd,SAnDI,SAAC4F,GACrB8X,EAAS9X,EAAEC,OAAO5F,QAmDFA,MAAOhI,OAIX,2BAAU8jB,MAAM,aAAhB,UACE,uBAAOiB,IAAI,aAAX,wCACA,0BACEjd,GAAG,cACHgF,KAAK,cACLuX,KAAK,KACLW,KAAK,MACL7W,YAAY,kCACZpG,SA7DG,SAAC4F,GACpBqa,EAAQra,EAAEC,OAAO5F,QA6DDA,MAAO+E,OAIX,cAAC,GAAD,CAAQ+W,MAAM,KAAKnD,MAAI,EAAC9d,MAAM,OAAOnB,QA/DnC,WACd,IAAK1B,IAAU+M,EAAa,OAAOsa,MAAM,+EACzC,IAAI/oB,EtCkCsB,SAC5Byd,EACAvG,EACAxV,EACA+M,GAJ4B,OAM5BkO,GAAOtc,IAAIlB,GAAK,YAAa,CAC3Bse,gBACAvG,kBACAxV,QACA+M,gBsC5CUmiB,CAAef,EAAcG,EAAYtuB,EAAO+M,GAC1DzO,EAAMA,EAAIqY,OAAOA,OAAOuR,cA4DZ,wCAnDU,qFADE,oFADH,qFCyLViH,GAvNA,WACb,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAIlvB,GAAG,UAG1B,cAAC,EAAD,CACI9C,UAAWiyB,EACXF,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,UAGT,cAAC,EAAD,CACI3D,UAAWmyB,GACXJ,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,cAGT,cAAC,EAAD,CACI3D,UAAWoyB,GACbL,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,cAGP,cAAC,EAAD,CACE3D,UAAWoyB,GACXL,OAAK,EACLjyB,OAAQoyB,EACPvuB,KAAK,4BAGR,cAAC,EAAD,CACI3D,UAAWoyB,GACXL,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,6CAGR,cAAC,EAAD,CACC3D,UAAWqyB,GACXN,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,4CAGP,cAAC,EAAD,CACI3D,UAAWqyB,GACXN,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,2BAGT,cAAC,EAAD,CACI3D,UAAWsyB,GACXP,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,aAGT,cAAC,EAAD,CACI3D,UAAWuyB,GACXR,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,8BAGT,cAAC,EAAD,CACI3D,UAAW6c,GACXkV,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,cAKX,cAAC,EAAD,CACE3D,UAAWwmB,GACXuL,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,gBAGP,cAAC,EAAD,CACE3D,UAAW6lB,GACXkM,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,WAGP,cAAC,EAAD,CACE3D,UAAWupB,GACXwI,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,cAGP,cAAC,EAAD,CACE3D,UAAW+nB,GACXgK,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,8CAGP,cAAC,EAAD,CACE3D,UAAW0qB,GACXqH,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,2BAGP,cAAC,EAAD,CACE3D,UAAWmqB,GACX4H,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,+BAGP,cAAC,EAAD,CACE3D,UAAWypB,GACXsI,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,0CAGP,cAAC,EAAD,CACE3D,UAAWsnB,GACXyK,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,0CAGP,cAAC,EAAD,CACE3D,UAAWwgB,GACXuR,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,kBAGP,cAAC,EAAD,CACE3D,UAAW2mB,GACXoL,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,0CAGP,cAAC,EAAD,CACE3D,UAAWgrB,GACX+G,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,mDAGP,cAAC,EAAD,CACE3D,UAAWusB,GACXwF,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,iDAGP,cAAC,EAAD,CACE3D,UAAWqsB,GACX0F,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,0CAGP,cAAC,EAAD,CACE3D,UAAW4xB,GACXG,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,yDAGP,cAAC,EAAD,CACE3D,UAAW0wB,GACXqB,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,gDAGP,cAAC,EAAD,CACE3D,UAAWgxB,GACXe,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,iDAGP,cAAC,EAAD,CACE3D,UAAWmxB,GACXY,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,kDAGP,cAAC,EAAD,CACE3D,UAAWqvB,GACX0C,OAAK,EACLjyB,OAAQoyB,EACRvuB,KAAK,kDAGP,cAAC,EAAD,CACE3D,UAAWwyB,GACXT,OAAK,EACLjyB,OAAQ2yB,EACR9uB,KAAK,qBAEP,cAAC,IAAD,CAAUb,GAAG,mBAAmBwmB,OAAO,YCxOvCoJ,I,cAAiBC,eAEvBD,GAAeE,QAAO,SAAAluB,GAElB0P,YAAW,WAMiB,QAApB1P,EAASyc,QAIb1c,OAAOouB,SAAS,EAAG,S,IAINC,G,uKASb,OAPAC,IAAIC,KAAK,CACLC,MAAM,EACNC,MAAO,GACPC,SAAU,IACVC,OAAQ,gBAIV,cAACC,EAAA,EAAD,CAAev0B,MAAOA,EAAtB,SACI,cAAC,IAAD,CAAegT,QAAS4gB,GAAgBY,SAAS,UAAjD,SACI,cAAC,GAAD,Y,GAZevzB,a,qBClBhBwzB,IAAV,SAAUA,KAAV,iEACL,OADK,SACCC,aAAI,CAAC3R,KAAY6C,OADlB,wCAIQ+O,OAVKC,2BAAgB,CAClCpW,QACA6B,WACA/B,U,oBCCIuW,I,OAAiBC,gBACjBC,GAAQC,uBACVL,GACAM,+BAAoBC,2BAAgBL,MAExCA,GAAeM,IAAIV,IAEnBW,IAASh0B,OACL,cAAC,KAAD,CAAU2zB,MAAOA,GAAjB,SACI,cAAC,IAAMM,WAAP,UACI,cAAC,GAAD,QAGRC,SAASC,eAAe,W","file":"static/js/main.99d57ea3.chunk.js","sourcesContent":["import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  alternate: 'rgb(247, 249, 250)',\n  secondary: {\n    main: '#F9B934',\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400],\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400],\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400],\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400],\n  },\n  text: {\n    primary: '#121037',\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600],\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white,\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200],\n};\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core';\n\nimport palette from './palette';\n\nconst theme = responsiveFontSizes(\n  createMuiTheme({\n    palette,\n    typography: {\n      fontFamily: 'Lato',\n    },\n    zIndex: {\n      appBar: 1200,\n      drawer: 1100,\n    },\n    overrides: {\n      MuiButton: {\n        containedSecondary: {\n          color: 'white',\n        },\n      },\n    },\n  }),\n);\n\nexport default theme;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst RouteWithLayout = props => {\n  const { layout: Layout, component: Component, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Layout>\n          <Component {...matchProps} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string,\n};\n\nexport default RouteWithLayout;\n","import axios from 'axios';\r\n\r\n//const ip = 'http://localhost:4000';\r\nconst ip = 'http://ddiggo.iptime.org';\r\nconst cookie = {\r\n  state: ''\r\n};\r\n\r\nconst paramsPrint = (obj) => {\r\n  return;\r\n  if(obj.url !== 'undefined') {\r\n    console.log('-- url:')\r\n    console.log(obj.url);\r\n  }\r\n  if(obj.params !== 'undefined') {\r\n    console.log('-- params:')\r\n    console.log(obj.params);\r\n  }\r\n  if(obj.callback !== 'undefined') {\r\n    console.log('-- callback:')\r\n    console.log(obj.callback);\r\n  }\r\n  if(obj.error !== 'undefined') {\r\n    console.log('-- error:')\r\n    console.log(obj.error);\r\n  }\r\n  if(obj.final !== 'undefined') {\r\n    console.log('-- final:')\r\n    console.log(obj.final);\r\n  }\r\n};\r\n\r\nexport const getSession = async(error) => {\r\n  try{\r\n    return await axios.get(ip + '/auth/session', { withCredentials: true })\r\n  }\r\n  catch (e){\r\n    error(e);\r\n  }\r\n};\r\n\r\nexport const getData = async (url, callback, error, final) => {\r\n  console.log('[ Get '+ url +' ]******************************');\r\n  paramsPrint({\r\n    url: url,\r\n    params: {},\r\n    callback: callback,\r\n    error: error,\r\n    final: final\r\n  });\r\n  // 초기화\r\n  if(callback === undefined || typeof callback !== 'function')\r\n    callback = (res) => {};\r\n  if(error === undefined || typeof error !== 'function')\r\n    error = (err) => {};\r\n  if(final === undefined || typeof final !== 'function')\r\n    final = () => {};\r\n\r\n  try{\r\n    const response = await axios.get(ip + url, { withCredentials: true })\r\n    callback(response);\r\n  }\r\n  catch (e){\r\n    error(e);\r\n  }\r\n  finally {\r\n    final();\r\n  }\r\n};\r\n\r\nexport const putData = (url, params, callback, error, final) => {\r\n  console.log('[ Put ]******************************');\r\n  paramsPrint({\r\n    url: url,\r\n    params: params,\r\n    callback: callback,\r\n    error: error,\r\n    final: final\r\n  });\r\n  // 초기화\r\n  if(params === undefined || typeof params !== 'object')\r\n    params = {};\r\n  if(callback === undefined || typeof callback !== 'function')\r\n    callback = (res) => {};\r\n  if(error === undefined || typeof error !== 'function')\r\n    error = (err) => {};\r\n  if(final === undefined || typeof final !== 'function')\r\n    final = () => {};\r\n\r\n  axios.put(ip + url, params, { withCredentials: true })\r\n      .then((res) => {\r\n        callback(res);\r\n      })\r\n      .catch((err) => {\r\n        error(err);\r\n      })\r\n      .finally(() => {\r\n        final();\r\n      });\r\n}\r\n\r\nexport const deleteData = (url, callback, error, final) => {\r\n  console.log('[ Delete ]******************************');\r\n  paramsPrint({\r\n    url: url,\r\n    params: {},\r\n    callback: callback,\r\n    error: error,\r\n    final: final\r\n  });\r\n  // 초기화\r\n  if(callback === undefined || typeof callback !== 'function')\r\n    callback = (res) => {};\r\n  if(error === undefined || typeof error !== 'function')\r\n    error = (err) => {};\r\n  if(final === undefined || typeof final !== 'function')\r\n    final = () => {};\r\n\r\n  axios.delete(ip + url, { withCredentials: true })\r\n      .then((res) => {\r\n        callback(res);\r\n      })\r\n      .catch((err) => {\r\n        error(err);\r\n      })\r\n      .finally(() => {\r\n        final();\r\n      });\r\n}\r\n\r\nexport const postData = (url, params, callback, error, final) => {\r\n  console.log('[ Post ]******************************');\r\n  paramsPrint({\r\n    url: url,\r\n    params: params,\r\n    callback: callback,\r\n    error: error,\r\n    final: final\r\n  });\r\n  // 초기화\r\n  if(params === undefined || typeof params !== 'object')\r\n    params = {};\r\n  if(callback === undefined || typeof callback !== 'function')\r\n    callback = (res) => {};\r\n  if(error === undefined || typeof error !== 'function')\r\n    error = (err) => {};\r\n  if(final === undefined || typeof final !== 'function')\r\n    final = () => {};\r\n\r\n  axios.post(ip + url, params, { withCredentials: true })\r\n    .then((res) => {\r\n      callback(res);\r\n    })\r\n    .catch((err) => {\r\n      error(err);\r\n    })\r\n    .finally(() => {\r\n      final();\r\n    });\r\n}\r\n\r\nexport const solveFile = (problemCode, file, language, callback, error, final) => {\r\n  if (!(file instanceof File)) {\r\n    error(\"parameter file must be a 'File' type\")\r\n  }\r\n  let formData = new FormData()\r\n  formData.append('source', file)\r\n\r\n  postData(\r\n    `/api/problem/${problemCode}/solve/${language}`,\r\n    formData,\r\n    callback,\r\n    error,\r\n    final,\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/logo.ab3a2bf6.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../../../../images/logo/logo.png';\r\n\r\n/* ----- Design Import ----- */\r\nimport './Menu.scss';\r\n\r\nconst Menu = props => {\r\n  const { pages } = props;\r\n\r\n  /* Component */\r\n  const List = props => {\r\n    const { data } = props;\r\n    if(data.title === undefined || data.href === undefined || data.key === undefined)\r\n      return <li key={'undefined'} />;\r\n\r\n    return (\r\n      <Link to={data.href}>\r\n        <li key={data.key}>\r\n          <span>{ data.title }</span>\r\n        </li>\r\n      </Link>\r\n    )\r\n  }\r\n  List.propTypes =  {\r\n    data: PropTypes.object.isRequired\r\n  }\r\n\r\n  /* Method */\r\n  const printTitle = (title) => {\r\n    return (\r\n      <img className={'vertical-image'} src={ Logo }  alt={''}/>\r\n    );\r\n  }\r\n\r\n  const printList = (list) => {\r\n    if(list === undefined || list.length === 0)\r\n      return <ul />;\r\n\r\n    return (\r\n      <ul>\r\n        {pages.list.map((obj) => {\r\n          return (\r\n            <List data={obj}/>\r\n          )\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  /* Return */\r\n  return (\r\n    <div className={'wrap menu'}>\r\n      <div className={'top vertical-image-wrap'}>\r\n        { printTitle(pages.title) }\r\n      </div>\r\n      <div className={'text_menu'}>\r\n        { printList(pages.list) }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  pages: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from '@mdi/react';\r\nimport { Link } from 'react-router-dom';\r\nimport { mdiBookmarkMultipleOutline, mdiFolderGoogleDrive, mdiCodeBraces } from '@mdi/js';\r\n\r\n/* ----- Design Import ----- */\r\nimport './SimpleMenu.scss';\r\n\r\nconst SimpleMenu = props => {\r\n  const { pages } = props;\r\n\r\n  /* Component */\r\n  const List = props => {\r\n    const { data } = props;\r\n    if(data.icon === undefined || data.href === undefined || data.key === undefined)\r\n      return <li key={'undefined'} />;\r\n\r\n    let iconPath;\r\n    switch (data.icon){\r\n      case 'mdiBookmarkMultipleOutline':\r\n        iconPath = mdiBookmarkMultipleOutline; break;\r\n      case 'mdiCodeBraces':\r\n        iconPath = mdiCodeBraces; break;\r\n      case 'mdiFolderGoogleDrive':\r\n        iconPath = mdiFolderGoogleDrive; break;\r\n      default:\r\n        return <li key={'undefined'} />;\r\n    }\r\n\r\n    return (\r\n      <Link to={data.href}>\r\n        <li key={data.key}>\r\n          <span><Icon path={iconPath} size={1} color={'white'} /></span>\r\n        </li>\r\n      </Link>\r\n    )\r\n  }\r\n  List.propTypes =  {\r\n    data: PropTypes.object.isRequired\r\n  }\r\n\r\n  /* Method */\r\n  const printTitle = (title) => {\r\n    if(title === undefined || title.icon === undefined)\r\n      return <span />;\r\n\r\n    return (\r\n      <span>{ title.icon }</span>\r\n    );\r\n  }\r\n\r\n  const printList = (list) => {\r\n    if(list === undefined || list.length === 0)\r\n      return <ul />;\r\n\r\n    return (\r\n      <ul>\r\n        {pages.list.map((obj) => {\r\n          return (\r\n            <List data={obj}/>\r\n          )\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  /* Return */\r\n  return (\r\n    <div className={'wrap simple_menu'}>\r\n      <div className={'top'}>\r\n        { printTitle(pages.title) }\r\n      </div>\r\n      <div className={'icon_menu'}>\r\n        { printList(pages.list) }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSimpleMenu.propTypes = {\r\n  pages: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SimpleMenu;\r\n","export const pages = {\r\n  title: {\r\n    icon: ''\r\n  },\r\n  list: [\r\n    {\r\n      key: 'room',\r\n      title: '내 강의실',\r\n      icon: 'mdiBookmarkMultipleOutline',\r\n      href: '/mainroom'\r\n    },\r\n    {\r\n      key: 'packages',\r\n      title: '문제 패키지 관리',\r\n      icon: 'mdiFolderGoogleDrive',\r\n      href: '/packages'\r\n    },\r\n    {\r\n      key: 'problems',\r\n      title: '문제 관리',\r\n      icon: 'mdiCodeBraces',\r\n      href: '/problems'\r\n    }\r\n  ]\r\n};","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from '@mdi/react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { mdiMenu, mdiBellRingOutline , mdiCog, mdiLogout } from '@mdi/js';\r\n\r\n/* ----- Design Import ----- */\r\nimport './Default.scss';\r\nimport { SimpleMenu, Menu } from './components';\r\n\r\n/* ----- Data Import ----- */\r\nimport { pages } from './data'\r\n\r\nconst Default = props => {\r\n  const { children } = props;\r\n  const [ visibleMenu, setVisibleMenu ] = useState(true);\r\n  const history = useHistory();\r\n\r\n  /* Method */\r\n  const toggleMenu = () => {\r\n    setVisibleMenu(!visibleMenu);\r\n  }\r\n\r\n  const isLogin = () => {\r\n    return true;\r\n  }\r\n\r\n  const logout = () => {\r\n    // Delete Session\r\n    window.location.href = '/auth/logout';\r\n  }\r\n\r\n  if(!isLogin()){\r\n    history.push('/home');\r\n  }\r\n\r\n  return (\r\n    <div className={visibleMenu ? 'layout default' : 'layout default hide_menu'}>\r\n      <div className={'box simple_menu'}>\r\n        <SimpleMenu pages={pages} />\r\n      </div>\r\n      <div className={'box menu'}>\r\n        <Menu pages={pages} ref={right => this.right = right} />\r\n      </div>\r\n      <div className={'box info flex-align middle'}>\r\n        <span className={'menu_btn'}>\r\n          <button onClick={toggleMenu} className={'icon_btn'}><Icon path={ mdiMenu } size={1.0} color={'black'} /></button>\r\n        </span>\r\n        <span className={'my_info'}>\r\n          <em>CJG</em>\r\n        </span>\r\n        <span className={'my_icons'}>\r\n          <button className={'icon_btn'}><Icon path={ mdiBellRingOutline } size={1} color={'#91979D'} /></button>\r\n          <button className={'icon_btn'}><Icon path={ mdiCog } size={1} color={'#91979D'} /></button>\r\n          <button onClick={logout} className={'icon_btn'}><Icon path={ mdiLogout } size={1} color={'#F06B78'} /></button>\r\n        </span>\r\n      </div>\r\n      <div className={'box stepper'}>\r\n\r\n      </div>\r\n      <div className={'box contents'}>\r\n        <main className={'main'}>{children}</main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDefault.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Default;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Minimal = props => {\r\n    const { children, className } = props;\r\n\r\n    return (\r\n        <div className={className}>\r\n            Minimal Layer\r\n            <main>{children}</main>\r\n        </div>\r\n    );\r\n};\r\n\r\nMinimal.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default Minimal;\r\n","import React, { forwardRef, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Popover,\r\n  Typography,\r\n  Button,\r\n  colors,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport Logo from '../../../../images/logo/logo.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    boxShadow: 'none',\r\n    background: theme.palette.white,\r\n    borderBottom: `1px solid ${colors.grey[200]}`,\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1,\r\n  },\r\n  navigationContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  toolbar: {\r\n    maxWidth: 1100,\r\n    width: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  navLink: {\r\n    fontWeight: 300,\r\n    '&:hover': {\r\n      color: theme.palette.primary.dark,\r\n    },\r\n  },\r\n  listItem: {\r\n    cursor: 'pointer',\r\n    '&:hover > .menu-item, &:hover svg': {\r\n      color: theme.palette.primary.dark,\r\n    },\r\n  },\r\n  listItemActive: {\r\n    '&> .menu-item': {\r\n      color: theme.palette.primary.dark,\r\n    },\r\n  },\r\n  listItemText: {\r\n    flex: '0 0 auto',\r\n    marginRight: theme.spacing(2),\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  listItemButton: {\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  listItemIcon: {\r\n    minWidth: 'auto',\r\n  },\r\n  popover: {\r\n    padding: theme.spacing(4),\r\n    border: theme.spacing(2),\r\n    boxShadow: '0 0.5rem 2rem 2px rgba(116, 123, 144, 0.09)',\r\n    minWidth: 350,\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  iconButton: {\r\n    padding: 0,\r\n    '&:hover': {\r\n      background: 'transparent',\r\n    },\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  logoContainer: {\r\n    width: 100,\r\n    height: 28,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 120,\r\n      height: 32,\r\n    },\r\n  },\r\n  logoImage: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  menu: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  menuItem: {\r\n    marginRight: theme.spacing(5),\r\n    '&:last-child': {\r\n      marginRight: 0,\r\n    },\r\n  },\r\n  menuGroupItem: {\r\n    paddingTop: 0,\r\n  },\r\n  menuGroupTitle: {\r\n    textTransform: 'uppercase',\r\n  },\r\n}));\r\n\r\nconst CustomRouterLink = forwardRef((props, ref) => (\r\n  <div ref={ref}>\r\n    <RouterLink {...props} />\r\n  </div>\r\n));\r\n\r\nconst Topbar = props => {\r\n  const { className, onSidebarOpen, pages, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openedPopoverId, setOpenedPopoverId] = useState(null);\r\n\r\n  const handleClick = (event, popoverId) => {\r\n    setAnchorEl(event.target);\r\n    setOpenedPopoverId(popoverId);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    setOpenedPopoverId(null);\r\n  };\r\n\r\n  const landings = pages.landings;\r\n  const supportedPages = pages.pages;\r\n  const account = pages.account;\r\n\r\n  const MenuGroup = props => {\r\n    const { item } = props;\r\n    return (\r\n      <List disablePadding>\r\n        <ListItem disableGutters>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"primary\"\r\n            className={classes.menuGroupTitle}\r\n          >\r\n            {item.groupTitle}\r\n          </Typography>\r\n        </ListItem>\r\n        {item.pages.map((page, i) => (\r\n          <ListItem disableGutters key={i} className={classes.menuGroupItem}>\r\n            <Typography\r\n              variant=\"body1\"\r\n              component={CustomRouterLink}\r\n              to={page.href}\r\n              className={clsx(classes.navLink, 'submenu-item')}\r\n              color=\"textSecondary\"\r\n              onClick={handleClose}\r\n            >\r\n              {page.title}\r\n            </Typography>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  const LandingPages = () => {\r\n    const { services, apps, web } = landings.children;\r\n    return (\r\n      <div className={classes.menu}>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={services} />\r\n          <MenuGroup item={apps} />\r\n        </div>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={web} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const SupportedPages = () => {\r\n    const {\r\n      career,\r\n      helpCenter,\r\n      company,\r\n      contact,\r\n      blog,\r\n      portfolio,\r\n    } = supportedPages.children;\r\n    return (\r\n      <div className={classes.menu}>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={career} />\r\n          <MenuGroup item={helpCenter} />\r\n        </div>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={company} />\r\n          <MenuGroup item={contact} />\r\n        </div>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={blog} />\r\n          <MenuGroup item={portfolio} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const AccountPages = () => {\r\n    const { settings, signup, signin, password, error } = account.children;\r\n    return (\r\n      <div className={classes.menu}>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={settings} />\r\n        </div>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={signup} />\r\n          <MenuGroup item={signin} />\r\n        </div>\r\n        <div className={classes.menuItem}>\r\n          <MenuGroup item={password} />\r\n          <MenuGroup item={error} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderPages = id => {\r\n    if (id === 'landing-pages') {\r\n      return <LandingPages />;\r\n    }\r\n    if (id === 'supported-pages') {\r\n      return <SupportedPages />;\r\n    }\r\n    if (id === 'account') {\r\n      return <AccountPages />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      {...rest}\r\n      position=\"relative\"\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Toolbar disableGutters className={classes.toolbar}>\r\n        <div className={classes.logoContainer}>\r\n          <a href=\"/\" title=\"Coditnator\">\r\n            <img src={Logo}  alt={'Coditnator'} className={'logo'}/>\r\n          </a>\r\n        </div>\r\n        <div className={classes.flexGrow} />\r\n        <List className={classes.navigationContainer}>\r\n          {[landings, supportedPages, account].map((page, i) => (\r\n            <div key={page.id}>\r\n              <ListItem\r\n                aria-describedby={page.id}\r\n                onClick={e => handleClick(e, page.id)}\r\n                className={clsx(\r\n                  classes.listItem,\r\n                  openedPopoverId === page.id ? classes.listItemActive : '',\r\n                )}\r\n              >\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  color=\"textSecondary\"\r\n                  className={clsx(classes.listItemText, 'menu-item')}\r\n                >\r\n                  {page.title}\r\n                </Typography>\r\n                <ListItemIcon className={classes.listItemIcon}>\r\n                  <ExpandMoreIcon\r\n                    className={\r\n                      openedPopoverId === page.id ? classes.expandOpen : ''\r\n                    }\r\n                    fontSize=\"small\"\r\n                  />\r\n                </ListItemIcon>\r\n              </ListItem>\r\n              <Popover\r\n                elevation={1}\r\n                id={page.id}\r\n                open={openedPopoverId === page.id}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'center',\r\n                }}\r\n                classes={{ paper: classes.popover }}\r\n              >\r\n                <div>{renderPages(page.id)}</div>\r\n              </Popover>\r\n            </div>\r\n          ))}\r\n          <ListItem className={classes.listItem}>\r\n            <Button\r\n              size=\"medium\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component=\"a\"\r\n              target=\"blank\"\r\n              href=\"#\"\r\n              className={classes.listItemButton}\r\n            >\r\n              Login\r\n            </Button>\r\n          </ListItem>\r\n        </List>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopbar.propTypes = {\r\n  className: PropTypes.string,\r\n  onSidebarOpen: PropTypes.func,\r\n  pages: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Topbar;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { Topbar } from './components';\r\n\r\nimport { pages } from './data';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nconst Main = props => {\r\n    const { children } = props;\r\n    const classes = useStyles();\r\n    const [openSidebar, setOpenSidebar] = useState(false);\r\n\r\n    const handleSidebarOpen = () => {\r\n        setOpenSidebar(true);\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={clsx({\r\n            [classes.root]: true,\r\n        })}\r\n      >\r\n          <Topbar onSidebarOpen={handleSidebarOpen} pages={pages} />\r\n          <main>{children}</main>\r\n      </div>\r\n    );\r\n};\r\n\r\nMain.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className={'page home'}>\r\n      Home Page\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Toolbar,\r\n  Typography,\r\n  Paper,\r\n  Checkbox,\r\n  IconButton,\r\n  Tooltip,\r\n  FormControlLabel,\r\n  Switch\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  Delete,\r\n  FilterList\r\n} from '@material-ui/icons';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n  headCells: PropTypes.array.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, title } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {title}\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <Delete />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterList />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst DesignTable = (props) =>  {\r\n  const { title, headCells, rows, rowsPerPageOptions, denseFlag } = props;\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(denseFlag != null ? denseFlag : false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} title={title} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n              headCells={headCells}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={rowsPerPageOptions}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nDesignTable.propTypes = {\r\n  title: PropTypes.string,\r\n  headCells: PropTypes.array.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  rowsPerPageOptions: PropTypes.array.isRequired,\r\n  denseFlag: PropTypes.bool\r\n};\r\n\r\nexport default DesignTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SimpleModal.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 'content-box',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n  },\r\n}));\r\n\r\nconst SimpleModal = props => {\r\n  /* Props */\r\n  const { title, open, close, body } = props;\r\n\r\n  /* Const */\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={close}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        {typeof title === 'string' ? <div className={'modal_title'}>\r\n          { title }\r\n        </div> : null}\r\n        <div className={'modal_body'}>\r\n          { body }\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nSimpleModal.propTypes = {\r\n  title: PropTypes.string,\r\n  open: PropTypes.bool.isRequired,\r\n  close: PropTypes.func.isRequired,\r\n  body: PropTypes.element.isRequired\r\n};\r\n\r\nexport default SimpleModal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SimpleSelect.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {\r\n  InputLabel,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputBase\r\n} from '@material-ui/core';\r\n\r\n/* Custom Import */\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 13,\r\n    padding: '10px 15px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  size: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\n/* *** Change Event ***\r\nconst handleChange = (event) => {\r\n  setAge(event.target.value);\r\n};\r\n*/\r\n\r\nconst SimpleSelect = props => {\r\n  /* Props */\r\n  const { title, items, start, changeEvent } = props;\r\n\r\n  /* Const */\r\n  const classes = useStyles();\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  const printMenuItem = () => {\r\n    return items.map((item) => {\r\n      if(item.value === undefined || typeof item.value !== 'string')\r\n        return null;\r\n      else if(item.label === undefined || typeof item.value !== 'string')\r\n        return null;\r\n      return <MenuItem value={ item.value }>{ item.label }</MenuItem>\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormControl className={classes.size}>\r\n      <Select\r\n        labelId=\"demo-customized-select-label\"\r\n        id=\"demo-customized-select\"\r\n        onChange={changeEvent}\r\n        value={start}\r\n        input={<BootstrapInput />}\r\n      >\r\n        { printMenuItem() }\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nSimpleSelect.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  items: PropTypes.array.isRequired,\r\n  start: PropTypes.any.isRequired,\r\n  changeEvent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SimpleSelect;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './Tag.scss';\r\n\r\n/* Icon Import */\r\n// Python, Ruby, Go, Java, JS, Kotlin, Swift, C, CPP, CS\r\nimport {\r\n  mdiLanguagePython as Python,\r\n  mdiLanguageRuby as Ruby,\r\n  mdiLanguageGo as Go,\r\n  mdiLanguageJava as Java,\r\n  mdiLanguageJavascript as JS,\r\n  mdiLanguageKotlin as Kotlin,\r\n  mdiLanguageSwift as Swift,\r\n  mdiLanguageC as C,\r\n  mdiLanguageCpp as CPP,\r\n  mdiLanguageCsharp as CS,\r\n  mdiEmoticonConfused\r\n} from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\n\r\nconst Tag = props => {\r\n  const { code, size } = props;\r\n\r\n  /* Method */\r\n  const getTagIcon = () => {\r\n    switch (code) {\r\n      case 'Python': return <Icon className=\"icon\" path={ Python } size={size}/>;\r\n      case 'Ruby': return <Icon className=\"icon\" path={ Ruby } size={size}/>;\r\n      case 'Go': return <Icon className=\"icon\" path={ Go } size={size}/>;\r\n      case 'Java': return <Icon className=\"icon\" path={ Java } size={size}/>;\r\n      case 'JS': return <Icon className=\"icon\" path={ JS } size={size}/>;\r\n      case 'Kotlin': return <Icon className=\"icon\" path={ Kotlin } size={size}/>;\r\n      case 'Swift': return <Icon className=\"icon\" path={ Swift } size={size}/>;\r\n      case 'C': return <Icon className=\"icon\" path={ C } size={size}/>;\r\n      case 'CPP': return <Icon className=\"icon\" path={ CPP } size={size}/>;\r\n      case 'CS': return <Icon className=\"icon\" path={ CS } size={size}/>;\r\n      default: return <Icon className=\"icon\" path={ mdiEmoticonConfused } size={0.7}/>\r\n    }\r\n  };\r\n\r\n  return (\r\n    <span className={'tag'}>\r\n      {getTagIcon()}\r\n    </span>\r\n  );\r\n};\r\n\r\nTag.propTypes = {\r\n  code: PropTypes.string.isRequired,\r\n  size: PropTypes.number.isRequired\r\n};\r\n\r\n\r\nexport default Tag;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Icon Import */\r\nimport {\r\n  mdiLightbulbOnOutline,\r\n  mdiEyeOutline,\r\n  mdiTrashCanOutline\r\n} from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\n\r\n/* Design Import */\r\nimport './SimpleTable.scss';\r\nimport Tag from \"../Tag\";\r\nimport {AddTags} from \"../../pages\";\r\nimport {SimpleModal} from \"../index\";\r\nimport {render} from \"@testing-library/react\";\r\n\r\nconst SimpleTable = props => {\r\n  /* Props */\r\n  const { heads, bodys, search, customEvent, infoEvent, deleteEvent, infoModal } = props;\r\n\r\n  /* Const */\r\n\r\n  /* Method */\r\n  const searchFilter = () => {\r\n    if(search === undefined || search === '') return null;\r\n  };\r\n\r\n  const printHeads = () => {\r\n    return (\r\n      <tr>\r\n        {heads.map((head) => {\r\n          return (<th data-id={ head.id }>{ head.label }</th>);\r\n        })}\r\n        <th>Actions</th>\r\n      </tr>\r\n    );\r\n  };\r\n  const printBodys = () => {\r\n    return bodys.map((body) => {\r\n      return (\r\n        <tr>\r\n          {heads.map((head) => {\r\n            return printBody(body, head.id);\r\n          })}\r\n          {printActions(body)}\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  const printBody = (body, id) => {\r\n    if(id === 'tags'){\r\n      return printTags(body[id]);\r\n    }\r\n    return (<td>{ body[id] }</td>);\r\n  };\r\n  const printTags = (tags) => {\r\n    return (\r\n      <td>\r\n        {tags !== undefined ? tags.map((tag) => {\r\n          return <Tag code={tag} size={0.7} />;\r\n        }) : null}\r\n      </td>\r\n    );\r\n  };\r\n  const printActions = (body) => {\r\n    return (\r\n      <td>\r\n        {typeof customEvent === 'function' ? <button onClick={() => { customEvent(body) }} className={'icon_btn'}><Icon className=\"icon\" path={ mdiLightbulbOnOutline } size={0.7}/></button> : null}\r\n        {typeof infoEvent === 'function' ? <button onClick={() => { infoEvent(body) }} className={'icon_btn'}><Icon className=\"icon\" path={ mdiEyeOutline } size={0.7}/></button> : null}\r\n        {typeof deleteEvent === 'function' ? <button onClick={() => { deleteEvent(body) }} className={'icon_btn'}><Icon className=\"icon\" path={ mdiTrashCanOutline } size={0.7}/></button> : null}\r\n      </td>\r\n    );\r\n  }\r\n\r\n  searchFilter();\r\n\r\n  return (\r\n    <div className={'simple_table'}>\r\n      <table>\r\n        <thead>\r\n        {printHeads()}\r\n        </thead>\r\n        <tbody>\r\n        {printBodys()}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        {infoModal !== 'undefined' ? infoModal : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSimpleTable.propTypes = {\r\n  heads: PropTypes.array.isRequired,\r\n  bodys: PropTypes.array.isRequired,\r\n  search: PropTypes.string,\r\n  customEvent: PropTypes.func,\r\n  infoEvent: PropTypes.func,\r\n  deleteEvent: PropTypes.func,\r\n  infoModal: PropTypes.element\r\n};\r\n\r\n\r\nexport default SimpleTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SimpleDialog.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from '@material-ui/core';\r\n\r\n/* Custom Import */\r\n\r\nconst SimpleDialog = props => {\r\n  /* Props */\r\n  const { open, onClose, data } = props;\r\n\r\n  /* Const */\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{data.title !== 'undefined' ? data.title : null}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {data.content !== 'undefined' ? data.content : null}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={data.disagreeEvent !== 'undefined' ? data.disagreeEvent : onClose()} color=\"primary\">\r\n          {data.disagreeText !== 'undefined' ? data.disagreeText : null}\r\n        </Button>\r\n        <Button onClick={data.agreeEvent !== 'undefined' ? data.agreeEvent : onClose()} color=\"primary\" autoFocus>\r\n          {data.agreeText !== 'undefined' ? data.agreeText : null}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nSimpleDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default SimpleDialog;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SimpleStepper.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  MobileStepper,\r\n  Button\r\n} from '@material-ui/core';\r\nimport {\r\n  KeyboardArrowLeft,\r\n  KeyboardArrowRight\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst SimpleStepper = props => {\r\n  /* Props */\r\n  const { maxSteps, back, next } = props;\r\n\r\n  /* Const */\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  const handleBack = () => {\r\n    if (typeof back === 'function') {\r\n      back(activeStep - 1);\r\n    }\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n  };\r\n  const handleNext = () => {\r\n    if(typeof next === 'function') {\r\n      next(activeStep + 1);\r\n    }\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant=\"dots\"\r\n      steps={maxSteps}\r\n      position=\"static\"\r\n      activeStep={activeStep}\r\n      className={classes.root}\r\n      nextButton={\r\n        <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps-1}>\r\n          Next\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nSimpleStepper.propTypes = {\r\n  maxSteps: PropTypes.number.isRequired,\r\n  back: PropTypes.func,\r\n  next: PropTypes.func\r\n};\r\n\r\nexport default SimpleStepper;\r\n","import React from 'react';\r\n\r\n/* Design Import */\r\nimport './AddPackage.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Icon Import */\r\nimport {\r\n  mdiCodeBraces,\r\n  mdiLeadPencil ,\r\n  mdiRadioboxMarked,\r\n  mdiPlus,\r\n  mdiMinus\r\n} from '@mdi/js';\r\nimport Icon from \"@mdi/react\";\r\n\r\n/* Material Import */\r\nimport {\r\n  Button,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n/* Custom Import */\r\nimport {SimpleModal} from \"../../components\";\r\nimport SimpleStepper from \"../../components/SimpleStepper\";\r\nimport {SelectProblems} from \"../index\";\r\nimport { getData, postData, putData } from '../../common'\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass AddPackage extends React.Component {\r\n  /* State */\r\n  state = {\r\n    packageName: '',\r\n    packageDesc: '',\r\n    packageProblems: [],\r\n    step: 0,\r\n    selectProblemsModal: false\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  /* Component Did Mount */\r\n  async componentDidMount() {\r\n    if(this.isExistCode()) {\r\n      const packageCode = this.props.code;\r\n      await getData(`/api/package/${packageCode}`, (res) => {\r\n        const data = res.data.success;\r\n        this.setState({\r\n          packageName: data.name,\r\n          packageDesc: data.description,\r\n        });\r\n        this.setPackageProblems();\r\n      }, (err) => {\r\n        console.log('Error ++++++++++');\r\n      });\r\n    }\r\n  }\r\n\r\n  setPackageProblems = async () => {\r\n    const packageCode = this.props.code;\r\n    let data = [];\r\n    await getData(`/api/package/${packageCode}/problem`, (res) => {\r\n      const data = res.data.success;\r\n      this.setState({\r\n        packageProblems: data,\r\n      });\r\n    }, (err) => {\r\n      console.log('Error ++++++++++');\r\n    });\r\n  };\r\n\r\n  addPackageToDB = () => {\r\n    // Package 추가 (이름, 설명)\r\n    let sendData = {\r\n      name: this.state.packageName,\r\n      description: this.state.packageDesc\r\n    }\r\n\r\n    console.log('+++++++++++++++++++++++');\r\n    console.log(sendData);\r\n    console.log('+++++++++++++++++++++++');\r\n\r\n    postData('/api/package', sendData, (res) => {\r\n\r\n    }, (err) => {\r\n\r\n    });\r\n\r\n    this.props.close(); // Modal Close\r\n  };\r\n  modifyPackageToDB = () => {\r\n    // Package 수정 (이름, 설명)\r\n    let sendData = {\r\n      name: this.state.packageName,\r\n      description: this.state.packageDesc\r\n    };\r\n\r\n    console.log('+++++++++++++++++++++++');\r\n    console.log(sendData);\r\n    console.log('+++++++++++++++++++++++');\r\n\r\n    const packageCode = this.props.code;\r\n    putData(`/api/package/${packageCode}`, sendData, (res) => {\r\n      console.log('Complete ++++++++++');\r\n    }, (err) => {\r\n\r\n    });\r\n\r\n    // Package 수정 (Package 에 속하는 문제 추가)\r\n    let problems = [];\r\n    this.state.packageProblems.map((problem) => {\r\n      problems.push(problem.code);\r\n    });\r\n\r\n    sendData = {\r\n      problems: problems\r\n    };\r\n    console.log('+++++++++++++++++++++++');\r\n    console.log(sendData);\r\n    console.log('+++++++++++++++++++++++');\r\n\r\n    postData(`/api/package/${packageCode}/problem`, sendData, (res) => {\r\n      /*\r\n      {\r\n        total : true,\r\n            each : [{\r\n        success : {},\r\n        fail :\r\n      }]\r\n      }\r\n      */\r\n    }, (err) => {\r\n\r\n    });\r\n\r\n\r\n    this.props.close(); // Modal Close\r\n  }\r\n\r\n  changeStep = (now) => {\r\n    this.setState({ step: now });\r\n  }\r\n\r\n  isExistCode = () => {\r\n    return typeof this.props.code === 'string';\r\n  }\r\n\r\n  openSelectProblemsModal = () => {\r\n    this.setState({ selectProblemsModal: true });\r\n  };\r\n  closeSelectProblemsModal = () => {\r\n    this.setState({ selectProblemsModal: false });\r\n  };\r\n\r\n  setProblems = (problems) => {\r\n    this.setState({ packageProblems: problems });\r\n  };\r\n\r\n  onChangeName = (e) => {\r\n    this.setState({ packageName: e.target.value });\r\n  };\r\n  onChangeDesc = (e) => {\r\n    this.setState({ packageDesc: e.target.value });\r\n  };\r\n\r\n  printPackageForm  = () => {\r\n    return (\r\n      <div className={'package_form'}>\r\n        <table>\r\n          {this.state.step === 0 ? this.printNameForm() : null}\r\n          {this.state.step === 1 ? this.printDescForm() : null}\r\n          {this.state.step === 2 && this.isExistCode() ? this.printSelectProblemForm() : null}\r\n          {this.state.step === (this.isExistCode() ? 3 : 2) ? this.printCompleteBtn() : null}\r\n        </table>\r\n        <div className={'stepper'}>\r\n          <SimpleStepper maxSteps={this.isExistCode() ? 4 : 3} next={this.changeStep} back={this.changeStep} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  printNameForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>패키지 명칭</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <input\r\n            type={'text'}\r\n            className={'design_form input_A necessary name'}\r\n            placeholder={'Name'}\r\n            value={this.state.packageName}\r\n            onChange={this.onChangeName}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printDescForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>패키지 설명</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <textarea\r\n            className={'design_form textarea_A necessary description'}\r\n            placeholder={'Description'}\r\n            value={this.state.packageDesc}\r\n            onChange={this.onChangeDesc}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printSelectProblemForm = () => {\r\n    /* Props */\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <td>\r\n          <Button\r\n            onClick={this.openSelectProblemsModal}\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            <em>문제 선택</em>\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          {this.state.packageProblems.map((problem) => {\r\n            return <span className={'problem'}>{ problem.name }</span>;\r\n          })}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <SimpleModal\r\n            open={this.state.selectProblemsModal}\r\n            close={this.closeSelectProblemsModal}\r\n            body={<SelectProblems close={this.closeSelectProblemsModal} setProblems={this.setProblems} code={this.props.code} />}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printCompleteBtn = () => {\r\n    /* Props */\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <td>\r\n          <Button\r\n            onClick={this.isExistCode() ? this.modifyPackageToDB : this.addPackageToDB}\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            <em>{this.isExistCode() ? '수정 완료' : '추가 완료' }</em>\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n\r\n  render () {\r\n\r\n    return (\r\n      <div className={'page_modal add_package_modal'}>\r\n        {this.printPackageForm()}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nAddPackage.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  code: PropTypes.string\r\n};\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(AddPackage);\r\n","import React from 'react'\r\n\r\n/* Design Import */\r\nimport './Packages.scss';\r\n\r\n/* Material Import */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\nimport {\r\n  SimpleTable,\r\n  SimpleModal\r\n} from '../../components';\r\nimport AddPackage from '../AddPackage';\r\nimport { getData, deleteData } from '../../common'\r\n\r\n/* Data Import */\r\nimport { rows } from './data/index';\r\nimport SimpleDialog from \"../../components/SimpleDialog\";\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass Packages extends React.Component {\r\n  state = {\r\n    selectedCode: '',\r\n    addPackageModal: false,\r\n    infoPackageModal: false,\r\n    deletePackageDialog: false,\r\n    heads: [\r\n      { id: 'name',        label: '명칭'},\r\n      { id: 'description', label: '설명'},\r\n      { id: 'count',       label: '문제 개수'},\r\n    ],\r\n    bodys: []\r\n  }\r\n  /* Component Did Mount */\r\n  componentDidMount() {\r\n    this.setBodys();\r\n  }\r\n\r\n  /* Method */\r\n  setBodys = async () => {\r\n    // Package 목록 정보 불러오기\r\n    await getData('/api/package', (res) => {\r\n      this.setState({ bodys: res.data.success });\r\n    }, (err) => {\r\n      this.setState({ bodys: [] });\r\n      console.log('Error ++++++++++');\r\n    });\r\n  };\r\n\r\n  openAddPackageModal = () => {\r\n    this.setState({ addPackageModal: true });\r\n  };\r\n  closeAddPackageModal = () => {\r\n    this.setState({ addPackageModal: false });\r\n    this.setBodys();\r\n  };\r\n\r\n  openInfoPackageModal = () => {\r\n    this.setState({ infoPackageModal: true });\r\n  };\r\n  closeInfoPackageModal = () => {\r\n    this.setState({ infoPackageModal: false });\r\n    this.setBodys();\r\n  };\r\n\r\n  openDeletePackageDialog = () => {\r\n    this.setState({ deletePackageDialog: true });\r\n  }\r\n  closeDeletePackageDialog = () => {\r\n    this.setState({ deletePackageDialog: false });\r\n  };\r\n\r\n  customEvent = (body) => {\r\n    const { history } = this.props;\r\n    history.push('/problems/' + body.code);\r\n  }\r\n\r\n  deleteEvent = (body) => {\r\n    this.setState({ selectedCode: body.code });\r\n    this.openDeletePackageDialog();\r\n  };\r\n\r\n  deleteAgree = () => {\r\n    // Package 삭제\r\n    const packageCode = this.state.selectedCode;\r\n    deleteData(`/api/package/${packageCode}`, (res) => {\r\n      // Package 목록 정보 다시 불러오기\r\n      this.setBodys();\r\n      this.closeDeletePackageDialog();\r\n    }, (err) => {\r\n\r\n    });\r\n  };\r\n\r\n  deleteDisagree = () => {\r\n    this.closeDeletePackageDialog();\r\n  };\r\n\r\n  infoEvent = (body) => {\r\n    this.setState({ selectedCode: body.code })\r\n    this.openInfoPackageModal();\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    /* Props */\r\n    const { classes, history } = this.props;\r\n\r\n    return (\r\n      <div className={'page packages'}>\r\n        <div className={'content'}>\r\n          <div className={'search_box'}>\r\n\r\n          </div>\r\n          <div className={'btn_box'}>\r\n            <Button\r\n              onClick={this.openAddPackageModal}\r\n              classes={{\r\n                root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              startIcon={<AddIcon>send</AddIcon>}\r\n            >\r\n              패키지 추가\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className={'content package_table'}>\r\n          <SimpleTable\r\n            heads={this.state.heads}\r\n            bodys={this.state.bodys}\r\n            customEvent={this.customEvent}\r\n            deleteEvent={this.deleteEvent}\r\n            infoEvent={this.infoEvent}\r\n            infoModal={\r\n              <SimpleModal\r\n                title={'패키지 수정'}\r\n                open={this.state.infoPackageModal}\r\n                close={this.closeInfoPackageModal}\r\n                body={<AddPackage close={this.closeInfoPackageModal} code={this.state.selectedCode}/>}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <SimpleModal\r\n          title={'패키지 추가'} open={this.state.addPackageModal}\r\n          close={this.closeAddPackageModal}\r\n          body={<AddPackage close={this.closeAddPackageModal}/>}\r\n        />\r\n        <SimpleDialog\r\n          open={this.state.deletePackageDialog}\r\n          onClose={this.closeDeletePackageDialog}\r\n          data={{\r\n            title: '패키지 삭제',\r\n            content: this.state.selectedCode + ' 패키지를 삭제하시겠습니까?',\r\n            agreeText: 'YES',\r\n            disagreeText: 'NO',\r\n            agreeEvent: this.deleteAgree,\r\n            disagreeEvent: this.deleteDisagree\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(Packages);\r\n","import React from 'react';\r\n\r\n/* Design Import */\r\nimport './AddProblem.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Icon Import */\r\nimport {\r\n  mdiCodeBraces,\r\n  mdiLeadPencil ,\r\n  mdiRadioboxMarked,\r\n  mdiPlus,\r\n  mdiMinus\r\n} from '@mdi/js';\r\nimport Icon from \"@mdi/react\";\r\n\r\n/* Material Import */\r\nimport {\r\n  Button,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n/* Custom Import */\r\nimport {SimpleModal, SimpleSelect, Tag} from \"../../components\";\r\nimport SimpleStepper from \"../../components/SimpleStepper\";\r\nimport {SelectTags} from \"../index\";\r\nimport { getData, postData, putData, deleteData } from '../../common'\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass AddProblem extends React.Component {\r\n  /* State */\r\n  state = {\r\n    problemType: '',\r\n    problemName: '',\r\n    problemDesc: '',\r\n    problemRest: '',\r\n    problemEntry: '',\r\n    problemReturn: '',\r\n    problemAnswer: '',\r\n    problemParams: [],\r\n    problemTestCases: [],\r\n    problemTags: [],\r\n    problemChoices: [],\r\n    step: 0,\r\n    selectTagsModal: false\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  /* Component Did Mount */\r\n  async componentDidMount() {\r\n    if(this.isExistCode()) {\r\n      let problemCode = this.props.code;\r\n\r\n      await getData(`/api/problem/${problemCode}`, async (res) => {\r\n        const data = res.data.success;\r\n        let parsed = JSON.parse(data.description);\r\n\r\n        this.setState({\r\n          problemType: data.type,\r\n          problemName: data.name,\r\n          problemDesc: parsed.text,\r\n          problemRest: data.restriction,\r\n          problemEntry: data.entry,\r\n          problemReturn: JSON.parse(data.return),\r\n          problemAnswer: parsed.answer !== 'undefined' ? parsed.answer : '',\r\n          problemParams: this.parseParams(data),\r\n          problemTestCases: await this.getTestCases(problemCode),\r\n          problemTags: data.tags,\r\n          problemChoices: parsed.choices !== 'undefined' ? parsed.choices : [],\r\n        });\r\n      }, (err) => {\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  parseParams = (data) => {\r\n    let params = [];\r\n    let parameters = JSON.parse(data.parameters);\r\n    let parameterNames = JSON.parse(data.parameter_names);\r\n\r\n    parameters.map((p, index) => {\r\n      params.push({\r\n        type: parameters[index],\r\n        name: parameterNames[index]\r\n      });\r\n    });\r\n\r\n    return params;\r\n  };\r\n\r\n  getTestCases = async (problemCode) => {\r\n    let data = [];\r\n    await getData(`/api/problem/${problemCode}/io/~`, (res) => {\r\n      data = res.data.success;\r\n    }, (err) => {\r\n\r\n    });\r\n    return data;\r\n  };\r\n\r\n  addProblemComplete = () => {\r\n    // Problem 추가\r\n    let sendData = {\r\n      type: this.state.problemType,\r\n      name: this.state.problemName,\r\n      description: '',\r\n      restriction: undefined,\r\n      entry: undefined,\r\n      return: undefined,\r\n      parameters: undefined,\r\n      parameter_names: undefined\r\n    };\r\n\r\n    let obj;\r\n    switch(this.state.problemType) {\r\n      case 'programming':\r\n        let parameters = [];\r\n        let parameterNames = [];\r\n\r\n        obj = {\r\n          text: this.state.problemDesc\r\n        };\r\n\r\n        this.state.problemParams.map((param) => {\r\n          parameters.push(param.type);\r\n          parameterNames.push(param.name);\r\n        });\r\n\r\n        sendData.restriction = this.state.problemRest;\r\n        sendData.entry = this.state.problemEntry;\r\n        sendData.return = JSON.stringify(this.state.problemReturn);\r\n        sendData.parameters = JSON.stringify(parameters);\r\n        sendData.parameter_names = JSON.stringify(parameterNames);\r\n        break;\r\n      case 'short':\r\n        obj = {\r\n          text: this.state.problemDesc,\r\n          answer: this.state.problemAnswer\r\n        };\r\n        break;\r\n      case 'multiple':\r\n        obj = {\r\n          text: this.state.problemDesc,\r\n          choices: this.state.problemChoices,\r\n          answer: this.state.problemAnswer\r\n        };\r\n        break;\r\n    }\r\n    sendData.description = JSON.stringify(obj);\r\n\r\n    postData('/api/problem', sendData, (res) => {\r\n      let newProblemCode = res.data.success;\r\n      if(this.state.problemType === 'programming') {\r\n        // 테스트 케이스 추가\r\n        this.addNewTestCase(newProblemCode);\r\n        // 태그 추가\r\n        this.state.problemTags.map((tag) => {\r\n          this.addNewTags(newProblemCode, tag);\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        this.props.close()\r\n      }, 500);\r\n    }, (err) => {\r\n\r\n    });\r\n\r\n    this.props.close(); // Modal Close\r\n  };\r\n  addNewTestCase = (newProblemCode) => {\r\n    // 테스트 케이스 추가\r\n    let sendData = {\r\n      cases: this.state.problemTestCases\r\n    };\r\n\r\n\r\n    postData(`/api/problem/${newProblemCode}/io`, sendData, (res) => {\r\n\r\n    }, (err) => {\r\n\r\n    });\r\n  };\r\n  addNewTags = (newProblemCode, tag) => {\r\n    // 태그 추가\r\n    putData(`/api/problem/${newProblemCode}/tag/${tag}`, {}, (res) => {\r\n\r\n    }, (err) => {\r\n\r\n    });\r\n  };\r\n\r\n  modifyProblemComplete = () => {\r\n    // Problem 수정\r\n    let sendData = {\r\n      type: this.state.problemType,\r\n      name: this.state.problemName,\r\n      description: '',\r\n      restriction: undefined,\r\n      entry: undefined,\r\n      return: undefined,\r\n      parameters: undefined,\r\n      parameter_names: undefined\r\n    };\r\n\r\n    let obj;\r\n    switch(this.state.problemType) {\r\n      case 'programming':\r\n        let parameters = [];\r\n        let parameterNames = [];\r\n\r\n        obj = {\r\n          text: this.state.problemDesc\r\n        };\r\n\r\n        this.state.problemParams.map((param) => {\r\n          parameters.push(param.type);\r\n          parameterNames.push(param.name);\r\n        });\r\n\r\n        sendData.restriction = this.state.problemRest;\r\n        sendData.entry = this.state.problemEntry;\r\n        sendData.return = JSON.stringify(this.state.problemReturn);\r\n        sendData.parameters = JSON.stringify(parameters);\r\n        sendData.parameter_names = JSON.stringify(parameterNames);\r\n        break;\r\n      case 'short':\r\n        obj = {\r\n          text: this.state.problemDesc,\r\n          answer: this.state.problemAnswer\r\n        };\r\n        break;\r\n      case 'multiple':\r\n        obj = {\r\n          text: this.state.problemDesc,\r\n          choices: this.state.problemChoices,\r\n          answer: this.state.problemAnswer\r\n        };\r\n        break;\r\n    }\r\n    sendData.description = JSON.stringify(obj);\r\n\r\n\r\n    const problemCode = this.props.code;\r\n    putData(`/api/problem/${problemCode}`, sendData, (res) => {\r\n      if(this.state.problemType === 'programming') {\r\n        // 테스트 케이스 수정\r\n        this.addNewTestCase(problemCode);\r\n        // 태그 수정 (모든 태그 삭제 후 재추가)\r\n        deleteData(`/api/problem/${problemCode}/tag`, (res) => {\r\n          this.state.problemTags.map((tag) => {\r\n            this.addNewTags(problemCode, tag);\r\n          });\r\n        }, (err) => {\r\n\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        this.props.close()\r\n      }, 500);\r\n    }, (err) => {\r\n\r\n    });\r\n  }\r\n\r\n  getVariableTypes = () => {\r\n    const items = [\r\n      { label: 'Int32', value: 'i32' },\r\n      { label: 'Int64', value: 'i64' },\r\n      { label: 'Float32', value: 'f32' },\r\n      { label: 'Float64', value: 'f64' },\r\n      { label: 'String', value: 'str' },\r\n\r\n      { label: 'Int32 Array', value: '[i32]' },\r\n      { label: 'Int64 Array', value: '[i64]' },\r\n      { label: 'Float32 Array', value: '[f32]' },\r\n      { label: 'Float64 Array', value: '[f64]' },\r\n      { label: 'String Array', value: '[str]' },\r\n    ];\r\n    return items;\r\n  }\r\n\r\n  changeStep = (now) => {\r\n    this.setState({ step: now });\r\n  }\r\n\r\n  isExistCode = () => {\r\n    return typeof this.props.code === 'string';\r\n  }\r\n  isExistType = () => {\r\n    return typeof this.props.type === 'string';\r\n  }\r\n\r\n  openSelectTagsModal = () => {\r\n    this.setState({ selectTagsModal: true });\r\n  };\r\n  closeSelectTagsModal = () => {\r\n    this.setState({ selectTagsModal: false });\r\n  };\r\n\r\n  setTags = (tags) => {\r\n    this.setState({ problemTags: tags });\r\n  };\r\n  pushParamsRow = () => {\r\n    let copyParams = this.state.problemParams;\r\n    copyParams.push({ type: this.getVariableTypes()[0].value, name: '' });\r\n    this.setState({ problemParams: copyParams });\r\n  };\r\n  popParamsRow = () => {\r\n    let copyParams = this.state.problemParams;\r\n    copyParams.pop();\r\n    this.setState({ problemParams: copyParams });\r\n  };\r\n  pushTestCaseRow = () => {\r\n    let copyTestCase = this.state.problemTestCases;\r\n    copyTestCase.push({ input: '', output: '', visible: true });\r\n    this.setState({ problemTestCases: copyTestCase });\r\n  };\r\n  popTestCaseRow = () => {\r\n    let copyTestCase = this.state.problemTestCases;\r\n    copyTestCase.pop();\r\n    this.setState({ problemTestCases: copyTestCase });\r\n  };\r\n  pushChoiceRow = () => {\r\n    let copyChoices = this.state.problemChoices;\r\n    copyChoices.push('');\r\n    this.setState({ problemChoices: copyChoices });\r\n  };\r\n  popChoiceRow = () => {\r\n    let copyChoices = this.state.problemChoices;\r\n    copyChoices.pop();\r\n    this.setState({ problemChoices: copyChoices });\r\n  };\r\n\r\n  onChangeName = (e) => {\r\n    this.setState({ problemName: e.target.value });\r\n  };\r\n  onChangeDesc = (e) => {\r\n    this.setState({ problemDesc: e.target.value });\r\n  };\r\n  onChangeRest = (e) => {\r\n    this.setState({ problemRest: e.target.value });\r\n  };\r\n  onChangeEntry = (e) => {\r\n    this.setState({ problemEntry: e.target.value });\r\n  };\r\n  onChangeAnswer = (e) => {\r\n    this.setState({ problemAnswer: e.target.value });\r\n  };\r\n\r\n  printTypeSelectForm = () => {\r\n    /* Props */\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={'select_type'}>\r\n        <Button\r\n          onClick={ () => this.setState({ problemType: 'programming' }) }\r\n          classes={{\r\n            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n          }}\r\n          startIcon={<Icon className=\"icon\" path={ mdiCodeBraces } size={2.0}/>}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          <em>프로그래밍 문제</em>\r\n        </Button>\r\n        <Button\r\n          onClick={ () => this.setState({ problemType: 'short' }) }\r\n          classes={{\r\n            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n          }}\r\n          startIcon={<Icon className=\"icon\" path={ mdiLeadPencil } size={2.0}/>}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          <em>주관식 문제</em>\r\n        </Button>\r\n        <Button\r\n          onClick={ () => this.setState({ problemType: 'multiple' }) }\r\n          classes={{\r\n            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n          }}\r\n          startIcon={<Icon className=\"icon\" path={ mdiRadioboxMarked } size={2.0}/>}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          <em>객관식 문제</em>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  printProblemForm  = () => {\r\n    switch (this.state.problemType) {\r\n      case 'programming':\r\n        return this.printProgrammingForm();\r\n      case 'short':\r\n        return this.printShortForm();\r\n      case 'multiple':\r\n        return this.printMultipleForm();\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  // 프로그래밍 문제 정보입력\r\n  printProgrammingForm = () => {\r\n    return (\r\n      <div className={'problem_form'}>\r\n        <table>\r\n          {this.state.step === 0 ? this.printNameForm() : null}\r\n          {this.state.step === 1 ? this.printDescForm() : null}\r\n          {this.state.step === 2 ? this.printRestForm() : null}\r\n          {this.state.step === 3 ? this.printEntryForm() : null}\r\n          {this.state.step === 4 ? this.printReturnForm() : null}\r\n          {this.state.step === 5 ? this.printParamForm() : null}\r\n          {this.state.step === 6 ? this.printTestCaseForm() : null}\r\n          {this.state.step === 7 ? this.printSelectTagForm() : null}\r\n          {this.state.step === 8 ? this.printCompleteBtn() : null}\r\n        </table>\r\n        <div className={'stepper'}>\r\n          <SimpleStepper maxSteps={9} next={this.changeStep} back={this.changeStep} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 주관식 문제 정보입력\r\n  printShortForm = () => {\r\n    /* Props */\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={'problem_form'}>\r\n        <table>\r\n          {this.state.step === 0 ? this.printNameForm() : null}\r\n          {this.state.step === 1 ? this.printDescForm() : null}\r\n          {this.state.step === 2 ? this.printAnswerForm() : null}\r\n          {this.state.step === 3 ? this.printCompleteBtn() : null}\r\n        </table>\r\n        <div className={'stepper'}>\r\n          <SimpleStepper maxSteps={4} next={this.changeStep} back={this.changeStep} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 객관식 문제 정보입력\r\n  printMultipleForm = () => {\r\n    return (\r\n      <div className={'problem_form'}>\r\n        <table>\r\n          {this.state.step === 0 ? this.printNameForm() : null}\r\n          {this.state.step === 1 ? this.printDescForm() : null}\r\n          {this.state.step === 2 ? this.printChoiceForm() : null}\r\n          {this.state.step === 3 ? this.printAnswerForm() : null}\r\n          {this.state.step === 4 ? this.printCompleteBtn() : null}\r\n        </table>\r\n        <div className={'stepper'}>\r\n          <SimpleStepper maxSteps={5} next={this.changeStep} back={this.changeStep} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  printNameForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>문제 명칭</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <input\r\n            type={'text'}\r\n            className={'design_form input_A necessary name'}\r\n            placeholder={'Name'}\r\n            value={this.state.problemName}\r\n            onChange={this.onChangeName}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printDescForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>문제 설명</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <textarea\r\n            className={'design_form textarea_A necessary description'}\r\n            placeholder={'Description'}\r\n            value={this.state.problemDesc}\r\n            onChange={this.onChangeDesc}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printRestForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>제한사항</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <textarea\r\n            className={'design_form textarea_A necessary description'}\r\n            placeholder={'Restriction'}\r\n            value={this.state.problemRest}\r\n            onChange={this.onChangeRest}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printEntryForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>실행함수 명칭</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <input\r\n            type={'text'}\r\n            className={'design_form input_A necessary name'}\r\n            placeholder={'Entry Function Name'}\r\n            value={this.state.problemEntry}\r\n            onChange={this.onChangeEntry}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printReturnForm = () => {\r\n    return (\r\n        <tbody>\r\n        <tr>\r\n          <th><em>결과값 자료형</em></th>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            { this.printReturnFormSub() }\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n    );\r\n  };\r\n  printReturnFormSub = () => {\r\n    const items = this.getVariableTypes();\r\n    return (\r\n        <table className={'sub_table return'}>\r\n          <tbody>\r\n          <tr>\r\n            <th><em>Type</em></th>\r\n            <td>\r\n              <SimpleSelect\r\n                  start={this.state.problemReturn}\r\n                  title={'Type'}\r\n                  items={items}\r\n                  changeEvent={(event) => {\r\n                    this.setState({ problemReturn: event.target.value });\r\n                  }}\r\n              />\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n    );\r\n  };\r\n  printParamForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th>\r\n          <em>실행함수 파라미터</em>\r\n          <button className={'icon_btn'} onClick={this.pushParamsRow}><Icon path={ mdiPlus } size={0.5}/></button>\r\n          <button className={'icon_btn'} onClick={this.popParamsRow}><Icon path={ mdiMinus } size={0.5}/></button>\r\n        </th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          { this.printParamFormSub() }\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printParamFormSub = () => {\r\n    const items = this.getVariableTypes();\r\n    return (\r\n      <table className={'sub_table params'}>\r\n        <tbody>\r\n        {this.state.problemParams.map((param, index) => {\r\n          return (\r\n            <tr>\r\n              <th><em>Type</em></th>\r\n              <td>\r\n                <SimpleSelect\r\n                  start={this.state.problemParams[index].type}\r\n                  title={'Type'}\r\n                  items={items}\r\n                  changeEvent={(event) => {\r\n                    let copyParams = this.state.problemParams;\r\n                    param.type = event.target.value;\r\n                    copyParams[index] = param;\r\n\r\n                    this.setState({ problemParams: copyParams });\r\n                  }}\r\n                />\r\n              </td>\r\n              <th><em>Name</em></th>\r\n              <td>\r\n                <input\r\n                  type={'text'}\r\n                  className={'design_form input_A necessary name'}\r\n                  placeholder={'Name'}\r\n                  value={this.state.problemParams[index].name}\r\n                  onChange={(event) => {\r\n                    let copyParams = this.state.problemParams;\r\n                    param.name = event.target.value;\r\n                    copyParams[index] = param;\r\n\r\n                    this.setState({ problemParams: copyParams });\r\n                  }}\r\n                />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n  printSelectTagForm = () => {\r\n    /* Props */\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <td>\r\n          <Button\r\n            onClick={this.openSelectTagsModal}\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            <em>태그 선택</em>\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          {this.state.problemTags.map((tagName) => {\r\n            return <Tag code={tagName} size={1} />;\r\n          })}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <SimpleModal\r\n            open={this.state.selectTagsModal}\r\n            close={this.closeSelectTagsModal}\r\n            body={<SelectTags close={this.closeSelectTagsModal} setTags={this.setTags} />}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printTestCaseForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th>\r\n          <em>테스트 케이스</em>\r\n          <button className={'icon_btn'} onClick={this.pushTestCaseRow}><Icon path={ mdiPlus } size={0.5}/></button>\r\n          <button className={'icon_btn'} onClick={this.popTestCaseRow}><Icon path={ mdiMinus } size={0.5}/></button>\r\n        </th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          { this.printTestCaseFormSub() }\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printTestCaseFormSub = () => {\r\n    console.log(this.state.problemTestCases);\r\n    return (\r\n      <table className={'sub_table test_case'}>\r\n        <tbody>\r\n        {this.state.problemTestCases.map((testCase, index) => {\r\n          return (\r\n            <tr>\r\n              <th><em>Input</em></th>\r\n              <td>\r\n                <input\r\n                  type={'text'}\r\n                  className={'design_form input_A necessary name'}\r\n                  placeholder={'Input'}\r\n                  value={this.state.problemTestCases[index].input}\r\n                  onChange={(event) => {\r\n                    let copyTestCase = this.state.problemTestCases;\r\n                    testCase.input = event.target.value;\r\n                    copyTestCase[index] = testCase;\r\n\r\n                    this.setState({ problemTestCases: copyTestCase });\r\n                  }}\r\n                />\r\n              </td>\r\n              <th><em>Output</em></th>\r\n              <td>\r\n                <input\r\n                  type={'text'}\r\n                  className={'design_form input_A necessary name'}\r\n                  placeholder={'Output'}\r\n                  value={this.state.problemTestCases[index].output}\r\n                  onChange={(event) => {\r\n                    let copyTestCase = this.state.problemTestCases;\r\n                    testCase.output = event.target.value;\r\n                    copyTestCase[index] = testCase;\r\n\r\n                    this.setState({ problemTestCases: copyTestCase });\r\n                  }}\r\n                />\r\n              </td>\r\n              <th><em>Visible</em></th>\r\n              <td>\r\n                <Checkbox\r\n                  inputProps={{ 'aria-label': 'uncontrolled-checkbox' }}\r\n                  checked={this.state.problemTestCases[index].visible}\r\n                  onChange={(event) => {\r\n                    let copyTestCase = this.state.problemTestCases;\r\n                    testCase.visible = event.target.checked ? 1 : 0;\r\n                    copyTestCase[index] = testCase;\r\n\r\n                    this.setState({ problemTestCases: copyTestCase });\r\n                  }}\r\n                />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n  printAnswerForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th><em>정답</em></th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <input\r\n            type={'text'}\r\n            className={'design_form input_A necessary name'}\r\n            placeholder={'Answer'}\r\n            value={this.state.problemAnswer}\r\n            onChange={this.onChangeAnswer}\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printChoiceForm = () => {\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <th>\r\n          <em>보기</em>\r\n          <button className={'icon_btn'} onClick={this.pushChoiceRow}><Icon path={ mdiPlus } size={0.5}/></button>\r\n          <button className={'icon_btn'} onClick={this.popChoiceRow}><Icon path={ mdiMinus } size={0.5}/></button>\r\n        </th>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          { this.printChoiceFormSub() }\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n  printChoiceFormSub = () => {\r\n    return (\r\n      <table className={'sub_table choices'}>\r\n        <tbody>\r\n        {this.state.problemChoices.map((choice, index) => {\r\n          return (\r\n            <tr>\r\n              <th><em>보기 {index+1}</em></th>\r\n              <td>\r\n                <input\r\n                  type={'text'}\r\n                  className={'design_form input_A necessary name'}\r\n                  placeholder={'Choice'}\r\n                  value={this.state.problemChoices[index]}\r\n                  onChange={(event) => {\r\n                    let copyChoices = this.state.problemChoices;\r\n                    copyChoices[index] = event.target.value;\r\n\r\n                    this.setState({ problemChoices: copyChoices });\r\n                  }}\r\n                />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n  printCompleteBtn = () => {\r\n    /* Props */\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n      <tr>\r\n        <td>\r\n          <Button\r\n            onClick={this.isExistCode() ? this.modifyProblemComplete : this.addProblemComplete}\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            <em>{this.isExistCode() ? '수정 완료' : '추가 완료' }</em>\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className={'page_modal add_problem_modal'}>\r\n        { this.state.problemType === '' ? this.printTypeSelectForm() : this.printProblemForm() }\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nAddProblem.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  code: PropTypes.string,\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(AddProblem);\r\n","import React from 'react'\r\n\r\n/* Design Import */\r\nimport './Problems.scss';\r\n\r\n/* Material Import */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\nimport {\r\n  SimpleTable,\r\n  SimpleModal\r\n} from '../../components';\r\nimport AddProblem from '../AddProblem';\r\nimport { getData, putData, postData, deleteData } from '../../common'\r\n\r\n/* Data Import */\r\nimport SimpleDialog from \"../../components/SimpleDialog\";\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass Problems extends React.Component {\r\n  state = {\r\n    selectedCode: '',\r\n    selectedType: '',\r\n    addProblemModal: false,\r\n    infoProblemModal: false,\r\n    deleteProblemDialog: false,\r\n    heads: [\r\n      { id: 'name',        label: '명칭'},\r\n      { id: 'description', label: '설명'},\r\n      { id: 'type',        label: '문제 유형'},\r\n      { id: 'tags',        label: '태그' }\r\n    ],\r\n    bodys: []\r\n  }\r\n  /* Component Did Mount */\r\n  componentDidMount() {\r\n    this.setBodys();\r\n  }\r\n\r\n  setBodys = async () => {\r\n    // Problem 목록 정보 불러오기\r\n    if(this.isExistPackageCode()){\r\n      const { match } = this.props;\r\n      const packageCode = match.params.package_code;\r\n\r\n      await getData(`/api/package/${packageCode}/problem`, (res) => {\r\n        let data = res.data.success;\r\n        data.map((d, index) => {\r\n          data[index] = this.descriptionParse(d);\r\n        })\r\n        this.setState({ bodys: data });\r\n      }, (err) => {\r\n        this.setState({ bodys: [] });\r\n      });\r\n    }\r\n    else {\r\n      await getData('/api/problem', (res) => {\r\n        let data = res.data.success;\r\n        data.map((d, index) => {\r\n          data[index] = this.descriptionParse(d);\r\n        })\r\n        this.setState({ bodys: data });\r\n      }, (err) => {\r\n        this.setState({ bodys: [] });\r\n      });\r\n    }\r\n  };\r\n\r\n  descriptionParse = (data) => {\r\n    let parsed = JSON.parse(data.description);\r\n\r\n    data.description = parsed.text;\r\n    data.answer = parsed.answer;\r\n    data.choices = parsed.choices;\r\n\r\n    return data;\r\n  };\r\n\r\n  /* Method */\r\n  isExistPackageCode = () => {\r\n    const { match } = this.props;\r\n    return typeof match.params.package_code === 'string';\r\n  }\r\n  isExistAssignmentCode = () => {\r\n    const { match } = this.props;\r\n    return typeof match.params.assignment_code === 'string';\r\n  }\r\n\r\n  openAddProblemModal = () => {\r\n    this.setState({ addProblemModal: true });\r\n  };\r\n  closeAddProblemModal = () => {\r\n    this.setState({ addProblemModal: false });\r\n    this.setBodys();\r\n  };\r\n\r\n  openInfoProblemModal = () => {\r\n    this.setState({ infoProblemModal: true });\r\n  };\r\n  closeInfoProblemModal = () => {\r\n    this.setState({ infoProblemModal: false });\r\n    this.setBodys();\r\n  };\r\n\r\n  openDeleteProblemDialog = () => {\r\n    this.setState({ deleteProblemDialog: true });\r\n  }\r\n  closeDeleteProblemDialog = () => {\r\n    this.setState({ deleteProblemDialog: false });\r\n  };\r\n\r\n  // Package Code is exist event\r\n  deleteEventA = (body) => {\r\n    this.setState({ selectedCode: body.code });\r\n    this.openDeleteProblemDialog();\r\n  };\r\n\r\n  // Default event\r\n  deleteEventB = (body) => {\r\n    this.setState({ selectedCode: body.code });\r\n    this.openDeleteProblemDialog();\r\n  };\r\n\r\n  deleteAgreeA = () => {\r\n    // Package 에서 Problem 삭제\r\n    const { match } = this.props;\r\n\r\n    let packageCode = match.params.package_code;\r\n    let problemCode = this.state.selectedCode;\r\n    deleteData(` /api/package/${packageCode}/problem/${problemCode}`, (res) => {\r\n      // Package 목록 정보 다시 불러오기\r\n      this.setBodys();\r\n      this.closeDeleteProblemDialog();\r\n    }, (err) => {\r\n\r\n    });\r\n  };\r\n  deleteAgreeB = () => {\r\n    // Problem 삭제\r\n    const problemCode = this.state.selectedCode;\r\n    deleteData(`/api/problem/${problemCode}`, (res) => {\r\n      // Package 목록 정보 다시 불러오기\r\n      this.setBodys();\r\n      this.closeDeleteProblemDialog();\r\n    }, (err) => {\r\n\r\n    });\r\n  };\r\n\r\n  deleteDisagree = () => {\r\n    this.closeDeleteProblemDialog();\r\n  };\r\n\r\n  customEvent = (body) => {\r\n    const { history, match } = this.props;\r\n    history.push(`/solving/${body.code}/${match.params.assignment_code}`);\r\n  }\r\n  \r\n  infoEvent = (body) => {\r\n    this.setState({ selectedCode: body.code });\r\n    this.setState({ selectedType: body.type });\r\n    this.openInfoProblemModal();\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    /* Props */\r\n    const { classes, match } = this.props;\r\n\r\n    /* Const */\r\n    const contentPrefix = (this.isExistPackageCode() ? '현재 패키지에서 ' : '');\r\n\r\n    return (\r\n      <div className={'page problems'}>\r\n        {this.isExistPackageCode() ?\r\n          <div className={'content'} ><em>{match.params.package_code}</em></div> : <div className={'content'}>\r\n          <div className={'search_box'}>\r\n\r\n          </div>\r\n          <div className={'btn_box'}>\r\n            <Button\r\n              onClick={this.openAddProblemModal}\r\n              classes={{\r\n                root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              startIcon={<AddIcon>send</AddIcon>}\r\n            >\r\n              문제 추가\r\n            </Button>\r\n          </div>\r\n        </div>}\r\n        <div className={'content package_table'}>\r\n          <SimpleTable\r\n            heads={this.state.heads}\r\n            bodys={this.state.bodys}\r\n            customEvent={this.isExistAssignmentCode() ? this.customEvent : null}\r\n            infoEvent={this.isExistPackageCode() ? null : this.infoEvent}\r\n            deleteEvent={this.isExistPackageCode() ? (this.isExistAssignmentCode() ? null : this.deleteEventA) : this.deleteEventB}\r\n            infoModal={\r\n              <SimpleModal\r\n                title={'문제 수정'}\r\n                open={this.state.infoProblemModal}\r\n                close={this.closeInfoProblemModal}\r\n                body={<AddProblem close={this.closeInfoProblemModal} code={this.state.selectedCode} type={this.state.selectedType} />}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <SimpleModal\r\n          title={'문제 추가'} open={this.state.addProblemModal}\r\n          close={this.closeAddProblemModal}\r\n          body={<AddProblem close={this.closeAddProblemModal}/>}\r\n        />\r\n        <SimpleDialog\r\n          open={this.state.deleteProblemDialog}\r\n          onClose={this.closeDeleteProblemDialog}\r\n          data={{\r\n            title: '문제 삭제',\r\n            content: contentPrefix + this.state.selectedCode + ' 문제를 삭제하시겠습니까?',\r\n            agreeText: 'YES',\r\n            disagreeText: 'NO',\r\n            agreeEvent: this.isExistPackageCode() ? this.deleteAgreeA : this.deleteAgreeB,\r\n            disagreeEvent: this.deleteDisagree\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(Problems);\r\n","import React from 'react';\r\n\r\n/* Design Import */\r\nimport './Solving.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n    Add as AddIcon\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\nimport { getData, postData } from '../../common'\r\nimport {SimpleSelect} from \"../../components\";\r\nimport { solveFile } from '../../common'\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        padding: '5px 10px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n});\r\n\r\nclass Solving extends React.Component {\r\n    /* State */\r\n    state = {\r\n        problemType: '',\r\n        problemName: '',\r\n        problemDesc: '',\r\n        problemRest: '',\r\n        problemEntry: '',\r\n        problemAnswer: '',\r\n        problemTags: [],\r\n        problemChoices: [],\r\n        selectedLanguage: 'python',\r\n        code: '',\r\n        executeResult: ''\r\n    }\r\n\r\n    /* Components */\r\n\r\n    /* Method */\r\n    async componentDidMount() {\r\n        const { match } = this.props;\r\n        let problemCode = match.params.problem_code;\r\n\r\n        await getData(`/api/problem/${problemCode}`, async (res) => {\r\n            const data = res.data.success;\r\n            let parsed = JSON.parse(data.description);\r\n\r\n            this.setState({\r\n                problemType: data.type,\r\n                problemName: data.name,\r\n                problemDesc: parsed.text,\r\n                problemRest: data.restriction,\r\n                problemEntry: data.entry,\r\n                problemAnswer: parsed.answer !== 'undefined' ? parsed.answer : '',\r\n                problemTags: data.tags,\r\n                problemChoices: parsed.choices !== 'undefined' ? parsed.choices : [],\r\n            });\r\n            this.getDefaultCodeForm();\r\n        }, (err) => {\r\n\r\n        });\r\n    }\r\n\r\n    // 테스트 실행\r\n    testStart = () => {\r\n        const { match } = this.props;\r\n        let code = this.state.code.split('\\n');\r\n        let srcFile = new File(code, \"fileName\")\r\n        solveFile(match.params.problem_code, srcFile, this.state.selectedLanguage, (res) => {\r\n            const cases = res.data.success.cases;\r\n            let text = '';\r\n\r\n            cases.map((res, index) => {\r\n                text += 'Test case ' + (index+1) + ' : ' + (res.result ? '통과' : '실패');\r\n            })\r\n            this.setState({ executeResult: text });\r\n        }, (err) => {\r\n\r\n        });\r\n    };\r\n\r\n    // 채점 및 제출\r\n    sendResult = () => {\r\n        const { match } = this.props;\r\n        const assignmentCode = match.params.assignment_code;\r\n        const problemCode = match.params.problem_code;\r\n\r\n        let sendData = {\r\n\r\n        };\r\n\r\n        postData(`/assignment/${assignmentCode}/submission/${problemCode}`, sendData, (res) => {\r\n\r\n        }, (err) => {\r\n\r\n        });\r\n    };\r\n\r\n    getLanguageTypes = () => {\r\n        let items = [\r\n            { label: 'Python', value: 'python' }\r\n        ];\r\n        return items;\r\n    }\r\n\r\n    getDefaultCodeForm = () => {\r\n        const { match } = this.props;\r\n        getData(`/api/problem/${match.params.problem_code}/signature/${this.state.selectedLanguage}`, (res) => {\r\n            this.setState({ code: res.data.success });\r\n        }, (err) => {\r\n            this.setState({ code: '' });\r\n        });\r\n    }\r\n\r\n    onChangeCode = (event) => {\r\n        this.setState({ code: event.target.value });\r\n    }\r\n    onChangeResult = (event) => {\r\n        this.setState({ executeResult: event.target.value });\r\n    }\r\n\r\n    printSolvingForm = () => {\r\n        switch(this.state.problemType) {\r\n            case 'programming': // 프로그래밍 문제\r\n                return this.printProgrammingSolvingForm();\r\n            case 'short': // 주관식 문제\r\n                return this.printShortSolvingForm();\r\n            case 'multiple': // 객관식 문제\r\n                return this.printMultipleSolvingForm();\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    printProgrammingSolvingForm = () => {\r\n        /* Props */\r\n        const { classes } = this.props;\r\n\r\n        const items = this.getLanguageTypes();\r\n\r\n        return (\r\n            <div className=\"page_wrap layout solving\">\r\n                <div className=\"box problem_title flex-align middle\">\r\n                    <em>{ this.state.problemName }</em>\r\n                    <span className={'select_language'}>\r\n                        <SimpleSelect\r\n                            title={'Language'}\r\n                            items={items}\r\n                            start={this.state.selectedLanguage}\r\n                            changeEvent={(event) => {\r\n                                this.setState({ selectedLanguage: event.target.value });\r\n                            }}\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div className=\"box problem_desc\">\r\n                    <em className=\"title\">문제 설명</em>\r\n                    <div className=\"description\">\r\n                        <em>{ this.state.problemDesc }</em>\r\n                    </div>\r\n                    <em className=\"title\">제약조건</em>\r\n                    <div className=\"description\">\r\n                        <em>{ this.state.problemRest }</em>\r\n                    </div>\r\n                </div>\r\n                <div className=\"box code_title flex-align middle\"><em>Solution</em></div>\r\n                <div className=\"box code\">\r\n                    <textarea\r\n                        placeholder={'Code...'}\r\n                        value={this.state.code}\r\n                        onChange={this.onChangeCode}\r\n                    />\r\n                </div>\r\n                <div className=\"box execute_title flex-align middle\"><em>Execute Result</em></div>\r\n                <div className=\"box result\">\r\n                    <textarea\r\n                        placeholder={'Code...'}\r\n                        value={this.state.executeResult}\r\n                        onChange={this.onChangeResult}\r\n                    />\r\n                </div>\r\n                <div className=\"box buttons flex-align middle\">\r\n                    <Button\r\n                        onClick={this.testStart}\r\n                        classes={{\r\n                            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<AddIcon>send</AddIcon>}\r\n                    >\r\n                        테스트 실행\r\n                    </Button>\r\n                    <Button\r\n                        onClick={this.sendResult}\r\n                        classes={{\r\n                            root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                            label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<AddIcon>send</AddIcon>}\r\n                    >\r\n                        채점 및 제출\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    printShortSolvingForm = () => {\r\n        return (\r\n            <div className=\"page_wrap layout solving\">\r\n\r\n            </div>\r\n        );\r\n    };\r\n\r\n    printMultipleSolvingForm = () => {\r\n        return (\r\n            <div className=\"page_wrap layout solving\">\r\n\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return this.printSolvingForm();\r\n    };\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(Solving);\r\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport './NotFoundCover.scss';\n\nconst NotFoundCover = props => {\n  const { history } = props;\n\n  const handleClick = () => {\n    history.goBack();\n  };\n\n  return (\n    <div className={'not_found_cover'}>\n      <button onClick={handleClick}>\n        Go Back\n      </button>\n    </div>\n  );\n};\n\nexport default withRouter(NotFoundCover);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SelectTags.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport {Button} from \"@material-ui/core\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\n/* Custom Import */\r\nimport Tag from \"../../components/Tag\";\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass SelectTags extends React.Component {\r\n  /* State */\r\n  state = {\r\n    selectList: []\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  selectTag = (tagName) => {\r\n    if(!this.state.selectList.includes(tagName))\r\n      this.setState({ selectList: [...this.state.selectList, tagName] });\r\n  }\r\n\r\n  selectComplete = () => {\r\n    this.props.setTags(this.state.selectList);\r\n    this.props.close();\r\n  }\r\n\r\n  render () {\r\n    const { classes } = this.props;\r\n    const tagList = ['Python', 'Ruby', 'Go', 'Java', 'JS', 'Kotlin', 'Swift', 'C', 'CPP', 'CS']\r\n    return (\r\n      <div className={'select_tags'}>\r\n        <div className={'tag_icons'}>\r\n          {tagList.map((tagName) => {\r\n            return <button onClick={() => { this.selectTag(tagName) }} className={this.state.selectList.includes(tagName) ? 'tag selected' : 'tag'}>\r\n              <Tag code={tagName} size={1} />\r\n            </button>\r\n          })}\r\n        </div>\r\n        <div className={'btn_box'}>\r\n          <Button\r\n            onClick={this.selectComplete}\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            <em>선택 완료</em>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelectTags.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  setTags: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(SelectTags);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SelectProblems.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport {Button} from \"@material-ui/core\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\n/* Custom Import */\r\nimport { getData } from \"../../common\";\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass SelectProblems extends React.Component {\r\n  /* State */\r\n  state = {\r\n    selectList: []\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  getProblemList = async () => {\r\n    let problems = [];\r\n    await getData('/api/problem', (res) => {\r\n      let problems = res.data.success;\r\n    }, (err) => {\r\n\r\n    });\r\n    return problems;\r\n  }\r\n\r\n  isSelected = (problem) => {\r\n    let isExist = false;\r\n    this.state.selectList.map((p) => {\r\n      if(problem.code === p.code && problem.name === p.name)\r\n        isExist = true;\r\n    });\r\n    return isExist;\r\n  }\r\n\r\n  selectProblem = (problem) => {\r\n    if(!this.isSelected(problem))\r\n      this.setState({ selectList: [...this.state.selectList, problem] });\r\n  }\r\n\r\n  selectComplete = () => {\r\n    this.props.setProblems(this.state.selectList);\r\n    this.props.close();\r\n  }\r\n\r\n  render () {\r\n    const { classes } = this.props;\r\n    const problemList = this.getProblemList();\r\n    return (\r\n      <div className={'select_problems'}>\r\n        <div className={'problem_icons'}>\r\n          {problemList.map((problem) => {\r\n            return <button onClick={() => { this.selectProblem(problem) }} className={this.isSelected(problem) ? 'problem selected' : 'problem'}>\r\n              <em>{problem.name}</em>\r\n            </button>\r\n          })}\r\n        </div>\r\n        <div className={'btn_box'}>\r\n          <Button\r\n            onClick={this.selectComplete}\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            <em>선택 완료</em>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelectProblems.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  setProblems: PropTypes.func.isRequired,\r\n  code: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(SelectProblems);\r\n","import React from 'react'\r\n\r\n/* Design Import */\r\nimport './Scoring.scss';\r\n\r\n/* Material Import */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n    Add as AddIcon\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\nimport {\r\n    SimpleTable,\r\n    SimpleModal\r\n} from '../../components';\r\nimport AddProblem from '../AddProblem';\r\nimport { getData, putData, postData, deleteData } from '../../common'\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        padding: '5px 10px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n});\r\n\r\nclass Scoring extends React.Component {\r\n    state = {\r\n        selectedCode: '',\r\n        selectedType: '',\r\n        addProblemModal: false,\r\n        infoProblemModal: false,\r\n        deleteProblemDialog: false,\r\n        heads: [\r\n            { id: 'name',        label: '명칭'},\r\n            { id: 'description', label: '설명'},\r\n            { id: 'type',        label: '문제 유형'},\r\n            { id: 'tags',        label: '태그' }\r\n        ],\r\n        bodys: []\r\n    }\r\n    /* Component Did Mount */\r\n    componentDidMount() {\r\n        this.setBodys();\r\n    }\r\n\r\n    setBodys = async () => {\r\n        // Problem 목록 정보 불러오기\r\n        if(this.isExistPackageCode()){\r\n            const { match } = this.props;\r\n            const packageCode = match.params.package_code;\r\n\r\n            await getData(`/api/package/${packageCode}/problem`, (res) => {\r\n                let data = res.data.success;\r\n                data.map((d, index) => {\r\n                    data[index] = this.descriptionParse(d);\r\n                })\r\n                this.setState({ bodys: data });\r\n            }, (err) => {\r\n                this.setState({ bodys: [] });\r\n            });\r\n        }\r\n        else {\r\n            await getData('/api/problem', (res) => {\r\n                let data = res.data.success;\r\n                data.map((d, index) => {\r\n                    data[index] = this.descriptionParse(d);\r\n                })\r\n                this.setState({ bodys: data });\r\n            }, (err) => {\r\n                this.setState({ bodys: [] });\r\n            });\r\n        }\r\n    };\r\n\r\n    descriptionParse = (data) => {\r\n        let parsed = JSON.parse(data.description);\r\n\r\n        data.description = parsed.text;\r\n        data.answer = parsed.answer;\r\n        data.choices = parsed.choices;\r\n\r\n        return data;\r\n    };\r\n\r\n    /* Method */\r\n    isExistPackageCode = () => {\r\n        const { match } = this.props;\r\n        return typeof match.params.package_code === 'string';\r\n    }\r\n\r\n    openAddProblemModal = () => {\r\n        this.setState({ addProblemModal: true });\r\n    };\r\n    closeAddProblemModal = () => {\r\n        this.setState({ addProblemModal: false });\r\n        this.setBodys();\r\n    };\r\n\r\n    openInfoProblemModal = () => {\r\n        this.setState({ infoProblemModal: true });\r\n    };\r\n    closeInfoProblemModal = () => {\r\n        this.setState({ infoProblemModal: false });\r\n        this.setBodys();\r\n    };\r\n\r\n    openDeleteProblemDialog = () => {\r\n        this.setState({ deleteProblemDialog: true });\r\n    }\r\n    closeDeleteProblemDialog = () => {\r\n        this.setState({ deleteProblemDialog: false });\r\n    };\r\n\r\n    // Package Code is exist event\r\n    deleteEventA = (body) => {\r\n        this.setState({ selectedCode: body.code });\r\n        this.openDeleteProblemDialog();\r\n    };\r\n\r\n    // Default event\r\n    deleteEventB = (body) => {\r\n        this.setState({ selectedCode: body.code });\r\n        this.openDeleteProblemDialog();\r\n    };\r\n\r\n    deleteAgreeA = () => {\r\n        // Package 에서 Problem 삭제\r\n        const { match } = this.props;\r\n\r\n        let packageCode = match.params.package_code;\r\n        let problemCode = this.state.selectedCode;\r\n        deleteData(` /api/package/${packageCode}/problem/${problemCode}`, (res) => {\r\n            // Package 목록 정보 다시 불러오기\r\n            this.setBodys();\r\n            this.closeDeleteProblemDialog();\r\n        }, (err) => {\r\n\r\n        });\r\n    };\r\n    deleteAgreeB = () => {\r\n        // Problem 삭제\r\n        const problemCode = this.state.selectedCode;\r\n        deleteData(`/api/problem/${problemCode}`, (res) => {\r\n            // Package 목록 정보 다시 불러오기\r\n            this.setBodys();\r\n            this.closeDeleteProblemDialog();\r\n        }, (err) => {\r\n\r\n        });\r\n    };\r\n\r\n    deleteDisagree = () => {\r\n        this.closeDeleteProblemDialog();\r\n    };\r\n\r\n    infoEvent = (body) => {\r\n        this.setState({ selectedCode: body.code });\r\n        this.setState({ selectedType: body.type });\r\n        this.openInfoProblemModal();\r\n    };\r\n\r\n    /* Render */\r\n    render() {\r\n        /* Props */\r\n        const { classes, match } = this.props;\r\n\r\n        /* Const */\r\n        const contentPrefix = (this.isExistPackageCode() ? '현재 패키지에서 ' : '');\r\n\r\n        return (\r\n            <div className={'page problems'}>\r\n                {this.isExistPackageCode() ?\r\n                    <div className={'content'} ><em>{match.params.package_code}</em></div> : <div className={'content'}>\r\n                        <div className={'search_box'}>\r\n\r\n                        </div>\r\n                        <div className={'btn_box'}>\r\n                            <Button\r\n                                onClick={this.openAddProblemModal}\r\n                                classes={{\r\n                                    root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                                    label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                                }}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                startIcon={<AddIcon>send</AddIcon>}\r\n                            >\r\n                                문제 추가\r\n                            </Button>\r\n                        </div>\r\n                    </div>}\r\n                <div className={'content package_table'}>\r\n                    <SimpleTable\r\n                        heads={this.state.heads}\r\n                        bodys={this.state.bodys}\r\n                        deleteEvent={this.isExistPackageCode() ? this.deleteEventA : this.deleteEventB}\r\n                        infoEvent={this.isExistPackageCode() ? null : this.infoEvent}\r\n                        infoModal={\r\n                            <SimpleModal\r\n                                title={'문제 수정'}\r\n                                open={this.state.infoProblemModal}\r\n                                close={this.closeInfoProblemModal}\r\n                                body={<AddProblem close={this.closeInfoProblemModal} code={this.state.selectedCode} type={this.state.selectedType} />}\r\n                            />\r\n                        }\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(Scoring);\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\n/* Design Import */\r\nimport './Assignments.scss';\r\n\r\n/* Material Import */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n  Add as AddIcon\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\nimport {\r\n  SimpleTable,\r\n  SimpleModal,\r\n  SimpleDialog,\r\n  SimpleStepper\r\n} from '../../components';\r\nimport AddProblem from '../AddProblem';\r\nimport { getData, putData, postData, deleteData } from '../../common'\r\n\r\n/* Data Import */\r\nimport {SelectPackage} from \"../index\";\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass AddAssignment extends React.Component {\r\n  state = {\r\n    package: '',\r\n    title: '',\r\n    description: '',\r\n    step: 0,\r\n    modalFlag: false\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  createAssignment = () => {\r\n    let sendData = {\r\n      package: this.state.package,\r\n      title: this.state.title,\r\n      description: this.state.description\r\n    }\r\n\r\n    const courseCode = this.props.course;\r\n    postData(`/api/course/${courseCode}/assignment`, sendData, (res) => {\r\n      setTimeout(() => {\r\n        this.props.close();\r\n      }, 500);\r\n    }, (err) => {\r\n\r\n    });\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({ modalFlag: true });\r\n  }\r\n  closeModal = () => {\r\n    this.setState({ modalFlag: false });\r\n  }\r\n\r\n  printNameForm = () => {\r\n    return (\r\n        <tbody>\r\n        <tr>\r\n          <th><em>과제 명칭</em></th>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <input\r\n                type={'text'}\r\n                className={'design_form input_A necessary name'}\r\n                placeholder={'명칭'}\r\n                value={this.state.title}\r\n                onChange={(e) => {\r\n                  this.setState({ title: e.target.value })\r\n                }}\r\n            />\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n    );\r\n  }\r\n\r\n  printDescForm = () => {\r\n    return (\r\n        <tbody>\r\n        <tr>\r\n          <th><em>과제 설명</em></th>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <textarea\r\n                className={'design_form textarea_A necessary description'}\r\n                placeholder={'설명'}\r\n                value={this.state.description}\r\n                onChange={(e) => {\r\n                  this.setState({ description: e.target.value });\r\n                }}\r\n            />\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n    );\r\n  }\r\n\r\n  printSelPacForm = () => {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n        <tbody>\r\n        <tr>\r\n          <td>\r\n            <Button\r\n                onClick={this.openModal}\r\n                classes={{\r\n                  root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                  label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                }}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n            >\r\n              <em>패키지 선택</em>\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <em>{ this.state.package }</em>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <SimpleModal\r\n                open={this.state.modalFlag}\r\n                close={this.closeModal}\r\n                body={<SelectPackage close={this.closeModal} setPackage={(packageCode) => {\r\n                  this.state.package = packageCode;\r\n                }} />}\r\n            />\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n    );\r\n  }\r\n\r\n  printCompleteForm = () => {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n        <tbody>\r\n        <tr>\r\n          <td>\r\n            <Button\r\n                onClick={this.createAssignment}\r\n                classes={{\r\n                  root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                  label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                }}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n            >\r\n              <em>{'추가 완료'}</em>\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n    )\r\n  }\r\n\r\n  changeStep = (now) => {\r\n    this.setState({ step: now });\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n        <div className={'page_modal modal_design add_course'}>\r\n          <table>\r\n            {this.state.step === 0 ? this.printNameForm() : null}\r\n            {this.state.step === 1 ? this.printDescForm() : null}\r\n            {this.state.step === 2 ? this.printSelPacForm() : null}\r\n            {this.state.step === 3 ? this.printCompleteForm() : null}\r\n          </table>\r\n          <div className={'stepper'}>\r\n            <SimpleStepper maxSteps={4} next={this.changeStep} back={this.changeStep} />\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddAssignment.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  course: PropTypes.string.isRequired,\r\n  code: PropTypes.string\r\n};\r\n\r\nclass Assignments extends React.Component {\r\n  state = {\r\n    modalFlagA: false,\r\n    modalFlagB: false,\r\n    dialogFlag: false,\r\n    selectedAssignment: '',\r\n    heads: [\r\n      { id: 'title',       label: '명칭'},\r\n      { id: 'description', label: '설명'},\r\n    ],\r\n    bodys: []\r\n  }\r\n  /* Component Did Mount */\r\n  componentDidMount() {\r\n    this.setBody();\r\n  }\r\n\r\n  setBody = async () => {\r\n    const { match } = this.props;\r\n    const courseCode = match.params.course_code;\r\n\r\n    await getData(`/api/course/${courseCode}/assignment`, (res) => {\r\n      this.setState({ bodys: res.data.success });\r\n    }, (err) => {\r\n      this.setState({ bodys: [] });\r\n    });\r\n  }\r\n\r\n  isStudent = () => {\r\n    return true;\r\n  }\r\n\r\n  openModalA = () => {\r\n    this.setState({ modalFlagA: true });\r\n  }\r\n  closeModalA = () => {\r\n    this.setState({ modalFlagA: false });\r\n    this.setBody();\r\n  }\r\n\r\n  openModalB = (assignmentCode) => {\r\n    this.setState({\r\n      selectedAssignment: assignmentCode,\r\n      modalFlagB: true\r\n    });\r\n  }\r\n  closeModalB = () => {\r\n    this.setState({ modalFlagB: false });\r\n    this.setBody();\r\n  }\r\n\r\n  openDialog = (assignmentCode) => {\r\n    this.setState({\r\n      selectedAssignment: assignmentCode,\r\n      dialogFlagA: true\r\n    });\r\n  }\r\n  closeDialog = () => {\r\n    this.setState({ dialogFlagB: false });\r\n    this.setBody();\r\n  }\r\n\r\n  customEvent = (body) => {\r\n    const { history } = this.props;\r\n    history.push(`/problems/${body.package}/${body.code}`);\r\n  }\r\n\r\n  infoEvent = (body) => {\r\n    // 미완\r\n    this.openModalB(body.code);\r\n  };\r\n\r\n  deleteEvent = (body) => {\r\n    this.setState({\r\n      dialogFlag: true\r\n    });\r\n  }\r\n  agreeEvent = () => {\r\n\r\n  }\r\n  disagreeEvent = () => {\r\n\r\n  }\r\n\r\n  /* Render */\r\n  render() {\r\n    /* Props */\r\n    const { classes, match } = this.props;\r\n\r\n    /* Const */\r\n\r\n    return (\r\n        <div className={'page problems'}>\r\n          {this.isStudent() ? null : <div className={'content'}>\r\n                <div className={'btn_box'}>\r\n                  <Button\r\n                      onClick={this.openModalA}\r\n                      classes={{\r\n                        root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                        label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                      }}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      startIcon={<AddIcon>send</AddIcon>}\r\n                  >\r\n                    과제 추가\r\n                  </Button>\r\n                </div>\r\n              </div>}\r\n          <div className={'content package_table'}>\r\n            <SimpleTable\r\n                heads={this.state.heads}\r\n                bodys={this.state.bodys}\r\n                customEvent={this.isStudent() ? this.customEvent : null}\r\n                deleteEvent={this.isStudent() ? null : this.deleteEvent}\r\n                infoEvent={this.isStudent() ? null : this.infoEvent}\r\n                infoModal={\r\n                  <SimpleModal\r\n                      title={'과제 수정'}\r\n                      open={this.state.modalFlagB}\r\n                      close={this.closeModalB}\r\n                      body={\r\n                        <AddAssignment\r\n                            classes={classes}\r\n                            close={this.closeModalB}\r\n                            course={this.props.match.params.course_code}\r\n                            code={this.state.selectedAssignment}\r\n                        />}\r\n                  />\r\n                }\r\n            />\r\n          </div>\r\n\r\n          <SimpleModal\r\n              title={'과제 추가'} open={this.state.modalFlagA}\r\n              close={this.closeModalA}\r\n              body={\r\n                <AddAssignment\r\n                    classes={classes}\r\n                    close={this.closeModalA}\r\n                    course={this.props.match.params.course_code}\r\n                />}\r\n          />\r\n          <SimpleDialog\r\n              open={this.state.dialogFlag}\r\n              onClose={this.closeDialog}\r\n              data={{\r\n                title: '과제 삭제',\r\n                content: '선택한 과제를 삭제하시겠습니까?',\r\n                agreeText: 'YES',\r\n                disagreeText: 'NO',\r\n                agreeEvent: this.agreeEvent,\r\n                disagreeEvent: this.disagreeEvent\r\n              }}\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(Assignments);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\n\r\n/* Design Import */\r\nimport './MainRoom.scss';\r\n\r\n/* Icon Import */\r\nimport {\r\n    mdiCodeBraces,\r\n    mdiLeadPencil ,\r\n    mdiRadioboxMarked,\r\n    mdiPlus,\r\n    mdiMinus,\r\n    mdiEyeOutline,\r\n    mdiTrashCanOutline\r\n} from '@mdi/js';\r\nimport Icon from \"@mdi/react\";\r\n\r\n/* Material Import */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n    Add,\r\n    Add as AddIcon\r\n} from '@material-ui/icons';\r\n\r\n/* Custom Import */\r\nimport {\r\n  SimpleTable,\r\n  SimpleModal\r\n} from '../../components';\r\nimport AddProblem from '../AddProblem';\r\nimport { getData, putData, postData, deleteData, getSession } from '../../common'\r\nimport SimpleDialog from \"../../components/SimpleDialog\";\r\nimport SimpleStepper from \"../../components/SimpleStepper\";\r\n\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\n// 강의 추가 Modal\r\nclass AddCourse extends React.Component {\r\n    state = {\r\n        name: '',\r\n        desc: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.code) {\r\n           // DB 처리 - 코드에 해당되는 강의 정보 불러오기\r\n        }\r\n    }\r\n\r\n    createCourse = () => {\r\n        this.props.close();\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={'page_modal modal_design add_course'}>\r\n                <table>\r\n                    <tr>\r\n                        <th><em>강의 명칭</em></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <input\r\n                                type={'text'}\r\n                                className={'design_form input_A necessary name'}\r\n                                placeholder={'명칭'}\r\n                                value={this.state.name}\r\n                                onChange={(e) => {\r\n                                    this.setState({ name: e.target.value })\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><em>강의 설명</em></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <textarea\r\n                                className={'design_form textarea_A necessary description'}\r\n                                placeholder={'설명'}\r\n                                value={this.state.desc}\r\n                                onChange={(e) => {\r\n                                    this.setState({ desc: e.target.value });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <Button\r\n                                onClick={this.createCourse}\r\n                                classes={{\r\n                                    root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                                    label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                                }}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                <em>{ this.props.code ? '강의 수정' : '강의 개설' }</em>\r\n                            </Button>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddCourse.propTypes = {\r\n    close: PropTypes.func.isRequired,\r\n    code: PropTypes.string\r\n};\r\n\r\nclass QuestionManagement extends React.Component {\r\n    state = {\r\n        selectedAssignment: '',\r\n        maxSteps: 1,\r\n        step: 1\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    isStudent = () => {\r\n        return false;\r\n    }\r\n\r\n    addMaxSteps = () => {\r\n        this.setState({ maxSteps: (this.state.maxSteps + 1) });\r\n    }\r\n\r\n    printAssignmentList = () => {\r\n\r\n    };\r\n\r\n    printQuestionList = () => {\r\n\r\n    }\r\n\r\n    printQuestionForm = () => {\r\n\r\n    }\r\n\r\n    printAnswerForm = () => {\r\n\r\n    }\r\n\r\n    changeStep = (now) => {\r\n        this.setState({ step: now });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'question_management'}>\r\n                <table>\r\n                    {this.state.step === 0 ? this.printAssignmentList() : null}\r\n                    {this.state.step === 1 ? this.printQuestionList() : null}\r\n                    {this.state.step === 2 ? (this.isStudent() ? this.printQuestionForm() : this.printAnswerForm) : null}\r\n\r\n                </table>\r\n                <div className={'stepper'}>\r\n                    <SimpleStepper maxSteps={this.state.maxSteps} next={this.changeStep} back={this.changeStep} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MainRoom extends React.Component {\r\n  /* State */\r\n  state = {\r\n      session: '',\r\n      courseList: [],\r\n      modalFlagA: false,\r\n      modalFlagB: false,\r\n      dialogFlag: false,\r\n      selectedCourseCode : ''\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  async componentDidMount() {\r\n      let tmp = await getSession(()=>{})\r\n      console.log(tmp)\r\n      this.setState({ session: tmp.data });\r\n      await getData('/api/my-course', (res) => {\r\n          this.setState({ courseList: res.data.success });\r\n      }, (err) => {\r\n          this.setState({ packList: [] });\r\n          console.log('Error ++++++++++');\r\n      });\r\n  }\r\n\r\n  openModalA = () => {\r\n      this.setState({ modalFlagA: true });\r\n  }\r\n  closeModalA = () => {\r\n      this.setState({ modalFlagA: false });\r\n  }\r\n\r\n  openModalB = (courseCode) => {\r\n      this.setState({\r\n          selectedCourseCode: courseCode,\r\n          modalFlagB: true\r\n      });\r\n  }\r\n  closeModalB = () => {\r\n      this.setState({ modalFlagB: false });\r\n  }\r\n\r\n  openDialog = (courseCode) => {\r\n      this.setState({\r\n          selectedCourseCode: courseCode,\r\n          dialogFlag: true\r\n      });\r\n  }\r\n  closeDialog = () => {\r\n      this.setState({ dialogFlag: false });\r\n  }\r\n  agreeEvent = () => {\r\n      let courseCode = this.state.selectedCourseCode;\r\n\r\n      // DB 처리 - 강의 폐강\r\n  }\r\n  disagreeEvent = () => {\r\n      this.closeDialog();\r\n  }\r\n\r\n  printCourseCard = (course) => {\r\n      return (\r\n          <span className={'course_card_box'}>\r\n              <span className={'course_card'}>\r\n              <div className={'title'}>\r\n                  <em>{ course.name }</em>\r\n                  <span>\r\n                      <button className={'icon_btn'} onClick={() => { this.openModalB(course.code) }}>\r\n                          <Icon className=\"icon\" path={ mdiEyeOutline} size={0.7}/>\r\n                      </button>\r\n                      <button className={'icon_btn'} onClick={() => { this.openDialog(course.code) }}>\r\n                          <Icon className=\"icon\" path={ mdiTrashCanOutline } size={0.7}/>\r\n                      </button>\r\n                  </span>\r\n              </div>\r\n              <div className={'description'}>{ course.description }</div>\r\n                  { this.printIconButtons(course.code) }\r\n          </span>\r\n          </span>\r\n      );\r\n  };\r\n  printIconButtons = (courseCode) => {\r\n      /*\r\n      * 학생: 질문, 미팅룸, 출석, 과제\r\n      * 교수: 질문, 미팅룸, 출석정보 수정, 과제 관리, 강의정보 수정\r\n      * */\r\n      console.log(this.state.session)\r\n      const userCode = this.state.session.success.user.code;\r\n      const authCode = this.state.session.success.auth.code;\r\n      const iconSize = 1.0;\r\n\r\n      return (\r\n          <div className={'icon_buttons'}>\r\n              <button className={'icon_btn'}>\r\n                  <Icon className=\"icon\" path={ mdiCodeBraces } size={iconSize}/>\r\n                  <em>질문 관리</em>\r\n              </button>\r\n              <button className={'icon_btn'}>\r\n                  <Icon className=\"icon\" path={ mdiCodeBraces } size={iconSize}/>\r\n                  <em>출석정보 수정</em>\r\n              </button>\r\n              <Link to={`/roomPage/${courseCode}/${userCode}/${authCode}`}>\r\n                  <button className={'icon_btn'}>\r\n                      <Icon className=\"icon\" path={ mdiCodeBraces } size={iconSize}/>\r\n                      <em>미팅 룸</em>\r\n                  </button>\r\n              </Link>\r\n              <Link to={`/assignments/${courseCode}`}>\r\n                  <button className={'icon_btn'}>\r\n                      <Icon className=\"icon\" path={ mdiCodeBraces } size={iconSize}/>\r\n                      <em>과제 관리</em>\r\n                  </button>\r\n              </Link>\r\n          </div>\r\n      );\r\n  };\r\n\r\n  render() {\r\n    /* Props */\r\n    const { classes, match } = this.props;\r\n\r\n    /* Const */\r\n\r\n    return (\r\n        <div className={'page main_room'}>\r\n          <div className={'content'} >\r\n            <div className={'btn_box'}>\r\n              <Button\r\n                  onClick={this.openModalA}\r\n                  classes={{\r\n                    root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n                    label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n                  }}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  startIcon={<AddIcon>send</AddIcon>}\r\n              >\r\n                강의 개설\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className={'content course_list'}>\r\n              {this.state.courseList.map((course) => {\r\n                  return this.printCourseCard(course);\r\n              })}\r\n          </div>\r\n\r\n          <SimpleModal\r\n              title={'강의 개설'} open={this.state.modalFlagA}\r\n              close={this.closeModalA}\r\n              body={<AddCourse classes={classes} close={this.closeModalA}/>}\r\n          />\r\n          <SimpleModal\r\n              title={'강의 수정'} open={this.state.modalFlagB}\r\n              close={this.closeModalB}\r\n              body={<AddCourse classes={classes} close={this.closeModalB} code={this.state.selectedCourseCode}/>}\r\n          />\r\n          <SimpleDialog\r\n              open={this.state.dialogFlag}\r\n              onClose={this.closeDialog}\r\n              data={{\r\n                  title: '강의 폐강',\r\n                  content: '선택한 강의를 폐강하시겠습니까?',\r\n                  agreeText: 'YES',\r\n                  disagreeText: 'NO',\r\n                  agreeEvent: this.agreeEvent,\r\n                  disagreeEvent: this.disagreeEvent\r\n              }}\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(MainRoom);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Design Import */\r\nimport './SelectPackage.scss';\r\n\r\n/* Icon Import */\r\n\r\n/* Material Import */\r\nimport {Button} from \"@material-ui/core\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport {getData} from \"../../common\";\r\n\r\n/* Custom Import */\r\n\r\n/* Const */\r\nconst useStyles = (thema) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nclass SelectPackage extends React.Component {\r\n  /* State */\r\n  state = {\r\n    packList: []\r\n  }\r\n\r\n  /* Components */\r\n\r\n  /* Method */\r\n  async componentDidMount() {\r\n    await getData('/api/package', (res) => {\r\n      this.setState({ packList: res.data.success });\r\n    }, (err) => {\r\n      this.setState({ packList: [] });\r\n      console.log('Error ++++++++++');\r\n    });\r\n  }\r\n\r\n  select = (packageCode) => {\r\n    this.props.setPackage(packageCode);\r\n    this.props.close();\r\n  }\r\n\r\n  render () {\r\n    const { classes } = this.props;\r\n    const packList = this.state.packList;\r\n    return (\r\n      <div className={'select_tags'}>\r\n        <div className={'tag_icons'}>\r\n          {packList.map((pack) => {\r\n            return <button onClick={() => { this.select(pack.code) }} className={'tag'}>\r\n              <em>{ pack.name }</em>\r\n            </button>\r\n          })}\r\n        </div>\r\n        <div className={'btn_box'}>\r\n          <Button\r\n            onClick={this.selectComplete}\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n              label: classes.label, // class name, e.g. `classes-nesting-label-x`\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            <em>선택 완료</em>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelectPackage.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n  setPackage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(SelectPackage);\r\n","import axios from 'axios';\n\nconst client = axios.create();\n\n/*\n  글로벌 설정 예시:\n  \n  // API 주소를 다른 곳으로 사용함\n  client.defaults.baseURL = 'https://external-api-server.com/' \n\n  // 헤더 설정\n  client.defaults.headers.common['Authorization'] = 'Bearer a1b2c3d4';\n\n  // 인터셉터 설정\n  axios.intercepter.response.use(\\\n    response => {\n      // 요청 성공 시 특정 작업 수행\n      return response;\n    }, \n    error => {\n      // 요청 실패 시 특정 작업 수행\n      return Promise.reject(error);\n    }\n  })  \n*/\n\nexport default client;\n","import client from './client';\r\n\r\nconst ip = 'http://localhost:4000';\r\n//const address = ip.concat(\" \", URL);\r\n\r\n//세션 정보\r\n//export const getSession = () => client.get('/auth/session');\r\nexport const getSession = () => {\r\n    return {\r\n        data : {\r\n            user: {\r\n                code: 'USER000002'\r\n            },\r\n            auth: {\r\n                authority_code: 'AUTH000002'\r\n            }\r\n        }\r\n    }\r\n};\r\n//개인별 강의정보 받기\r\nexport const getUserCourse = async (user_code) =>\r\n  await client.get(ip + '/testCourseProf/' + user_code);\r\n//강좌별 강의정보 받기\r\nexport const getCourse = (course_code) =>\r\n  client.get(ip + '/testCourseProf/' + course_code);\r\n//전체강의보기\r\nexport const getAllCourse = () => client.get(ip + '/testCourseProf/all');\r\n//강의개설\r\nexport const postCourse = (user_code, courseName, description) =>\r\n  client.post(ip + '/testCourseProf', { user_code, courseName, description });\r\n//강의 내용수정\r\nexport const reviseCourse = (course_code, description, user_code) =>\r\n  client.put(ip + '/testCourseProf', { course_code, description, user_code });\r\n//폐강\r\nexport const deleteCourse = (course_code, user_code) =>\r\n  client.delete(ip + '/testCourseProf', { data: { course_code, user_code } });\r\n//학생 강의 신청\r\nexport const registerCourse = (submitValue, user_code) =>\r\n  client.post(ip + '/testCourseStud/enrolment', { submitValue, user_code });\r\n//강의 룸 정보\r\nexport const getRoomInfo = (course_code) =>\r\n  client.get(ip + '/room/' + course_code);\r\n//강의 룸 생성\r\nexport const CreateRoom = (course_code, submitValue) =>\r\n  client.post(ip + '/room', { course_code, submitValue });\r\n//강의 룸 닫기\r\nexport const closeRoom = (course_code) =>\r\n  client.delete(ip + '/room/' + course_code);\r\n//room 입장\r\nexport const InRoom = (course_code, room_code, user_code) =>\r\n  client.post(ip + '/attendance/entrance', {\r\n    course_code,\r\n    room_code,\r\n    user_code,\r\n  });\r\n//room퇴장\r\nexport const OutRoom = (course_code, room_code, user_code) =>\r\n  client.post(ip + '/attendance/exit', { course_code, room_code, user_code });\r\n//교수 출석 정보 조회\r\nexport const AllRoom = (course_code) =>\r\n  client.get(ip + '/attendance/' + course_code);\r\n//출석 확인 학생\r\nexport const StudentAttend = (course_code, user_code) =>\r\n  client.get(ip + '/attendance/student/' + user_code + '/' + course_code);\r\n//출석 수정\r\nexport const reviseAttend = (course_code, submitValue) =>\r\n  client.put(ip + '/attendance', { course_code, submitValue });\r\n//전체 과제 조회\r\nexport const AllAssign = (course_code) =>\r\n  client.get(ip + '/assignment/' + course_code);\r\n//과제 질문 조회\r\nexport const getQuestion = (assignment_code) =>\r\n  client.get(ip + '/question/' + assignment_code);\r\n//개인 질문 조회\r\nexport const getmyQuestion = (user_code) =>\r\n  client.get(ip + '/question/my/' + user_code);\r\n//질문생성\r\nexport const createQuestion = (\r\n  assignment_code,\r\n  user_code,\r\n  title,\r\n  description,\r\n) =>\r\n  client.post(ip + '/question', {\r\n    assignment_code,\r\n    user_code,\r\n    title,\r\n    description,\r\n  });\r\n//질문수정\r\nexport const reviseQuestion = (\r\n  question_code,\r\n  assignment_code,\r\n  title,\r\n  description,\r\n) =>\r\n  client.put(ip + '/question', {\r\n    question_code,\r\n    assignment_code,\r\n    title,\r\n    description,\r\n  });\r\n//질문삭제\r\nexport const deleteQuestion = (assignment_code, question_code) =>\r\n  client.delete(ip + '/question', { data: { assignment_code, question_code } });\r\n//질문답변 확인\r\nexport const getAnswer = (question_code) =>\r\n  client.get(ip + '/answer/' + question_code);\r\n//질문답변 생성\r\nexport const createAnswer = (\r\n  question_code,\r\n  user_code,\r\n  title,\r\n  description,\r\n  code,\r\n) =>\r\n  client.post(ip + '/answer', {\r\n    question_code,\r\n    user_code,\r\n    title,\r\n    description,\r\n    code,\r\n  });\r\n//질문답변 수정\r\nexport const reviseAnswer = (question_code, idx, description) =>\r\n  client.put(ip + '/answer', { question_code, idx, description });\r\n//질문답변 삭제\r\nexport const deleteAnswer = (question_code, idx) =>\r\n  client.delete(ip + '/answer', { question_code, idx });\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { getSession, getUserCourse, deleteCourse } from '../../lib/api/allapi';\r\n\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  CardText,\r\n  CardGroup,\r\n  CardSubtitle,\r\n  CardBody,\r\n} from 'reactstrap';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst CourseRoomFormBlock = styled.div`\r\n  h1 {\r\n    margin: 0;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nconst CourseRoomForm = () => {\r\n  const [CourseList, setCourseList] = useState([]);\r\n  const [id, setID] = useState('');\r\n  const [auth, setAuth] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // let response = getSession();\r\n        // let response1 = response.data.user.code;\r\n        // let response2 = response.data.auth.authority_code;\r\n        // setID(response1);\r\n        // setAuth(response2);\\\r\n        setID('USER000002');\r\n        setAuth('AUTH000002');\r\n        let res = await getUserCourse('USER000002');\r\n        setCourseList(res.data);\r\n      } catch (e) {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n  const deleteButton = (code) => {\r\n    console.log(code + '/' + id);\r\n    let res = deleteCourse(code, id);\r\n    //res = res.data;\r\n    //res=res.data.success\r\n    res = res.data;\r\n    //if (!res) return null;\r\n    // else {\r\n    // if (res === 'true') {\r\n    //alert('폐강성공!');\r\n    // } else {\r\n    //  alert('폐강실패!');\r\n    // }\r\n    //}\r\n  };\r\n  const renderCardFoot = (code) => {\r\n    if (auth === 'AUTH000002') {\r\n      //교수\r\n      const url8 = '/QuestionProblem/' + code + '/' + id + '/' + auth;\r\n      const url1 = '/roompage1/' + code + '/' + id + '/' + auth;\r\n      const url2 = '/attendance/' + code + '/' + id + '/' + auth;\r\n      const url3 = '/revisecourse/' + code + '/' + id;\r\n      const url4 = '/revisecourse/' + code + '/' + id;\r\n      return (\r\n        <div>\r\n          <Link to={url8}>\r\n            <Button to=\"/\" color=\"primary\">\r\n              질문\r\n            </Button>{' '}\r\n          </Link>\r\n          <Link to={url1}>\r\n            <Button color=\"warning\">Room</Button>{' '}\r\n          </Link>\r\n          <Link to={url2}>\r\n            <Button color=\"success\">출석정보 수정</Button>{' '}\r\n          </Link>\r\n          <Link to={url3}>\r\n            <Button color=\"info\">강의정보 수정</Button>{' '}\r\n          </Link>\r\n          <Link to={url4}>\r\n            {/*예비로 해둠 */}\r\n            <Button color=\"secondary\">과제</Button>{' '}\r\n          </Link>\r\n          <Button onClick={() => deleteButton(code)} color=\"danger\">\r\n            강의 폐강\r\n          </Button>{' '}\r\n        </div>\r\n      );\r\n    } else if (auth === 'AUTH000001') {\r\n      //학생\r\n      const url = '/roompage1/' + code + '/' + id + '/' + auth;\r\n      const url1 = '/attendance/' + code + '/' + id + '/' + auth;\r\n      const url8 = '/QuestionProblem/' + code + '/' + id + '/' + auth;\r\n      return (\r\n        <div>\r\n          <Link to={url8}>\r\n            <Button to=\"/\" color=\"primary\">\r\n              질문\r\n            </Button>{' '}\r\n          </Link>\r\n          <Link to={url}>\r\n            <Button color=\"warning\">Room</Button>{' '}\r\n          </Link>\r\n\r\n          <Link to={url1}>\r\n            <Button color=\"success\">출석</Button>{' '}\r\n          </Link>\r\n          <Link to={url1}>\r\n            {/*예비로 해둠 */}\r\n            <Button color=\"info\">과제</Button>{' '}\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const renderbutton = () => {\r\n    const url = '/opencourse/' + id;\r\n    const url1 = '/registercourse/' + id;\r\n\r\n    if (auth === 'AUTH000002') {\r\n      //교수\r\n      return (\r\n        <div>\r\n          <Link to={url}>\r\n            <Button color=\"secondary\" style={{ width: '100px' }}>\r\n              개설\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      );\r\n    } else if (auth === 'AUTH000001') {\r\n      //학생\r\n      return (\r\n        <div>\r\n          <Link to={url1}>\r\n            <Button color=\"secondary\" style={{ width: '100px' }}>\r\n              신청\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  if (!loading) {\r\n    return <CourseRoomFormBlock>대기중..</CourseRoomFormBlock>;\r\n  }\r\n\r\n  if (!auth)\r\n    return (\r\n      <div>\r\n        <p style={{ marginLeft: '30rem' }}>정보를 받아오는 중..</p>\r\n      </div>\r\n    );\r\n  if (!CourseList && CourseList.length === 0)\r\n    return (\r\n      <div>\r\n        <div style={{ marginTop: '5rem', marginLeft: '10rem' }}>\r\n          <h1>강의실</h1>\r\n          {renderbutton()}\r\n        </div>\r\n\r\n        <CardGroup\r\n          style={{ margin: '10rem', marginLeft: '10rem', width: '800px' }}\r\n        ></CardGroup>\r\n        <Card>\r\n          <p style={{ marginLeft: '30rem' }}>등록된강의가 없습니다.</p>\r\n        </Card>\r\n      </div>\r\n    );\r\n  return (\r\n    <CourseRoomFormBlock>\r\n      <div style={{ marginTop: '5rem', marginLeft: '10rem' }}>\r\n        <h1>강의실</h1>\r\n        {renderbutton()}\r\n      </div>\r\n\r\n      <CardGroup\r\n        style={{ margin: '10rem', marginLeft: '10rem', width: '800px' }}\r\n      >\r\n        <div>\r\n          <Card>\r\n            {CourseList &&\r\n              CourseList.map((k) => {\r\n                return (\r\n                  <CardBody key={k.code}>\r\n                    <CardTitle tag=\"h5\"> {k.name}</CardTitle>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n                      {' '}\r\n                    </CardSubtitle>\r\n                    <CardText>{k.description}</CardText>\r\n\r\n                    {renderCardFoot(k.code)}\r\n                  </CardBody>\r\n                );\r\n              })}\r\n          </Card>\r\n        </div>\r\n      </CardGroup>\r\n    </CourseRoomFormBlock>\r\n  );\r\n};\r\nexport default CourseRoomForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CourseRoomForm from '../components/course/CourseRoomForm';\r\n\r\n\r\nconst MainRoomPageBlock = styled.div``;\r\n\r\nconst MainRoomPage = () => {\r\n  return (\r\n    <MainRoomPageBlock>\r\n      <CourseRoomForm />\r\n    </MainRoomPageBlock>\r\n  );\r\n};\r\nexport default MainRoomPage;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n/**\n * 회원가입 / 로그인 페이지의 레이아웃을 담당하는 컴포넌트입니다.\n */\n\n/* 화면 전체를 채움 */\nconst AuthTemplateBlock = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  background: #D7E0FC;\n  /* flex로 내부 내용 중앙 정렬 */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\n/* 흰색 박스 */\nconst WhiteBox = styled.div`\n  .logo-area {\n    display: block;\n    padding-bottom: 2rem;\n    text-align: center;\n    font-weight: bold;\n    letter-spacing: 2px;\n  }\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\n  padding: 2rem;\n  width: 360px;\n  background: white;\n  border-radius: 2px;\n`;\n\nconst AuthTemplate = ({ children }) => {\n  return (\n    <AuthTemplateBlock>\n      <WhiteBox>\n        <div className=\"logo-area\">\n          <Link to=\"/\">Codinator</Link>\n        </div>\n        {children}\n      </WhiteBox>\n    </AuthTemplateBlock>\n  );\n};\n\nexport default AuthTemplate;\n","import { createAction, handleActions } from 'redux-actions';\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\nexport const startLoading = createAction(\n  START_LOADING,\n  (requestType) => requestType,\n);\n\nexport const finishLoading = createAction(\n  FINISH_LOADING,\n  (requestType) => requestType,\n);\n\nconst initialState = {};\n\nconst loading = handleActions(\n  {\n    [START_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: true,\n    }),\n    [FINISH_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: false,\n    }),\n  },\n  initialState,\n);\n\nexport default loading;\n","import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\n\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return function*(action) {\n    yield put(startLoading(type)); // 로딩 시작\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response.data,\n        meta: response,\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true,\n      });\n    }\n    yield put(finishLoading(type)); // 로딩 끝\n  };\n}\n","import client from './client';\n\n// 로그인\nexport const login = ({ username, password }) =>\n  client.get('/auth/session', { username, password });\n\n// 회원가입\nexport const register = ({ username, password, name }) =>\n  client.post('/auth/register', { username, password, name });\n\n// 로그인 상태 확인\nexport const check = () => client.get('/auth/session');\n\n// 로그아웃\nexport const logout = () => (window.location.href = '/auth/logout');\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\n  'auth/REGISTER',\n);\n\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\n  'auth/LOGIN',\n);\n\nexport const changeField = createAction(\n  CHANGE_FIELD,\n  ({ form, key, value }) => ({\n    form, // register , login\n    key, // username, password, passwordConfirm\n    value, // 실제 바꾸려는 값\n  }),\n);\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form); // register / login\nexport const register = createAction(\n  REGISTER,\n  ({ username, password, name }) => ({\n    username,\n    password,\n    name,\n  }),\n);\nexport const login = createAction(LOGIN, ({ username, password }) => ({\n  username,\n  password,\n}));\n\n// saga 생성\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\nexport function* authSaga() {\n  yield takeLatest(REGISTER, registerSaga);\n  yield takeLatest(LOGIN, loginSaga);\n}\n\nconst initialState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: '',\n    name: '',\n  },\n  login: {\n    username: '',\n    password: '',\n  },\n  auth: null,\n  authError: null,\n};\n\nconst auth = handleActions(\n  {\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\n      produce(state, (draft) => {\n        draft[form][key] = value; // 예: state.register.username을 바꾼다\n      }),\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\n      ...state,\n      [form]: initialState[form],\n      authError: null, // 폼 전환 시 회원 인증 에러 초기화\n    }),\n    // 회원가입 성공\n    [REGISTER_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    // 회원가입 실패\n    [REGISTER_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n    // 로그인 성공\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    // 로그인 실패\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n  },\n  initialState,\n);\n\nexport default auth;\n","const palette = {\n  gray: [\n    '#f8f9fa',\n    '#f1f3f5',\n    '#e9ecef',\n    '#dee2e6',\n    '#ced4da',\n    '#adb5bd',\n    '#868e96',\n    '#495057',\n    '#343a40',\n    '#212529'\n  ],\n  cyan: [\n    '#e3fafc',\n    '#c5f6fa',\n    '#99e9f2',\n    '#66d9e8',\n    '#3bc9db',\n    '#22b8cf',\n    '#15aabf',\n    '#1098ad',\n    '#0c8599',\n    '#0b7285'\n  ]\n};\n\nexport default palette;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/styles/palette';\n\nconst buttonStyle = css`\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  color: white;\n  outline: none;\n  cursor: pointer;\n\n  background: ${palette.gray[8]};\n  &:hover {\n    background: ${palette.gray[6]};\n  }\n\n  ${props =>\n    props.fullWidth &&\n    css`\n      padding-top: 0.75rem;\n      padding-bottom: 0.75rem;\n      width: 100%;\n      font-size: 1.125rem;\n    `}\n\n  ${props =>\n    props.cyan &&\n    css`\n      background:#3E68F1;\n      &:hover {\n        background: ${palette.gray[6]};\n      }\n    `}\n\n    &:disabled {\n    background: ${palette.gray[3]};\n    color: ${palette.gray[5]};\n    cursor: not-allowed;\n  }\n`;\n\nconst StyledButton = styled.button`\n  ${buttonStyle}\n`;\n\nconst StyledLink = styled(Link)`\n  ${buttonStyle}\n`;\n\nconst Button = props => {\n  return props.to ? (\n    <StyledLink {...props} cyan={props.cyan ? 1 : 0} />\n  ) : (\n    <StyledButton {...props} />\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/styles/palette';\nimport Button from '../common/Button';\n\n/**\n * 회원가입 또는 로그인 폼을 보여줍니다.\n */\n\nconst AuthFormBlock = styled.div`\n  h3 {\n    margin: 0;\n    color: ${palette.gray[8]};\n    margin-bottom: 1rem;\n  }\n`;\n\n/**\n * 스타일링된 input\n */\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n`;\n\n/**\n * 폼 하단에 로그인 혹은 회원가입 링크를 보여줌\n */\nconst Footer = styled.div`\n  margin-top: 2rem;\n  text-align: right;\n  a {\n    color: ${palette.gray[6]};\n    text-decoration: underline;\n    &:hover {\n      color: ${palette.gray[9]};\n    }\n  }\n`;\n\nconst ButtonWithMarginTop = styled(Button)`\n  margin-top: 1rem;\n`;\n\nconst textMap = {\n  login: '로그인',\n  register: '회원가입',\n  google: '구글로그인',\n};\n\n/**\n * 에러를 보여줍니다\n */\nconst ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n  font-size: 0.875rem;\n  margin-top: 1rem;\n`;\n\nconst AuthForm = ({ type, form, onChange, onSubmit, error }) => {\n  const text = textMap[type];\n  return (\n    <AuthFormBlock>\n      <h3>{text}</h3>\n      <form onSubmit={onSubmit}>\n        <StyledInput\n          autoComplete=\"username\"\n          name=\"username\"\n          placeholder=\"아이디\"\n          onChange={onChange}\n          value={form.username}\n        />\n        <StyledInput\n          autoComplete=\"new-password\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          type=\"password\"\n          onChange={onChange}\n          value={form.password}\n        />\n        {type === 'register' && (\n          <div>\n            <StyledInput\n              autoComplete=\"new-password\"\n              name=\"passwordConfirm\"\n              placeholder=\"비밀번호 확인\"\n              type=\"password\"\n              onChange={onChange}\n              value={form.passwordConfirm}\n            />\n            <StyledInput\n              autoComplete=\"name\"\n              name=\"name\"\n              placeholder=\"학생:student, 교수자:professor\"\n              type=\"name\"\n              onChange={onChange}\n              value={form.name}\n            />\n          </div>\n        )}\n\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        <ButtonWithMarginTop cyan fullWidth style={{ marginTop: '1rem' }}>\n          {text}\n        </ButtonWithMarginTop>\n      </form>\n      <Footer>\n        {type === 'login' ? (\n          <Link to=\"/register\">회원가입</Link>\n        ) : (\n          <Link to=\"/login\">로그인</Link>\n        )}\n      </Footer>\n    </AuthFormBlock>\n  );\n};\n\nexport default AuthForm;\n","import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest, call } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\n\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\n// 회원 정보 확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\n  'user/CHECK',\n);\nconst LOGOUT = 'user/LOGOUT';\n\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user'); // localStorage 에서 user 제거하고\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(authAPI.logout); // logout API 호출\n    localStorage.removeItem('user'); // localStorage 에서 user 제거\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n}\n\nconst initialState = {\n  user: null,\n  checkError: null,\n};\n\nexport default handleActions(\n  {\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\n      ...state,\n      user,\n    }),\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\n      ...state,\n      user,\n      checkError: null,\n    }),\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      user: null,\n      checkError: error,\n    }),\n    [LOGOUT]: state => ({\n      ...state,\n      user: null,\n    }),\n  },\n  initialState,\n);\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\n\nconst LoginForm = ({ history }) => {\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n  // 인풋 변경 이벤트 핸들러\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form: 'login',\n        key: name,\n        value,\n      }),\n    );\n  };\n\n  // 폼 등록 이벤트 핸들러\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { username, password } = form;\n    dispatch(login({ username, password }));\n  };\n\n  // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('로그인 실패!아이디 또는 비밀번호가 맞지 않습니다.');\n      return;\n    }\n    if (auth) {\n      console.log('로그인 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n\n  return (\n    <AuthForm\n      type=\"login\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    />\n  );\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport LoginForm from '../containers/auth/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <AuthTemplate>\n      <LoginForm />\n    </AuthTemplate>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ResponsiveBlock = styled.div`\n  padding-left: 1rem;\n  padding-right: 1rem;\n  width: 1024px;\n  margin: 0 auto; /* 중앙 정렬 */\n\n  /* 브라우저 크기에 따라 가로 사이즈 변경 */\n  @media (max-width: 1024px) {\n    width: 768px;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Responsive = ({ children, ...rest }) => {\n  // style, className, onClick, onMouseMove 등의 props를 사용할 수 있도록\n  // ...rest를 사용하여 ResponsiveBlock에게 전달\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\n};\n\nexport default Responsive;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Responsive from './Responsive';\nimport Button from './Button';\n\nconst HeaderBlock = styled.div`\n  position: fixed;\n  width: 100%;\n  background: white;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.08);\n`;\n\n/**\n * Responsive 컴포넌트의 속성에 스타일을 추가해서 새로운 컴포넌트 생성\n */\nconst Wrapper = styled(Responsive)`\n  height: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between; /* 자식 엘리먼트 사이에 여백을 최대로 설정 */\n  .logo {\n    font-size: 1.125rem;\n    font-weight: 800;\n    letter-spacing: 2px;\n  }\n  .right {\n    display: flex;\n    align-items: center;\n  }\n`;\n\n/**\n * 헤더가 fixed로 되어 있기 때문에 페이지의 컨텐츠가 4rem 아래 나타나도록 해주는 컴포넌트\n */\nconst Spacer = styled.div`\n  height: 4rem;\n`;\n\nconst UserInfo = styled.div`\n  font-weight: 800;\n  margin-right: 1rem;\n`;\n\nconst Header = ({ user, onLogout }) => {\n  return (\n    <>\n      <HeaderBlock>\n        <Wrapper>\n          <Link to=\"/\" className=\"logo\">\n            Codinator\n          </Link>\n          {user ? (\n            <div className=\"right\">\n              <UserInfo>{user.username}</UserInfo>\n              <Button onClick={onLogout}>로그아웃</Button>\n            </div>\n          ) : (\n            <div className=\"right\">\n              <Button to=\"/login\">로그인</Button>\n            </div>\n          )}\n        </Wrapper>\n      </HeaderBlock>\n      <Spacer />\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Header from '../../components/common/Header';\nimport { logout } from '../../modules/user';\n\nconst HeaderContainer = () => {\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\n  const dispatch = useDispatch();\n  const onLogout = () => {\n    dispatch(logout());\n  };\n  return <Header user={user} onLogout={onLogout} />;\n};\n\nexport default HeaderContainer;\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport styled from 'styled-components';\nconst PostListPageBlock = styled.div`\n  .image1 {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\nconst PostListPage = () => {\n  return (\n    <div>\n      <HeaderContainer />\n      <PostListPageBlock>\n        <div class=\"image1\">\n          <div\n            class=\"single-blog-area mb-100 wow fadeInUp\"\n            data-wow-delay=\"250ms\"\n          >\n            <img src=\"images/online.png\" alt=\"\" width=\"500\" height=\"300\" />\n\n            <div class=\"blog-content\">\n              <h4>온라인 학습 환경에서</h4>\n\n              <p>Coditnator와 함께하세요</p>\n            </div>\n          </div>\n        </div>\n      </PostListPageBlock>\n    </div>\n  );\n};\n\nexport default PostListPage;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nclass QpListPage extends Component {\r\n  state = { boards: [] };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }; //로딩 데이터\r\n  loadingData = async () => {\r\n    try {\r\n      const response = await axios.get('/question');\r\n      this.setState({\r\n        // boards: 'test'\r\n        boards: response.data,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    const { loadingData } = this;\r\n    loadingData();\r\n  }\r\n  render() {\r\n    const { boards } = this.state;\r\n    const { handleChange } = this;\r\n    return (\r\n      <Wrap>\r\n        <h2>List</h2>\r\n        <div>\r\n          {boards && (\r\n            <textarea\r\n              name=\"getBoards2\"\r\n              onChange={handleChange}\r\n              rows={7}\r\n              value={JSON.stringify(boards, null, 2)}\r\n            />\r\n          )}\r\n        </div>\r\n        {/* {console.log(boards)} */}\r\n        {/* {boards[0].id} */}\r\n        {boards.map((item) => {\r\n          return (\r\n            <ListItem key={item.id}>\r\n              <Link to={`/Qpread/${item.id}`}>\r\n                <h3>{item.title}</h3>\r\n                <p>{item.content}</p>\r\n              </Link>\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <Button>\r\n          {/* <button onClick={handleClick}>get Request</button> */}\r\n          <Link to={`/Qpwrite`}>글쓰기</Link>\r\n        </Button>\r\n      </Wrap>\r\n    );\r\n  }\r\n}\r\n//styling\r\nconst Wrap = styled.div`\r\n  padding: 20px;\r\n`;\r\nconst ListItem = styled.div`\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  padding: 20px;\r\n  border-top: 1px solid #eee;\r\n  a {\r\n    text-decoration: none;\r\n    h3 {\r\n      margin: 0;\r\n      padding: 0;\r\n      color: #212121;\r\n    }\r\n    p {\r\n      margin: 0;\r\n      padding: 10px 0 0 0;\r\n      color: #787878;\r\n    }\r\n    &:hover {\r\n      h3 {\r\n        color: #0066ff;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Button = styled.div`\r\n  border-top: 1px solid #eee;\r\n  padding: 20px;\r\n  a {\r\n    float: right;\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    text-decoration: none;\r\n    background: #212121;\r\n    color: #fff;\r\n  }\r\n`;\r\nexport default QpListPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../components/common/Button';\r\n\r\nimport { getCourse, reviseCourse } from '../lib/api/allapi';\r\n\r\nconst ReviseCoursePageBlock = styled.div``;\r\n\r\nconst ReviseCourseFormBlock = styled.div`\r\n  font-size: 1rem;\r\n  border: none;\r\n  font-weight: bold;\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  bt {\r\n    position: absolute;\r\n\r\n    left: 100px;\r\n\r\n    top: 150px;\r\n  }\r\n`;\r\nconst CourseContainerBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: white;\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst InformBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 600px;\r\n  height: 580px;\r\n  background: #d7e0fc;\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst ReviseCoursePage = ({ match }) => {\r\n  const course_code = match.params.course_code;\r\n  const user_code = match.params.user_code;\r\n  const [description, setDescription] = useState('');\r\n  const onChangeDescription = (e) => setDescription(e.target.value);\r\n\r\n  const onClick = async (description) => {\r\n    console.log('---------' + course_code);\r\n    console.log('---------' + description);\r\n    console.log('---------' + user_code);\r\n    let res = await reviseCourse(course_code, description, user_code);\r\n    res = res.data.success;\r\n    //if (res === 'true') {\r\n    //수정성공\r\n    // alert('수정 성공!');\r\n    // } else {\r\n    //수정 실패\r\n    // alert('수정 실패!');\r\n    // }\r\n  };\r\n  const renderInform = () => {\r\n    return (\r\n      <div>\r\n        <form id=\"gform\" class=\"pure-form pure-form-stacked\" action=\"\">\r\n          <fieldset class=\"pure-group\">\r\n            <label for=\"description\">강의 설명 </label>\r\n            <textarea\r\n              id=\"description\"\r\n              name=\"description\"\r\n              rows=\"10\"\r\n              cols=\"100\"\r\n              placeholder=\"\"\r\n              onChange={onChangeDescription}\r\n              value={description}\r\n            ></textarea>\r\n          </fieldset>\r\n\r\n          <Button\r\n            onClick={() => onClick(description)}\r\n            class=\"bt\"\r\n            cyan\r\n            width=\"100%\"\r\n          >\r\n            수정\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <ReviseCoursePageBlock>\r\n      <CourseContainerBlock>\r\n        <InformBox>\r\n          <ReviseCourseFormBlock>\r\n            <div>\r\n              <h1>강의정보 수정</h1>\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"http://yui.yahooapis.com/pure/0.6.0/pure-min.css\"\r\n              />\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"\r\n              />\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdn.rawgit.com/dwyl/html-form-send-email-via-google-script-without-server/master/style.css\"\r\n              />\r\n              {renderInform()}\r\n            </div>\r\n          </ReviseCourseFormBlock>\r\n        </InformBox>\r\n      </CourseContainerBlock>\r\n    </ReviseCoursePageBlock>\r\n  );\r\n};\r\nexport default ReviseCoursePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from '@material-ui/core/Input';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { AllRoom, reviseAttend, StudentAttend } from '../lib/api/allapi';\r\nimport Button from '../components/common/Button';\r\n\r\nconst AttendTemplateBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: white;\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst TableBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 1000px;\r\n  background: white;\r\n  border-radius: 2px;\r\n`;\r\nconst AttendFormBlock = styled.div`\r\n  margin: 0 auto;\r\n\r\n  border: none;\r\n  padding: 1rem;\r\n  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap');\r\n\r\n  body {\r\n    font-family: 'Quicksand', sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 0;\r\n    color: #4d4d4d;\r\n  }\r\n\r\n  #title {\r\n    margin-top: 1px;\r\n    margin-left: 200px;\r\n  }\r\n\r\n  #room {\r\n    border-collapse: collapse;\r\n    border: 3px solid #ddd;\r\n  }\r\n\r\n  #room td,\r\n  #room th {\r\n    border: 1px solid #ddd;\r\n    padding: 12px;\r\n  }\r\n\r\n  #room tr:hover {\r\n    background-color: #ddd;\r\n  }\r\n\r\n  #room th {\r\n    padding: 10px;\r\n    text-align: center;\r\n    background-color: #3e68f1;\r\n    color: white;\r\n  }\r\n\r\n  .opration {\r\n    text-align: center;\r\n  }\r\n\r\n  .button {\r\n    border: none;\r\n    outline: none;\r\n    font-size: 11px;\r\n    font-family: 'Quicksand', sans-serif;\r\n    color: #f44336;\r\n    padding: 3px 10px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    border: 1px solid #f44336;\r\n    background-color: transparent;\r\n  }\r\n\r\n  .button:active {\r\n    border: 1px solid blue;\r\n  }\r\n`;\r\n\r\nconst AtttendancePage = ({ match }) => {\r\n  const course_code = match.params.course_code;\r\n  const user_code = match.params.user_code;\r\n  const auth = match.params.auth;\r\n  console.log(course_code);\r\n  console.log(user_code);\r\n  console.log(auth);\r\n  const [rooms, setRooms] = useState([]);\r\n  const [strooms, setSRooms] = useState([]);\r\n  const [title, setTitle] = useState();\r\n  const [id, setId] = useState('');\r\n  const [attendance, setAttend] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let response = await AllRoom(course_code);\r\n        response = response.data;\r\n        setRooms(response);\r\n        let response1 = await StudentAttend(course_code, user_code);\r\n        setSRooms(response1.data);\r\n      } catch (e) {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [course_code, user_code]);\r\n\r\n  const setIdText = (e) => {\r\n    setId(e.target.value);\r\n  };\r\n  const setTitleText = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const setAttendText = (e) => {\r\n    setAttend(e.target.value);\r\n  };\r\n\r\n  const save = (e) => {\r\n    e.preventDefault();\r\n    const submitValue = {\r\n      title: title,\r\n      id: id,\r\n      attendance: attendance,\r\n    };\r\n    console.log(title + '/' + id + '/' + attendance);\r\n    let res = reviseAttend(course_code, submitValue);\r\n    // if (res['success'] !== undefined) {\r\n    //  alert('출석정보 수정 완료');\r\n    // } else {\r\n    //  alert('출석정보 수정 실패');\r\n    // }\r\n  };\r\n  if (!loading) {\r\n    return <AttendTemplateBlock>대기중..</AttendTemplateBlock>;\r\n  }\r\n  if (!rooms)\r\n    return (\r\n      <div>\r\n        <p style={{ marginLeft: '30rem' }}>정보를 받아오는 중..</p>\r\n      </div>\r\n    );\r\n  const revise = () => {\r\n    if (auth === 'AUTH000002') {\r\n      return (\r\n        <div>\r\n          <h4 style={{ fontWeight: 'bold' }}>출석정보수정</h4>\r\n          <form\r\n            onSubmit={save}\r\n            style={{ marginTop: '1px', marginLeft: '200px' }}\r\n          >\r\n            <FormLabel htmlFor=\"title\">주차</FormLabel>\r\n            <NativeSelect id=\"title\" name=\"title\" onChange={setTitleText}>\r\n              <option value={title}></option>\r\n              <option value=\"ROOM000001\">1주차</option>\r\n              <option value=\"ROOM000002\">2주차</option>\r\n              <option value=\"ROOM000003\">3주차</option>\r\n              <option value=\"ROOM000004\">4주차</option>\r\n              <option value=\"ROOM000005\">5주차</option>\r\n              <option value=\"ROOM000006\">6주차</option>\r\n              <option value=\"ROOM000007\">7주차</option>\r\n              <option value=\"ROOM000008\">8주차</option>\r\n              <option value=\"ROOM000009\">9주차</option>\r\n            </NativeSelect>\r\n            <br />\r\n            <FormLabel htmlFor=\"id\">아이디</FormLabel>\r\n            <Input\r\n              name=\"decription\"\r\n              id=\"description\"\r\n              placeholder=\"\"\r\n              onChange={setIdText}\r\n            />\r\n            <br />\r\n            <FormLabel htmlFor=\"attend_v\">출석상태</FormLabel>\r\n            <NativeSelect\r\n              id=\"attend_v\"\r\n              name=\"attend_v\"\r\n              onChange={setAttendText}\r\n            >\r\n              <option value={attendance}></option>\r\n              <option value=\"1\">출석</option>\r\n              <option value=\"0\">결석</option>\r\n            </NativeSelect>\r\n            <br />\r\n            <br />\r\n            <Button\r\n              type=\"submit\"\r\n              value=\"저장\"\r\n              style={{ backgroundColor: '#3E68F1', color: 'white' }}\r\n            >\r\n              수정하기\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  };\r\n\r\n  const renderHeader = () => {\r\n    let headerElement = [\r\n      '주차',\r\n      '아이디',\r\n      '강의소요시간',\r\n      '출석한 시간',\r\n      '출석여부',\r\n    ];\r\n    let headerElement1 = ['주차', '강의소요시간', '출석한 시간', '출석여부'];\r\n    if (auth === 'AUTH000002') {\r\n      return headerElement.map((key, index) => {\r\n        return <th key={index}>{key.toUpperCase()}</th>;\r\n      });\r\n    } else if (auth === 'AUTH000001') {\r\n      return headerElement1.map((key, index) => {\r\n        return <th key={index}>{key.toUpperCase()}</th>;\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderBody = () => {\r\n    if (auth === 'AUTH000002') {\r\n      return (\r\n        rooms &&\r\n        rooms.map(({ code, user_code, class_time, attend_time, attend }) => {\r\n          return (\r\n            <tr key={code}>\r\n              <td>{code}</td>\r\n              <td>{user_code}</td>\r\n              <td>{class_time}</td>\r\n              <td>{attend_time}</td>\r\n              <td>{attend ? 'O' : 'X'}</td>\r\n            </tr>\r\n          );\r\n        })\r\n      );\r\n    } else if (auth === 'AUTH000001') {\r\n      return (\r\n        strooms &&\r\n        strooms.map(({ code, class_time, attend_time, attend }) => {\r\n          return (\r\n            <tr key={code}>\r\n              <td>{code}</td>\r\n              <td>{class_time}</td>\r\n              <td>{attend_time}</td>\r\n              <td>{attend ? 'O' : 'X'}</td>\r\n            </tr>\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AttendTemplateBlock>\r\n      <TableBox>\r\n        <AttendFormBlock style={{ marginTop: '300px' }}>\r\n          <>\r\n            <div style={{ margin: '100px' }}>\r\n              <h1 style={{ fontWeight: 'bold' }}>출석</h1>\r\n              <table id=\"room\">\r\n                <thead>\r\n                  <tr style={{ marginTop: '900px' }}>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>{renderBody()}</tbody>\r\n              </table>\r\n            </div>\r\n            {revise()}\r\n          </>\r\n        </AttendFormBlock>\r\n      </TableBox>\r\n    </AttendTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AtttendancePage;\r\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, register } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\nconst RegisterForm = ({ history }) => {\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.register,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n  // 인풋 변경 이벤트 핸들러\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form: 'register',\n        key: name,\n        value,\n      }),\n    );\n  };\n\n  // 폼 등록 이벤트 핸들러\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { username, password, passwordConfirm, name } = form;\n    // 하나라도 비어있다면\n    if ([username, password, passwordConfirm, name].includes('')) {\n      setError('빈 칸을 모두 입력하세요.');\n      return;\n    }\n\n    // 비밀번호가 일치하지 않는다면\n    if (password !== passwordConfirm) {\n      setError('비밀번호가 일치하지 않습니다.');\n      dispatch(changeField({ form: 'register', key: 'password', value: '' }));\n      dispatch(\n        changeField({ form: 'register', key: 'passwordConfirm', value: '' }),\n      );\n      return;\n    }\n    //비밀번호 조건 불만족\n    if (!(password.length > 4 && password.length < 15)) {\n      setError('비밀번호 길이가 4이상 15이하 이어야 합니다.');\n      dispatch(changeField({ form: 'register', key: 'password', value: '' }));\n      dispatch(\n        changeField({ form: 'register', key: 'passwordConfirm', value: '' }),\n      );\n      return;\n    }\n    if (name !== 'student' || name !== 'professor') {\n      setError('student 또는 professor를 입력하세요. ');\n      dispatch(changeField({ form: 'register', key: 'name', value: '' }));\n\n      return;\n    }\n\n    dispatch(register({ username, password, name }));\n  };\n\n  // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n  useEffect(() => {\n    dispatch(initializeForm('register'));\n  }, [dispatch]);\n\n  // 회원가입 성공 / 실패 처리\n  useEffect(() => {\n    if (authError) {\n      // 계정명이 이미 존재할 때\n      if (authError.response.status === 409) {\n        setError('ID 중복');\n        return;\n      }\n      // 기타 이유\n      setError('회원가입 실패!');\n      return;\n    }\n\n    if (auth) {\n      console.log('가입 완료! 환영합니다.');\n      console.log(auth);\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  // user 값이 잘 설정되었는지 확인\n  useEffect(() => {\n    if (user) {\n      history.push('/'); // 홈 화면으로 이동\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n\n  return (\n    <AuthForm\n      type=\"register\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    />\n  );\n};\n\nexport default withRouter(RegisterForm);\n","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport RegisterForm from '../containers/auth/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <AuthTemplate>\n      <RegisterForm />\n    </AuthTemplate>\n  );\n};\n\nexport default RegisterPage;\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst DeleteCourseBlock = styled.div`\r\n  margin: 0 auto;\r\n\r\n  border: none;\r\n  padding: 1rem;\r\n  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap');\r\n\r\n  body {\r\n    font-family: 'Quicksand', sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 0;\r\n    color: #4d4d4d;\r\n  }\r\n\r\n  #title {\r\n    margin-top: 1px;\r\n    margin-left: 200px;\r\n  }\r\n\r\n  #room {\r\n    border-collapse: collapse;\r\n    border: 3px solid #ddd;\r\n  }\r\n\r\n  #room td,\r\n  #room th {\r\n    border: 1px solid #ddd;\r\n    padding: 12px;\r\n  }\r\n\r\n  #room tr:hover {\r\n    background-color: #ddd;\r\n  }\r\n\r\n  #room th {\r\n    padding: 10px;\r\n    text-align: center;\r\n    background-color: #3e68f1;\r\n    color: white;\r\n  }\r\n\r\n  .opration {\r\n    text-align: center;\r\n  }\r\n\r\n  .button {\r\n    border: none;\r\n    outline: none;\r\n    font-size: 11px;\r\n    font-family: 'Quicksand', sans-serif;\r\n    color: #f44336;\r\n    padding: 3px 10px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    border: 1px solid #f44336;\r\n    background-color: transparent;\r\n  }\r\n\r\n  .button:active {\r\n    border: 1px solid blue;\r\n  }\r\n`;\r\n\r\nconst DeleteCoursePage = () => {\r\n  const [courseItem, setList] = useState([]);\r\n  const [usercode, setUserCode] = useState([]);\r\n  const [title, setTitle] = useState();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getCourse();\r\n  });\r\n\r\n  const setTitleText = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const getData = () => {\r\n    const response = axios.get('/auth/session');\r\n    setUserCode(response.user);\r\n  };\r\n  const getCourse = () => {\r\n    const URL = '/course' + { usercode };\r\n    const response = axios.get(URL);\r\n    setList(response.user.code);\r\n  };\r\n  const save = (e) => {\r\n    e.preventDefault();\r\n    const submitValue = {\r\n      title: title,\r\n    };\r\n\r\n    axios.delete('/course', { usercode, submitValue }).then((res) => {\r\n      if (res.success === 'true') {\r\n        alert('강의폐강 성공');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <DeleteCourseBlock>\r\n      <>\r\n        <br />\r\n        <br />\r\n        <h1 id=\"title\">폐강</h1>\r\n        <div style={{ margin: '200px' }}>\r\n          <form\r\n            onSubmit={save}\r\n            style={{ marginTop: '1px', marginLeft: '200px' }}\r\n          >\r\n            <FormLabel htmlFor=\"title\">주차</FormLabel>\r\n            <NativeSelect id=\"title\" name=\"title\" onChange={setTitleText}>\r\n              <option value={title}></option>\r\n\r\n              {courseItem.map((course) => (\r\n                <option value={course.code}>{course.name}</option>\r\n              ))}\r\n            </NativeSelect>\r\n            <br />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              value=\"저장\"\r\n              style={{ backgroundColor: '#3E68F1', color: 'white' }}\r\n            >\r\n              수정하기\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    </DeleteCourseBlock>\r\n  );\r\n};\r\nexport default DeleteCoursePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { getAllCourse, registerCourse } from '../lib/api/allapi';\r\nimport Button from '../components/common/Button';\r\nconst RegisterCoursePageBlock = styled.div``;\r\nconst AttendTemplateBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst TableBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 1000px;\r\n  background: white;\r\n  border-radius: 2px;\r\n`;\r\nconst StudentRegisterCourseBlock = styled.div`\r\n  margin: 0 auto;\r\n\r\n  border: none;\r\n  padding: 1rem;\r\n  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap');\r\n\r\n  body {\r\n    font-family: 'Quicksand', sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 0;\r\n    color: #4d4d4d;\r\n  }\r\n\r\n  #title {\r\n    margin-top: 1px;\r\n    margin-left: 200px;\r\n  }\r\n\r\n  #room {\r\n    border-collapse: collapse;\r\n    border: 3px solid #ddd;\r\n  }\r\n\r\n  #room td,\r\n  #room th {\r\n    border: 1px solid #ddd;\r\n    padding: 12px;\r\n  }\r\n\r\n  #room tr:hover {\r\n    background-color: #ddd;\r\n  }\r\n\r\n  #room th {\r\n    padding: 10px;\r\n    text-align: center;\r\n    background-color: #3e68f1;\r\n    color: white;\r\n  }\r\n\r\n  .opration {\r\n    text-align: center;\r\n  }\r\n\r\n  .button {\r\n    border: none;\r\n    outline: none;\r\n    font-size: 11px;\r\n    font-family: 'Quicksand', sans-serif;\r\n    color: #f44336;\r\n    padding: 3px 10px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    border: 1px solid #f44336;\r\n    background-color: transparent;\r\n  }\r\n\r\n  .button:active {\r\n    border: 1px solid blue;\r\n  }\r\n`;\r\nconst RegisterCoursePage = ({ match }) => {\r\n  const user_code = match.params.user_code;\r\n  const [name, setName] = useState('');\r\n  const [courseitem, setCourseitem] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let response = await getAllCourse();\r\n        response = response.data;\r\n        setCourseitem(response);\r\n      } catch (e) {\r\n        console.log(e);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const setNameText = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const save = (e) => {\r\n    e.preventDefault();\r\n    const submitValue = {\r\n      name: name,\r\n    };\r\n    console.log(name);\r\n    console.log(user_code);\r\n    registerCourse(submitValue, user_code).then(function (data) {\r\n      // if (data['success'] !== undefined) {\r\n      //수강 신청성공\r\n      //  alert('수강 신청 성공!');\r\n      //  } else {\r\n      //로그인 실패\r\n      //  alert('수강 신청 실패!');\r\n      //  }\r\n    });\r\n  };\r\n  const renderHeader = () => {\r\n    let headerElement = ['강의명', '강의설명'];\r\n\r\n    return headerElement.map((key, index) => {\r\n      return <th key={index}>{key.toUpperCase()}</th>;\r\n    });\r\n  };\r\n  const renderBody = () => {\r\n    return courseitem.map((item) => (\r\n      <tr key={item.code}>\r\n        <td>{item.name}</td>\r\n        <td>{item.description}</td>\r\n      </tr>\r\n    ));\r\n  };\r\n  return (\r\n    <RegisterCoursePageBlock>\r\n      <AttendTemplateBlock>\r\n        <TableBox>\r\n          <StudentRegisterCourseBlock>\r\n            <>\r\n              <div style={{ marginTop: '100px' }}>\r\n                <h1 style={{ fontWeight: 'bold' }}>강의 신청</h1>\r\n                <br />\r\n                <form\r\n                  onSubmit={save}\r\n                  style={{ marginTop: '1px', marginLeft: '200px' }}\r\n                >\r\n                  <FormLabel htmlFor=\"name\">강의명</FormLabel>\r\n                  <NativeSelect id=\"name\" name=\"title\" onChange={setNameText}>\r\n                    {courseitem.map((item) => (\r\n                      <option value={item.code}>{item.name}</option>\r\n                    ))}\r\n                  </NativeSelect>\r\n                  <br />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    style={{\r\n                      backgroundColor: '#3E68F1',\r\n                      color: 'white',\r\n                      marginTop: '10px',\r\n                      width: '200px',\r\n                    }}\r\n                  >\r\n                    신청하기\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n              <br />\r\n              <h1 style={{ fontWeight: 'bold' }}>개설강의 목록</h1>\r\n              <div>\r\n                <table id=\"room\">\r\n                  <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                  </thead>\r\n                  <tbody>{renderBody()}</tbody>\r\n                </table>\r\n              </div>\r\n            </>\r\n          </StudentRegisterCourseBlock>\r\n        </TableBox>\r\n      </AttendTemplateBlock>\r\n    </RegisterCoursePageBlock>\r\n  );\r\n};\r\nexport default RegisterCoursePage;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { postCourse } from '../lib/api/allapi';\r\nimport Button from '../components/common/Button';\r\nconst OpenCoursePageBlock = styled.div``;\r\nconst CourseContainerBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: white;\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst InformBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 600px;\r\n  height: 580px;\r\n  background: #d7e0fc;\r\n  border-radius: 2px;\r\n`;\r\nconst CourseFormBlock = styled.div`\r\n  font-size: 1rem;\r\n  border: none;\r\n  font-weight: bold;\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  bt {\r\n    position: absolute;\r\n\r\n    left: 100px;\r\n\r\n    top: 150px;\r\n  }\r\n`;\r\nconst OpenCoursePage = ({ match }) => {\r\n  const user_code = match.params.user_code;\r\n  const [name, setName] = useState('');\r\n  const [description, setDesc] = useState('');\r\n\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const onChangeDesc = (e) => {\r\n    setDesc(e.target.value);\r\n  };\r\n  const onClick = async (e) => {\r\n    e.preventdefault();\r\n    let res = await postCourse(user_code, name, description);\r\n    res = res.data.result.affectedRows;\r\n    // if (res === 1) {\r\n    //  alert('강의개설 완료!');\r\n    // } else {\r\n    //  alert('강의개설 실패!');\r\n    //  }\r\n  };\r\n  if (!user_code) return <div>유저정보 안받아짐</div>;\r\n  return (\r\n    <OpenCoursePageBlock>\r\n      <CourseContainerBlock>\r\n        <InformBox>\r\n          <CourseFormBlock>\r\n            <div>\r\n              <h1>강의 개설</h1>\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"http://yui.yahooapis.com/pure/0.6.0/pure-min.css\"\r\n              />\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"\r\n              />\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdn.rawgit.com/dwyl/html-form-send-email-via-google-script-without-server/master/style.css\"\r\n              />\r\n\r\n              <form id=\"gform\" class=\"pure-form pure-form-stacked\" action=\"\">\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"name\">강의 명칭</label>\r\n                  <input\r\n                    type=\"text \"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"입력하세요.\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    onChange={onChangeName}\r\n                    value={name}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"definition\">강의 설명 </label>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    placeholder=\"입력하세요.\"\r\n                    onChange={onChangeDesc}\r\n                    value={description}\r\n                  ></textarea>\r\n                </fieldset>\r\n\r\n                <Button class=\"bt\" cyan width=\"100%\" onClick={onClick}>\r\n                  개설\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </CourseFormBlock>\r\n        </InformBox>\r\n      </CourseContainerBlock>\r\n    </OpenCoursePageBlock>\r\n  );\r\n};\r\nexport default OpenCoursePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { AllAssign } from '../lib/api/allapi';\r\nimport Button from '../components/common/Button';\r\nconst QpPageBlock = styled.div``;\r\nconst QpFormBlock = styled.div``;\r\nconst QpPage = ({ match }) => {\r\n  const course_code = match.params.course_code;\r\n  const user_code = match.params.user_code;\r\n  const auth = match.params.auth;\r\n  const [problemList, setProblemList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let response = await AllAssign(course_code);\r\n        console.log('----' + course_code);\r\n        response = response.data;\r\n        setProblemList(response);\r\n      } catch (e) {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [course_code]);\r\n  if (!loading) {\r\n    return <QpPageBlock>대기중..</QpPageBlock>;\r\n  }\r\n  if (!problemList && problemList.length === 0)\r\n    return (\r\n      <div>\r\n        <p style={{ marginLeft: '30rem' }}>등록된 과제가 없습니다.</p>\r\n      </div>\r\n    );\r\n  if (auth === 'AUTH000002') {\r\n    return (\r\n      <div>\r\n        <QpFormBlock>\r\n          <div>\r\n            <p>\r\n              <strong>\r\n                <h1 style={{ marginTop: '90px', marginLeft: '100px' }}>\r\n                  과제선택\r\n                </h1>\r\n              </strong>\r\n            </p>\r\n            <div>\r\n              {problemList &&\r\n                problemList.map((k) => {\r\n                  let url =\r\n                    '/select/' +\r\n                    course_code +\r\n                    '/' +\r\n                    user_code +\r\n                    '/' +\r\n                    k.code +\r\n                    '/' +\r\n                    auth;\r\n                  return (\r\n                    <ListGroup style={{ width: '500px', margin: '190px' }}>\r\n                      <Link to={url}>\r\n                        <ListGroupItem active tag=\"a\" href=\"#\" action>\r\n                          {k.code}\r\n                        </ListGroupItem>\r\n                      </Link>\r\n                    </ListGroup>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </QpFormBlock>\r\n      </div>\r\n    );\r\n  } else if (auth === 'AUTH000001') {\r\n    return (\r\n      <div>\r\n        <QpFormBlock>\r\n          <div>\r\n            <p>\r\n              <strong>\r\n                <h1 style={{ marginTop: '90px', marginLeft: '100px' }}>과제</h1>\r\n              </strong>\r\n            </p>\r\n            <div>\r\n              {problemList &&\r\n                problemList.map((k) => {\r\n                  let url =\r\n                    '/Qpwrite/' +\r\n                    course_code +\r\n                    '/' +\r\n                    user_code +\r\n                    '/' +\r\n                    k.code +\r\n                    '/' +\r\n                    auth;\r\n                  let url_2 =\r\n                    '/select/' +\r\n                    course_code +\r\n                    '/' +\r\n                    user_code +\r\n                    '/' +\r\n                    k.code +\r\n                    '/' +\r\n                    auth;\r\n                  return (\r\n                    <div>\r\n                      <ListGroup style={{ width: '500px', margin: '190px' }}>\r\n                        <ListGroupItem active tag=\"a\" href=\"#\" action>\r\n                          {k.code}\r\n                          <Link to={url}>\r\n                            {' '}\r\n                            <Button\r\n                              style={{\r\n                                backgroundColor: 'white',\r\n                                color: 'black',\r\n                                marginLeft: '5px',\r\n                              }}\r\n                            >\r\n                              질문등록\r\n                            </Button>{' '}\r\n                          </Link>{' '}\r\n                        </ListGroupItem>\r\n                      </ListGroup>\r\n                      <div>\r\n                        <Link to={url_2}>\r\n                          <Button style={{ width: '500px', margin: '190px' }}>\r\n                            내 과거 질문\r\n                          </Button>{' '}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </QpFormBlock>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default QpPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nconst CommentsBlock = styled.div`\r\n  .comment {\r\n    border: 1px solid #ccc;\r\n    padding: 1em;\r\n    margin: 1em 0;\r\n  }\r\n`;\r\nexport default class Comments extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comments: [],\r\n      id: '',\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({ comments: e.target.value });\r\n  };\r\n  componentDidMount() {\r\n    axios.get(`/auth/session`).then((res) => {\r\n      this.setState({ id: res.user.code });\r\n    });\r\n    axios.get(`/queston`).then((res) => {\r\n      let comm = [];\r\n      for (var i in res.data) {\r\n        comm.push({ index: i, value: res.data[i] });\r\n      }\r\n      this.setState({ comments: comm });\r\n    });\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.prevenDefault();\r\n\r\n    const comments_group = {\r\n      comments: this.state.comments,\r\n    };\r\n    axios.post(`/question`, { comments_group }).then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      if (res.data['success'] !== undefined) {\r\n        //등록 성공\r\n        alert('답변등록이 완료되었습니다.');\r\n      } else {\r\n        //로그인 실패\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { comments } = this.state;\r\n    return (\r\n      <CommentsBlock>\r\n        <div className=\"form-group\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label>New comment</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"comments\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <div className=\"text-right\">\r\n              <button type=\"submit\"> 등록</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {comments.map((comment) => {\r\n          return (\r\n            <div key={comment.index} className=\"comment\">\r\n              {comment.value}\r\n            </div>\r\n          );\r\n        })}\r\n      </CommentsBlock>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n//styling\r\nconst Wrap = styled.div`\r\n  padding: 20px;\r\n  h2 {\r\n    padding-bottom: 20px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  p {\r\n    min-height: 200px;\r\n  }\r\n`;\r\nconst Button = styled.div`\r\n  border-top: 1px solid #eee;\r\n  padding: 20px;\r\n  a {\r\n    float: right;\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    text-decoration: none;\r\n    background: #f2f2f2;\r\n    border: 1px solid #ddd;\r\n    color: #424242;\r\n    font-size: 16px;\r\n  }\r\n  a + a {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\nconst URL = '/question';\r\nclass ReadQuestion extends Component {\r\n  state = { id: '', board: [] }; //로딩 데이터\r\n  getEmployees() {\r\n    return axios.get('/question');\r\n  }\r\n  getID = async () => {\r\n    try {\r\n      // const id = 0; //test id\r\n      const response = await axios.get(`/auth/session`);\r\n      this.setState({\r\n        id: response.user.code,\r\n      });\r\n      console.log(response.user.code);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  loadingData = async () => {\r\n    try {\r\n      // const id = 0; //test id\r\n      const { id } = this.props.match.params;\r\n      console.log(id);\r\n      const response = await axios.get(`question/${id}`);\r\n      this.setState({\r\n        // boards: 'test'\r\n        board: response.data,\r\n      });\r\n      console.log(response.data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    const { getID, loadingData } = this;\r\n    getID();\r\n    loadingData();\r\n  }\r\n  UpdatePost() {\r\n    axios\r\n      .post('/board' + this.board)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n  DeletePost() {\r\n    axios\r\n      .delete(`${URL}/${this.id}`)\r\n      .then(function (response) {\r\n        // handle success\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  }\r\n  render() {\r\n    const { board } = this.state;\r\n    return (\r\n      <Wrap>\r\n        <h2>{board.title}</h2>\r\n        <p>{board.content}</p>\r\n        <Button>\r\n          <Link to=\"/Qplist\">목록</Link>\r\n          <a onClick={() => this.UpdatePost()}>수정</a>\r\n          <a onClick={() => this.DeletePost()}>삭제</a>\r\n        </Button>\r\n      </Wrap>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReadQuestion;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Comments from '../components/comment/Comments';\r\n\r\nimport ReadQuestion from '../components/comment/ReadQuestion';\r\n\r\nconst QpreadPageBlock = styled.div``;\r\n\r\nconst QpreadPage = () => {\r\n  return (\r\n    <QpreadPageBlock>\r\n      <ReadQuestion />\r\n      <Comments />\r\n    </QpreadPageBlock>\r\n  );\r\n};\r\nexport default QpreadPage;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../components/common/Button';\r\nimport { createQuestion } from '../lib/api/allapi';\r\nconst QpwritePageBlock = styled.div``;\r\nconst InformBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 600px;\r\n  height: 580px;\r\n  background: #d7e0fc;\r\n  border-radius: 2px;\r\n`;\r\nconst CourseContainerBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: white;\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst CourseFormBlock = styled.div`\r\n  font-size: 1rem;\r\n  border: none;\r\n  font-weight: bold;\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  bt {\r\n    position: absolute;\r\n\r\n    left: 100px;\r\n\r\n    top: 150px;\r\n  }\r\n`;\r\n\r\nconst QpwritePage = ({ match }) => {\r\n  const course_code = match.params.course_code;\r\n  const user_code = match.params.user_code;\r\n  const code = match.params.code;\r\n  const auth = match.params.auth;\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDesc] = useState('');\r\n\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onChangeDesc = (e) => {\r\n    setDesc(e.target.value);\r\n  };\r\n  const onClick = () => {\r\n    if (!title || !description) return alert('모든 필수정보를 입력하세요.');\r\n    let res = createQuestion(code, user_code, title, description);\r\n    res = res.result.result.affectedRows;\r\n    //if (res === '1') {\r\n    //alert('질문등록 완료!');\r\n    //  } else {\r\n    // alert('질문등록 실패!');\r\n    //  }\r\n  };\r\n  if (!user_code) return <div>유저정보 안받아짐</div>;\r\n  if (!course_code) return <div>코스정보 안받아짐</div>;\r\n  if (!code) return <div>과제 정보 안받아짐</div>;\r\n  return (\r\n    <QpwritePageBlock>\r\n      <CourseContainerBlock>\r\n        <InformBox>\r\n          <CourseFormBlock>\r\n            <div>\r\n              <h1>질문 등록</h1>\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"http://yui.yahooapis.com/pure/0.6.0/pure-min.css\"\r\n              />\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"\r\n              />\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdn.rawgit.com/dwyl/html-form-send-email-via-google-script-without-server/master/style.css\"\r\n              />\r\n\r\n              <form id=\"gform\" class=\"pure-form pure-form-stacked\">\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"name\">질문 제목</label>\r\n                  <input\r\n                    type=\"text \"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    placeholder=\"입력하세요.\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    onChange={onChangeTitle}\r\n                    value={title}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"definition\">질문 내용 </label>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    placeholder=\"입력하세요.\"\r\n                    onChange={onChangeDesc}\r\n                    value={description}\r\n                  ></textarea>\r\n                </fieldset>\r\n\r\n                <Button class=\"bt\" cyan width=\"100%\" onClick={onClick}>\r\n                  등록\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </CourseFormBlock>\r\n        </InformBox>\r\n      </CourseContainerBlock>\r\n    </QpwritePageBlock>\r\n  );\r\n};\r\nexport default QpwritePage;\r\n","import React, { useState } from 'react';\nimport { Paper } from '@material-ui/core';\nimport { AppBar } from '@material-ui/core';\nimport { withStyles, fade } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n  roomLayout: {\n    display: 'inlineBlock',\n    backgroundColor: 'white',\n    color: 'white',\n    padding: 0,\n    margin: 0,\n    marginRight: 50,\n    border: '1px solid black',\n    width: 800,\n    height: 720,\n    overflow: 'scroll',\n    boxShadow: 'grey 2px 2px 3px,grey -2px -2px 3px',\n  },\n  appBar: {\n    padding: theme.spacing(1),\n    backgroundColor: '#3e68f1',\n  },\n  search: {\n    borderRadius: theme.shape.borderRadius,\n    color: 'white',\n    backgroundColor: fade(theme.palette.common.white, 0.8),\n    '&:hover': {\n      backgroundColor: 'white',\n    },\n    '&:focus': {\n      backgroundColor: 'white',\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: 500,\n  },\n  buttonGroup: {\n    width: 200,\n  },\n  button: {\n    background: '#7B68EE',\n    border: '2px white solid',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    fontWeight: 600,\n    height: 60,\n  },\n});\n\nconst RoomLayout = ({\n  makeRoom,\n  enterRoom,\n  GetRoomsInfo,\n  rooms,\n  isRoomLoaded,\n  classes,\n}) => {\n  const [search, setSearch] = useState('');\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  /* 방 이름 검색 */\n  const filterRoom = (roomList) => {\n    return roomList.filter((room) => room.roomName.indexOf(search) >= 0);\n  };\n  const roomsList = filterRoom(rooms);\n  return <Paper className={classes.roomLayout}></Paper>;\n};\n\nexport default withStyles(styles)(RoomLayout);\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n  userInfo: {\n    border: '1px solid  #3e68f1',\n    background: 'white',\n    margin: 0,\n    marginBottom: 10,\n    //padding: 10,\n    width: 400,\n    height: 165,\n    boxShadow: ' #3e68f1 2px 2px 3px, #3e68f1 -2px -2px 3px',\n  },\n};\n\nconst UserInfo = ({ nick, classes }) => {\n  return (\n    <Paper className={classes.userInfo}>\n      <div>접속 아이디 : {nick}</div>\n      <div>어서오세요.</div>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(UserInfo);\n","import React, { useState, useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = () => ({\n  chattingRoom: {\n    boxShadow: ' #3e68f1 2px 2px 3px, #3e68f1 -2px -2px 3px',\n    display: 'inline-block',\n    backgroundColor: 'white',\n    margin: 0,\n    padding: 10,\n    border: '1px solid  #3e68f1',\n    width: 400,\n    height: 500,\n  },\n  chattingMessage: {\n    overflow: 'auto',\n    listStyleType: 'none',\n    height: 450,\n    width: '100%',\n    margin: 0,\n    padding: 0,\n    marginBottom: 10,\n    border: '1px solid  #3e68f1',\n  },\n  message: {\n    width: '100%',\n    height: 30,\n    fontSize: '2rem',\n  },\n  systemMsg: {\n    border: '1px  #3e68f1 solid',\n    padding: 5,\n    margin: 10,\n    textAlign: 'center',\n    backgroundColor: ' #3e68f1',\n    color: 'white',\n    marginLeft: '10%',\n    marginRight: '10%',\n    boxShadow: ' #3e68f1 2px 2px 3px, #3e68f1 -2px -2px 3px',\n  },\n  myMsg: {\n    border: '1px  #3e68f1 solid',\n    padding: '5px',\n    margin: '10px',\n    textAlign: 'left',\n    borderRadius: 10,\n    marginLeft: '30%',\n    marginRight: 3,\n    boxShadow: 'grey 2px 2px 3px,grey -2px -2px 3px',\n  },\n  othersMsg: {\n    border: '1px  #3e68f1 solid',\n    padding: 5,\n    margin: 10,\n    textAlign: 'left',\n    borderRadius: 10,\n    marginLeft: 3,\n    marginRight: '30%',\n    boxShadow: ' #3e68f1 2px 2px 3px, #3e68f1 -2px -2px 3px',\n  },\n  Msg: {\n    fontSize: 20,\n  },\n});\n\nconst Chat = ({ sendMessage, chattingMessages, classes }) => {\n  // 메시지 element key\n  let num = 0;\n  const [message, setMessage] = useState('');\n  let messagesEnd = React.createRef();\n\n  const handleMessageInput = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.charCode === 13) {\n      handleSendMessage();\n    }\n  };\n\n  /* 메시지 보내기 */\n  const handleSendMessage = () => {\n    sendMessage(message);\n    setMessage('');\n  };\n  /* 채팅 메시지 밑으로 내리기 */\n  const scrollToBottom = () => {\n    messagesEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  });\n\n  /* 메치시 리스트 */\n  const chattingList = chattingMessages.map((chatting) => {\n    if (chatting.who === 'system') {\n      //시스템신호\n      return (\n        <li key={num++} className={classes.systemMsg}>\n          <Paper>{chatting.message}</Paper>\n        </li>\n      );\n    } else if (chatting.who === 'me') {\n      //내꺼\n      return (\n        <li key={num++} className={classes.myMsg}>\n          <Box>\n            {chatting.who} {chatting.time}\n            <br />\n            <Box className={classes.Msg}>{chatting.message}</Box>\n          </Box>\n        </li>\n      );\n    } else {\n      return (\n        //남꺼\n        <li key={num++} className={classes.othersMsg}>\n          <Box>\n            {chatting.who} {chatting.time}\n            <br />\n            <Box className={classes.Msg}>{chatting.message}</Box>\n          </Box>\n        </li>\n      );\n    }\n  });\n\n  return (\n    <Box className={classes.chattingRoom}>\n      <ul className={classes.chattingMessage}>\n        {chattingList}\n        <div\n          style={{ float: 'left', clear: 'both' }}\n          ref={(el) => {\n            messagesEnd = el;\n          }}\n        ></div>\n      </ul>\n      <div>\n        <input\n          className={classes.message}\n          name=\"message\"\n          autoComplete=\"off\"\n          placeholder=\"입력\"\n          value={message}\n          onChange={handleMessageInput}\n          onKeyPress={handleKeyPress}\n        />\n      </div>\n    </Box>\n  );\n};\n\nexport default withStyles(styles)(Chat);\n","import React from 'react';\nimport io from 'socket.io-client';\nimport RoomLayout from '../components/chat/RoomLayout';\nimport UserInfo from '../components/chat/UserInfo';\nimport Chat from '../components/chat/Chat';\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rooms: [],\n      isRoomLoaded: false,\n      enterRoom: false,\n      enterRoomNum: 0,\n      course_code: '',\n      room_code: '',\n      user_code: '',\n      chattingMessages: [\n        { who: 'system', message: '안녕하세요, 반가워요 ㅎㅎ' },\n      ],\n      socket: null,\n    };\n  }\n  //소켓 연결하기\n  handleConnectSocket = () => {\n    const { socket, user_code } = this.state;\n    socket.on('connect', () => {\n      console.log('연결됬어요;);');\n      socket.on('hi', (msg) => {\n        //서버에서 보내주는거\n        this.handleGetMessageFromServer(msg, true);\n      });\n      socket.on('chat', (msg) => {\n        //사람끼리 이야기하는거\n        this.handleGetMessageFromServer(msg, false);\n      });\n      socket.emit('joinRoom', user_code);\n    });\n    socket.on('error', (error) => {\n      this.handleGetMessageFromServer('서버와의 연결이 되지않습니다.', true);\n    });\n  };\n  //채팅 메시지 보내는거\n  handleSendMessageToServer = (message) => {\n    const { socket } = this.state;\n    const time = new Date().toLocaleTimeString();\n    socket.emit(\n      'chat',\n      JSON.stringify({ email: this.props.email, message, time }),\n    );\n  };\n  //채팅 메시지 받는거\n  handleGetMessageFromServer = (msg, signal) => {\n    const { chattingMessages } = this.state;\n    let messageObj = { who: '', message: '' };\n\n    if (signal) {\n      //서버신호 -> 방입장\n      messageObj.who = 'system';\n      messageObj.message = msg;\n      this.setState({\n        chattingMessages: chattingMessages.concat(messageObj),\n      });\n      return;\n    }\n    //사람신호 -> 채팅\n    let { email, message, time } = JSON.parse(msg);\n    if (email === this.props.email) {\n      messageObj.who = 'me';\n    } else {\n      messageObj.who = email;\n    }\n    messageObj.message = message;\n    messageObj.time = time;\n    this.setState({\n      chattingMessages: chattingMessages.concat(messageObj),\n    });\n  };\n\n  //컴포넌트 마운트 끝나면 서버로부터 정보 가지고오기\n  componentDidMount() {\n    const url = this.props.location.pathname.split('/');\n    const course_code = url[2];\n    const room_code = url[3];\n    const user_code = url[4];\n    const socket = io(`/${course_code}/${room_code}`, {\n      transports: ['polling'],\n      forceNew: true,\n    });\n    this.setState(\n      {\n        socket,\n        course_code,\n        room_code,\n        user_code,\n      },\n      () => this.handleConnectSocket(),\n    );\n  }\n\n  render() {\n    const { rooms, chattingMessages, isRoomLoaded, user_code } = this.state;\n    return (\n      <div id=\"main-wrap\" style={{ display: 'flex' }}>\n        <RoomLayout rooms={rooms} isRoomLoaded={isRoomLoaded} />\n\n        <div id=\"rightSide\">\n          <UserInfo nick={user_code} />\n          <Chat\n            sendMessage={this.handleSendMessageToServer}\n            chattingMessages={chattingMessages}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n// const MainPage = ({ match }) => {\n//   const course_code = match.params.course_code;\n//   const room_code = match.params.room_code;\n//   const user_code = match.params.user_code;\n//   const [rooms, setRooms] = useState([]);\n//   const [isRoomLoaded, setIsRoomLoaded] = useState(false);\n//   const [chattingMessages, setChattingMessages] = useState([\n//     { who: 'system', message: '채팅을 시작하세요.' },\n//   ]);\n//   const socket = io.connect(`/${course_code}/${room_code}`, {\n//     transports: ['polling'],\n//     forceNew: true,\n//   })\n//   useEffect(()=>{\n//     socket.on('hi', (msg) => {\n//       //서버에서 보내주는거\n//       console.log(msg);\n//       handleGetMessageFromServer(msg, true);\n//     });\n//     socket.on('chat', (msg) => {\n//       //사람끼리 이야기하는거\n//       console.log(msg);\n//       handleGetMessageFromServer(msg, false);\n//     });\n//     socket.emit('joinRoom', user_code);\n//   })\n\n//   // const [socket, setSocket] = useState(\n//   //   io(`/${course_code}/${room_code}`, {\n//   //     transports: ['polling'],\n//   //     forceNew: true,\n//   //   }),\n//   // );\n//   // useEffect(()=>{\n//   //   handleConnectSocket(socket);\n//   // },[])\n\n//   /* 소캣 변경 */\n//   // const handleChangeSocket = () => {\n//   //   socket.disconnect();\n//   //   setSocket(\n//   //     io(`/${course_code}/${room_code}`, {\n//   //       transports: ['polling'],\n//   //       forceNew: true,\n//   //     }),\n//   //   );\n//   // };\n\n//   // /* 소캣 연결 */\n//   // const handleConnectSocket = (socket) => {\n//   //   console.log('12345\"');\n//   //   socket.on('connect', () => {\n//   //     console.log('연결됨');\n//   //     socket.on('hi', (msg) => {\n//   //       //서버에서 보내주는거\n//   //       console.log(msg);\n//   //       handleGetMessageFromServer(msg, true);\n//   //     });\n//   //     socket.on('chat', (msg) => {\n//   //       //사람끼리 이야기하는거\n//   //       console.log(msg);\n//   //       handleGetMessageFromServer(msg, false);\n//   //     });\n//   //     socket.emit('joinRoom', user_code);\n//   //   });\n//   //   socket.on('error', (error) => {\n//   //     handleGetMessageFromServer(`서버 연결이 되지않습니다. \"${error}\" `, true);\n//   //   });\n//   // };\n\n//   /* 채팅 메시지 보내기 */\n//   const handleSendMessageToServer = (message) => {\n//     const time = new Date().toLocaleTimeString();\n//     console.log(message);\n//     socket.emit(\n//       'chat',\n//       JSON.stringify({ user_code: user_code, message, time }),\n//     );\n//   };\n\n//   /* 채팅 메시지 받기 */\n//   const handleGetMessageFromServer = (msg, signal) => {\n//     let messageObj = { who: '', message: '' };\n\n//     if (signal) {\n//       //서버신호 -> 방입장\n//       messageObj.who = 'system';\n//       messageObj.message = msg;\n//       setChattingMessages(chattingMessages.concat(messageObj));\n//       return;\n//     } else {\n//       //사람신호 -> 채팅\n//       let { user_code, message, time } = JSON.parse(msg);\n//       if (user_code === user_code) {\n//         messageObj.who = 'me';\n//       } else {\n//         messageObj.who = user_code;\n//       }\n//       messageObj.message = message;\n//       messageObj.time = time;\n//       setChattingMessages(chattingMessages.concat(messageObj));\n//     }\n//   };\n\n//   return (\n//     <div id=\"main-wrap\" style={{ display: 'flex' }}>\n//       <RoomLayout rooms={rooms} isRoomLoaded={isRoomLoaded} />\n\n//       <div id=\"rightSide\">\n//         <UserInfo nick={user_code} />\n//         <Chat\n//           sendMessage={handleSendMessageToServer}\n//           chattingMessages={chattingMessages}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\nexport default MainPage;\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteQuestion, getmyQuestion, getQuestion } from '../lib/api/allapi';\r\nimport Button from '../components/common/Button';\r\nconst SelectQuestionPageBlock = styled.div``;\r\n\r\nconst SelectQuestionPage = ({ match }) => {\r\n  const course_code = match.params.course_code;\r\n  const user_code = match.params.user_code;\r\n  const code = match.params.code;\r\n  const auth = match.params.auth;\r\n  console.log(course_code);\r\n  console.log(user_code);\r\n  console.log(auth);\r\n  console.log(code);\r\n  const [questionList, setQuestionList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (auth === 'AUTH000002') {\r\n          let response = await getQuestion(code);\r\n          response = response.data;\r\n          setQuestionList(response);\r\n        } else if (auth === 'AUTH000001') {\r\n          let response = await getmyQuestion(user_code);\r\n          response = response.data;\r\n          setQuestionList(response);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [code]);\r\n  //if (!loading) {\r\n  // return <SelectQuestionPageBlock>대기중..</SelectQuestionPageBlock>;\r\n  // }\r\n  if (!questionList && questionList === 0)\r\n    return (\r\n      <div>\r\n        <p style={{ marginLeft: '30rem' }}>질문정보 없음.</p>\r\n      </div>\r\n    );\r\n  const deleteButton = (assigncode, questioncode) => {\r\n    console.log(assigncode + '/' + questioncode);\r\n    let res = deleteQuestion(assigncode, questioncode);\r\n    //res = res.data;\r\n    //res=res.data.success\r\n    res = res.data;\r\n    console.log(res);\r\n    // if (!res) return null;\r\n    // else {\r\n    //  if (res === 'true') {\r\n    //   alert('질문삭제성공!');\r\n    //  } else {\r\n    //   alert('질문삭제실패!');\r\n    //  }\r\n    //}\r\n  };\r\n\r\n  return (\r\n    <SelectQuestionPageBlock>\r\n      <div>\r\n        <p>\r\n          <strong>\r\n            <h1 style={{ marginTop: '90px', marginLeft: '100px' }}>질문선택</h1>\r\n          </strong>\r\n        </p>\r\n        <div>\r\n          {questionList &&\r\n            questionList.map((k) => {\r\n              let url1 = '/answer/' + k.code + '/' + user_code + '/' + code;\r\n              let url2 =\r\n                '/reviseQuestion/' + k.code + '/' + user_code + '/' + code;\r\n              if (auth === 'AUTH000002') {\r\n                return (\r\n                  <ListGroup style={{ width: '500px', margin: '190px' }}>\r\n                    <Link to={url1}>\r\n                      <ListGroupItem active tag=\"a\" href=\"#\" action>\r\n                        <tr>\r\n                          제목:\r\n                          <td>\r\n                            {k.title}\r\n                            <br />\r\n                          </td>\r\n                          내용:<td>{k.description}</td>\r\n                        </tr>\r\n                      </ListGroupItem>\r\n                    </Link>\r\n                  </ListGroup>\r\n                );\r\n              } else if (auth === 'AUTH000001') {\r\n                return (\r\n                  <ListGroup style={{ width: '500px', margin: '190px' }}>\r\n                    <ListGroupItem active tag=\"a\" href=\"#\" action>\r\n                      <tr>\r\n                        제목:<td>{k.title}</td>\r\n                        내용:<td>{k.description}</td>\r\n                        <td>\r\n                          <Link to={url2}>\r\n                            <Button style={{ marginLeft: '10px' }}>수정</Button>\r\n                          </Link>\r\n                        </td>\r\n                        <td>\r\n                          <Button\r\n                            style={{ marginLeft: '10px' }}\r\n                            onClick={() =>\r\n                              deleteButton(k.assignment_code, k.code)\r\n                            }\r\n                          >\r\n                            삭제\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                );\r\n              }\r\n            })}\r\n        </div>\r\n      </div>\r\n    </SelectQuestionPageBlock>\r\n  );\r\n};\r\nexport default SelectQuestionPage;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../components/common/Button';\r\nimport { createAnswer } from '../lib/api/allapi';\r\nconst CourseContainerBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: white;\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst InformBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 600px;\r\n  height: 580px;\r\n  background: #d7e0fc;\r\n  border-radius: 2px;\r\n`;\r\nconst CourseFormBlock = styled.div`\r\n  font-size: 1rem;\r\n  border: none;\r\n  font-weight: bold;\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  bt {\r\n    position: absolute;\r\n\r\n    left: 100px;\r\n\r\n    top: 150px;\r\n  }\r\n`;\r\n\r\nconst AnswerPageBlock = styled.div``;\r\n\r\nconst AnswerPage = ({ match }) => {\r\n  const questioncode = match.params.questioncode;\r\n  const user_code = match.params.user_code;\r\n  const code = match.params.Assigncode;\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDesc] = useState('');\r\n\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n    console.log(title);\r\n  };\r\n  const onChangeDesc = (e) => {\r\n    setDesc(e.target.value);\r\n    console.log(description);\r\n  };\r\n  const onClick = async () => {\r\n    if (!title || !description) return alert('모든 필수정보를 입력하세요.');\r\n    let res = await createAnswer(\r\n      questioncode,\r\n      user_code,\r\n      title,\r\n      description,\r\n      code,\r\n    );\r\n    // res = res.data.result.success;\r\n    //if (res === 'true') {\r\n    //  alert('질문등록 완료!');\r\n    // } else {\r\n    //  alert('질문등록 실패!');\r\n    //}\r\n  };\r\n  if (!user_code) return <div>유저정보 안받아짐</div>;\r\n  if (!questioncode) return <div>질문정보 안받아짐</div>;\r\n  if (!code) return <div>과제 정보 안받아짐</div>;\r\n  return (\r\n    <AnswerPageBlock>\r\n      <CourseContainerBlock>\r\n        <InformBox>\r\n          <CourseFormBlock>\r\n            <div>\r\n              <h1>답변 등록</h1>\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"http://yui.yahooapis.com/pure/0.6.0/pure-min.css\"\r\n              />\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"\r\n              />\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdn.rawgit.com/dwyl/html-form-send-email-via-google-script-without-server/master/style.css\"\r\n              />\r\n\r\n              <form id=\"gform\" class=\"pure-form pure-form-stacked\">\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"name\">답변 제목</label>\r\n                  <input\r\n                    type=\"text \"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    placeholder=\"입력하세요.\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    onChange={onChangeTitle}\r\n                    value={title}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"definition\">답변 내용 </label>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    placeholder=\"입력하세요.\"\r\n                    onChange={onChangeDesc}\r\n                    value={description}\r\n                  ></textarea>\r\n                </fieldset>\r\n\r\n                <Button class=\"bt\" cyan width=\"100%\" onClick={onClick}>\r\n                  등록\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </CourseFormBlock>\r\n        </InformBox>\r\n      </CourseContainerBlock>\r\n    </AnswerPageBlock>\r\n  );\r\n};\r\nexport default AnswerPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from '@material-ui/core/Input';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Link } from 'react-router-dom';\r\nimport { getRoomInfo, CreateRoom, InRoom } from '../lib/api/allapi';\r\nimport Button from '../components/common/Button';\r\n\r\nconst TablePageBlock = styled.div`\r\n  margin: 0 auto;\r\n\r\n  border: none;\r\n  padding: 1rem;\r\n  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap');\r\n\r\n  body {\r\n    font-family: 'Quicksand', sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 0;\r\n    color: #4d4d4d;\r\n  }\r\n\r\n  #title {\r\n    margin-top: 1px;\r\n    margin-left: 200px;\r\n  }\r\n\r\n  #room {\r\n    border-collapse: collapse;\r\n    border: 3px solid #ddd;\r\n  }\r\n\r\n  #room td,\r\n  #room th {\r\n    border: 1px solid #ddd;\r\n    padding: 12px;\r\n  }\r\n\r\n  #room tr:hover {\r\n    background-color: #ddd;\r\n  }\r\n\r\n  #room th {\r\n    padding: 10px;\r\n    text-align: center;\r\n    background-color: #3e68f1;\r\n    color: white;\r\n  }\r\n\r\n  .opration {\r\n    text-align: center;\r\n  }\r\n\r\n  .button {\r\n    border: none;\r\n    outline: none;\r\n    font-size: 11px;\r\n    font-family: 'Quicksand', sans-serif;\r\n    color: #f44336;\r\n    padding: 3px 10px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    border: 1px solid #f44336;\r\n    background-color: transparent;\r\n  }\r\n\r\n  .button:active {\r\n    border: 1px solid blue;\r\n  }\r\n`;\r\n\r\nconst TablePage = ({ match }) => {\r\n  const course_code = match.params.course_code;\r\n  const user_code = match.params.user_code;\r\n  const auth = match.params.auth_code;\r\n  const [rooms, setRooms] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [hour, setHour] = useState('');\r\n  const [min, setMin] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let response = await getRoomInfo(course_code);\r\n        response = response.data;\r\n        setRooms(response);\r\n      } catch (e) {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [course_code]);\r\n\r\n  const setTitleText = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const setDescriptionText = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n  const setHourText = (e) => {\r\n    setHour(e.target.value);\r\n  };\r\n  const setMinText = (e) => {\r\n    setMin(e.target.value);\r\n  };\r\n\r\n  const save = async (e) => {\r\n    e.preventDefault();\r\n    const submitValue = {\r\n      title: title,\r\n      description: description,\r\n      hour: hour,\r\n      min: min,\r\n    };\r\n    console.log(title + '/' + description + '/' + hour + '/' + min);\r\n    let res = await CreateRoom(course_code, submitValue);\r\n    res = res.data;\r\n    // if(res==='true') return alert('룸 생성 성공!');\r\n  };\r\n\r\n  // const IntoRoom = (course_code, room_code, user_code) => {\r\n  //   InRoom(course_code).then((res) => {});\r\n  // };\r\n\r\n  const renderHeader = () => {\r\n    let headerElement = ['코드', '이름', '시작시간', '종료시간', '룸입장'];\r\n\r\n    return headerElement.map((key, index) => {\r\n      return <th key={index}>{key.toUpperCase()}</th>;\r\n    });\r\n  };\r\n  if (!loading) {\r\n    return <TablePageBlock>대기중..</TablePageBlock>;\r\n  }\r\n\r\n  const renderBody = () => {\r\n    if (!rooms && rooms.length === 0) {\r\n      return (\r\n        <div>\r\n          <p style={{ marginLeft: '30rem' }}>개설된 룸 없음</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        rooms &&\r\n        rooms.map((k) => {\r\n          const url =\r\n            '/roompage2/' + k.course_code + '/' + k.code + '/' + user_code;\r\n\r\n          return (\r\n            <tr key={k.code}>\r\n              <td>{k.code}</td>\r\n              <td>{k.name}</td>\r\n              <td>{k.open_time}</td>\r\n              <td>{k.close_time}</td>\r\n              <td>\r\n                <Link to={url}>\r\n                  <Button>room입장</Button>\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })\r\n      );\r\n    }\r\n  };\r\n  if (auth === 'AUTH000002') {\r\n    return (\r\n      <TablePageBlock>\r\n        <>\r\n          <br />\r\n          <br />\r\n          <h1 id=\"title\">Room</h1>\r\n          <div style={{ margin: '200px' }}>\r\n            <table id=\"room\">\r\n              <thead>\r\n                <tr>\r\n                  {' '}\r\n                  <tbody>{renderBody()}</tbody>\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n          </div>\r\n\r\n          <form\r\n            onSubmit={save}\r\n            style={{ marginTop: '1px', marginLeft: '200px' }}\r\n          >\r\n            <FormLabel htmlFor=\"title\">room 이름</FormLabel>\r\n            <Input\r\n              name=\"title\"\r\n              id=\"title\"\r\n              placeholder=\"\"\r\n              onChange={setTitleText}\r\n            />\r\n            <br />\r\n            <FormLabel htmlFor=\"description\">room 설명</FormLabel>\r\n            <Input\r\n              name=\"decription\"\r\n              id=\"description\"\r\n              placeholder=\"\"\r\n              onChange={setDescriptionText}\r\n            />\r\n            <br />\r\n            <FormLabel htmlFor=\"hour\">시</FormLabel>\r\n            <NativeSelect id=\"hour\" name=\"hour\" onChange={setHourText}>\r\n              <option value={hour}></option>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"6\">6</option>\r\n              <option value=\"7\">7</option>\r\n              <option value=\"8\">8</option>\r\n              <option value=\"9\">9</option>\r\n              <option value=\"10\">10</option>\r\n              <option value=\"11\">11</option>\r\n              <option value=\"12\">12</option>\r\n            </NativeSelect>\r\n            <br />\r\n            <FormLabel htmlFor=\"min\">분</FormLabel>\r\n            <NativeSelect id=\"min\" name=\"min\" onChange={setMinText}>\r\n              <option value={min}></option>\r\n              <option value=\"0\">0</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"10\">10</option>\r\n              <option value=\"15\">15</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"30\">30</option>\r\n              <option value=\"35\">35</option>\r\n              <option value=\"40\">40</option>\r\n              <option value=\"45\">45</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"55\">55</option>\r\n            </NativeSelect>\r\n            <br />\r\n            <br />\r\n            <Button\r\n              type=\"submit\"\r\n              style={{ backgroundColor: '#3E68F1', color: 'white' }}\r\n            >\r\n              개설하기\r\n            </Button>\r\n          </form>\r\n        </>\r\n      </TablePageBlock>\r\n    );\r\n  } else if (auth === 'AUTH000001') {\r\n    return (\r\n      <TablePageBlock>\r\n        <>\r\n          <br />\r\n          <br />\r\n          <h1 id=\"title\">Room</h1>\r\n          <div style={{ margin: '200px' }}>\r\n            <table id=\"room\">\r\n              <thead>\r\n                <tr>\r\n                  {' '}\r\n                  <tbody>\r\n                    {renderHeader()}\r\n                    {renderBody()}\r\n                  </tbody>\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n          </div>\r\n        </>\r\n      </TablePageBlock>\r\n    );\r\n  }\r\n};\r\nexport default TablePage;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../components/common/Button';\r\nimport { reviseQuestion } from '../lib/api/allapi';\r\nconst QpwritePageBlock = styled.div``;\r\nconst CourseContainerBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: white;\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst InformBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 600px;\r\n  height: 580px;\r\n  background: #d7e0fc;\r\n  border-radius: 2px;\r\n`;\r\nconst CourseFormBlock = styled.div`\r\n  font-size: 1rem;\r\n  border: none;\r\n  font-weight: bold;\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  bt {\r\n    position: absolute;\r\n\r\n    left: 100px;\r\n\r\n    top: 150px;\r\n  }\r\n`;\r\n\r\nconst ReviseQuestion = ({ match }) => {\r\n  const questioncode = match.params.questioncode;\r\n  const user_code = match.params.user_code;\r\n  const Assigncode = match.params.Assigncode;\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDesc] = useState('');\r\n\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onChangeDesc = (e) => {\r\n    setDesc(e.target.value);\r\n  };\r\n  const onClick = () => {\r\n    if (!title || !description) return alert('모든 필수정보를 입력하세요.');\r\n    let res = reviseQuestion(questioncode, Assigncode, title, description);\r\n    res = res.result.result.affectedRows;\r\n    //if (res === '1') {\r\n    //  alert('질문수정 완료!');\r\n    //} else {\r\n    //  alert('질문수정 실패!');\r\n    // }\r\n  };\r\n  if (!user_code) return <div>유저정보 안받아짐</div>;\r\n  if (!questioncode) return <div>질문정보 안받아짐</div>;\r\n  if (!Assigncode) return <div>과제 정보 안받아짐</div>;\r\n  return (\r\n    <QpwritePageBlock>\r\n      <CourseContainerBlock>\r\n        <InformBox>\r\n          <CourseFormBlock>\r\n            <div>\r\n              <h1>질문 수정</h1>\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"http://yui.yahooapis.com/pure/0.6.0/pure-min.css\"\r\n              />\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"\r\n              />\r\n\r\n              <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdn.rawgit.com/dwyl/html-form-send-email-via-google-script-without-server/master/style.css\"\r\n              />\r\n\r\n              <form id=\"gform\" class=\"pure-form pure-form-stacked\">\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"name\">질문 제목</label>\r\n                  <input\r\n                    type=\"text \"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    placeholder=\"입력하세요.\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    onChange={onChangeTitle}\r\n                    value={title}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset class=\"pure-group\">\r\n                  <label for=\"definition\">질문 내용 </label>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    rows=\"10\"\r\n                    cols=\"100\"\r\n                    placeholder=\"입력하세요.\"\r\n                    onChange={onChangeDesc}\r\n                    value={description}\r\n                  ></textarea>\r\n                </fieldset>\r\n\r\n                <Button class=\"bt\" cyan width=\"100%\" onClick={onClick}>\r\n                  등록\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </CourseFormBlock>\r\n        </InformBox>\r\n      </CourseContainerBlock>\r\n    </QpwritePageBlock>\r\n  );\r\n};\r\nexport default ReviseQuestion;\r\n","import React from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\n\nimport { RouteWithLayout } from './common';\nimport { Minimal as MinimalLayout, Default as DefaultLayout } from './layouts';\n\nimport {\n    Home as HomePage,\n    Packages as PackagesPage,\n    Problems as ProblemsPage,\n    NotFoundCover as NotFoundCoverPage,\n    Solving as SolvingPage,\n    Scoring as ScoringPage,\n    Assignments as AssignmentsPage, MainRoom\n} from './pages';\nimport MainRoomPage from \"./pages/MainRoomPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport PostListPage from \"./pages/PostListPage\";\nimport QpListPage from \"./pages/QpListPage\";\nimport ReviseCoursePage from \"./pages/ReviseCoursePage\";\nimport AtttendancePage from \"./pages/AttendancePage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport DeleteCoursePage from \"./pages/DeleteCoursePage\";\nimport RegisterCoursePage from \"./pages/RegisterCoursePage\";\nimport OpenCoursePage from \"./pages/OpenCoursePage\";\nimport QpPage from \"./pages/QpPage\";\nimport QpreadPage from \"./pages/QpreadPage\";\nimport QpwritePage from \"./pages/QpwritePage\";\nimport MainPage from \"./pages/MainPage\";\nimport SelectQuestionPage from \"./pages/selectQuestionPage\";\nimport AnswerPage from \"./pages/AnswerPage\";\nimport TablePage from \"./pages/TablePage\";\nimport ReviseQuestion from \"./pages/ReviseQuestion\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/home\" />\n        {/* ---------------------------------------------- */}\n        {/* Home */}\n        <RouteWithLayout\n            component={HomePage}\n            exact\n            layout={DefaultLayout}\n            path=\"/home\"\n        />\n        {/* Packages */}\n        <RouteWithLayout\n            component={PackagesPage}\n            exact\n            layout={DefaultLayout}\n            path=\"/packages\"\n        />\n        {/* Problems - 모든 문제 목록 */}\n        <RouteWithLayout\n            component={ProblemsPage}\n          exact\n          layout={DefaultLayout}\n          path=\"/problems\"\n        />\n        {/* Problems - 특정 패키지의 문제 목록 */}\n        <RouteWithLayout\n          component={ProblemsPage}\n          exact\n          layout={DefaultLayout}\n           path=\"/problems/:package_code\"\n         />\n        {/* Problems - 문제 풀기 */}\n        <RouteWithLayout\n            component={ProblemsPage}\n            exact\n            layout={DefaultLayout}\n            path=\"/problems/:package_code/:assignment_code\"\n        />\n         {/* 문제 답안 작성 */}\n         <RouteWithLayout\n          component={SolvingPage}\n          exact\n          layout={DefaultLayout}\n          path=\"/solving/:problem_code/:assignment_code\"\n         />\n         {/* 문제 답안 작성 - 미리보기 */}\n        <RouteWithLayout\n            component={SolvingPage}\n            exact\n            layout={DefaultLayout}\n            path=\"/solving/:problem_code\"\n         />\n        {/* 채점 */}\n        <RouteWithLayout\n            component={ScoringPage}\n            exact\n            layout={DefaultLayout}\n            path=\"/scoring\"\n        />\n        {/* 과제 목록 */}\n        <RouteWithLayout\n            component={AssignmentsPage}\n            exact\n            layout={DefaultLayout}\n            path=\"/assignments/:course_code\"\n        />\n        {/* 강의실 */}\n        <RouteWithLayout\n            component={MainRoom}\n            exact\n            layout={DefaultLayout}\n            path=\"/mainroom\"\n        />\n\n      {/* ---------------------------------------------- */}\n      {/* 홈 */}\n      <RouteWithLayout\n        component={PostListPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/@:username\"\n      />\n      {/* 로그인 */}\n      <RouteWithLayout\n        component={LoginPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/login\"\n      />\n      {/* 회원가입 */}\n      <RouteWithLayout\n        component={RegisterPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/register\"\n      />\n      {/* 출석수정 및 확인 */}\n      <RouteWithLayout\n        component={AtttendancePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/attendance/:course_code/:user_code/:auth\"\n      />\n      {/* 강의개설 */}\n      <RouteWithLayout\n        component={OpenCoursePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/opencourse/:user_code\"\n      />\n      {/* 강의신청 */}\n      <RouteWithLayout\n        component={RegisterCoursePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/registercourse/:user_code\"\n      />\n      {/* 강의폐강 */}\n      <RouteWithLayout\n        component={DeleteCoursePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/deletecourse/:course_code/:user_code\"\n      />\n      {/* 강의정보 수정 */}\n      <RouteWithLayout\n        component={ReviseCoursePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/revisecourse/:course_code/:user_code\"\n      />\n      {/* 강의실 */}\n      <RouteWithLayout\n        component={MainRoomPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/mainroom_old\"\n      />\n      {/* 질문목록 */}\n      <RouteWithLayout\n        component={QpListPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/Qplist/:course_code/:user_code/:code\"\n      />\n      {/* 질문할 문제 선택페이지 */}\n      <RouteWithLayout\n        component={QpPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/QuestionProblem/:course_code/:user_code/:auth\"\n      />\n      {/* 질문작성 */}\n      <RouteWithLayout\n        component={QpwritePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/Qpwrite/:course_code/:user_code/:code/:auth\"\n      />\n      {/* 질문 작성 페이지 */}\n      <RouteWithLayout\n        component={QpreadPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/Qpread/:course_code/:user_code/:code\"\n      />\n      {/* 질문 수정 페이지 */}\n      <RouteWithLayout\n        component={ReviseQuestion}\n        exact\n        layout={DefaultLayout}\n        path=\"/reviseQuestion/:questioncode/:user_code/:Assigncode\"\n      />\n      {/* 질문 선택 페이지 */}\n      <RouteWithLayout\n        component={SelectQuestionPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/select/:course_code/:user_code/:code/:auth\"\n      />\n      {/* 답변작성 페이지 */}\n      <RouteWithLayout\n        component={AnswerPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/answer/:questioncode/:user_code/:Assigncode\"\n      />\n      {/* room 개설 */}\n      <RouteWithLayout\n        component={TablePage}\n        exact\n        layout={DefaultLayout}\n        path=\"/roompage1/:course_code/:user_code/:auth_code\"\n      />\n      {/* room입장후 화면 */}\n      <RouteWithLayout\n        component={MainPage}\n        exact\n        layout={DefaultLayout}\n        path=\"/roompage2/:course_code/:room_code/:user_code\"\n      />\n\n      <RouteWithLayout\n        component={NotFoundCoverPage}\n        exact\n        layout={MinimalLayout}\n        path=\"/not-found-cover\"\n      />\n      <Redirect to=\"/not-found-cover\" status=\"404\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport AOS from 'aos';\n\nimport theme from './theme';\nimport Routes from './Routes';\n\nimport 'aos/dist/aos.css';\nimport './assets/scss/index.scss';\n\nconst browserHistory = createBrowserHistory();\n\nbrowserHistory.listen(location => {\n    // Use setTimeout to make sure this runs after React Router's own listener\n    setTimeout(() => {\n        // Keep default behavior of restoring scroll position when user:\n        // - clicked back button\n        // - clicked on a link that programmatically calls `history.goBack()`\n        // - manually changed the URL in the address bar (here we might want\n        // to scroll to top, but we can't differentiate it from the others)\n        if (location.action === 'POP') {\n            return;\n        }\n        // In all other cases, scroll to top\n        window.scrollTo(0, 0);\n    });\n});\n\nexport default class App extends Component {\n    render() {\n        AOS.init({\n            once: true,\n            delay: 50,\n            duration: 500,\n            easing: 'ease-in-out',\n        });\n        // <BrowserRouter history={browserHistory} basename='/static'>\n        return (\n          <ThemeProvider theme={theme}>\n              <BrowserRouter history={browserHistory} basename='/static'>\n                  <Routes />\n              </BrowserRouter>\n          </ThemeProvider>\n        );\n    }\n}\n","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport auth, { authSaga } from './auth';\nimport loading from './loading';\nimport user, { userSaga } from './user';\n\nconst rootReducer = combineReducers({\n  auth,\n  loading,\n  user,\n});\n\nexport function* rootSaga() {\n  yield all([authSaga(), userSaga()]);\n}\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport rootReducer, {rootSaga} from './modules';\nimport {applyMiddleware, createStore} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport {Provider} from \"react-redux\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(sagaMiddleware)),\n)\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}